{"version":3,"sources":["services/authService.js","services/httpServices.js","services/userService.js","components/pages/signin.jsx","utils/auth.jsx","components/pages/CustomerRegistration.jsx","components/pages/ShopOwnerRegistration.jsx","components/pages/registration.jsx","components/pages/customer/components/shop.jsx","services/dataServices.js","components/pages/customer/shopPage/getLocation.jsx","components/pages/customer/components/filter.jsx","components/pages/customer/shops.jsx","components/pages/customer/components/editBookings.jsx","components/pages/customer/components/slotCard.jsx","components/pages/customer/myBookings.jsx","components/pages/customer/profile.jsx","components/pages/customer/Logout.js","components/pages/customer/shopPage/Adress.jsx","components/pages/customer/shopPage/Overview.jsx","components/pages/customer/shopPage/Order.jsx","components/pages/customer/shopPage/Image.jsx","components/pages/customer/shopPage/Reviews.jsx","components/pages/customer/shopPage/giveReview.jsx","components/pages/customer/shopPage/shopPage.jsx","components/pages/customer/mainPage.jsx","components/AppComponent.jsx","components/home.jsx","components/pages/shopowner/shopLogout.js","components/pages/shopowner/components/graph.jsx","components/pages/shopowner/components/simpleStat.jsx","components/pages/shopowner/components/UpcomingBookingsTable.jsx","components/pages/shopowner/dashBoard.jsx","components/pages/shopowner/viewBookings.jsx","components/pages/shopowner/ShopProfile.jsx","components/pages/shopowner/shopMainPage.jsx","components/notFound.jsx","App.js","serviceWorker.js","index.js"],"names":["token","jwt","localStorage","getItem","alert","window","location","Axios","require","interceptors","response","use","error","status","console","log","Promise","reject","get","api","params","headers","post","put","delete","protectedGet","Authorization","protectedPost","body","protectedPut","protectedDelete","data","uploadForm","Hash","customerRegister","firstName","lastName","email","password","confirmPassword","phoneNumber","address","streetname","cityName","stateName","country","userData","gender","http","customerSignup","ShopRegister","shopName","openingHour","openingMinute","closingHour","closingMinute","tags","bookingTimeUnit","maxConcurrent","payment_modes","discount","ownerName","parseInt","shopSignup","login","logout","bookNewSlot","id","itemList","period","slot","otp","slotName","toLowerCase","purchaseItems","join","isShop","shopId","slotGroupBegins","start","slotGroupEnds","end","customerName","bookSlot","updateBookings","editBooking","updateShopDetails","updateShop","updateCustomerDetails","updateCustomer","userDetails","deleteSlots","giveReview","rating","text","giveRating","review","getShopDetailsAuthorized","shopData","uploadPhoto","file","uploadProfilePhoto","uploadShopPhoto","uploadShopProfilePhoto","validateSlotByOtp","bookingId","validateSlot","qrdata","Joi","SignIn","state","errors","schema","string","min","max","required","label","checked","isLoading","validateProperty","name","value","Obj","rules","object","validate","details","message","handleChange","input","currentTarget","setState","handleSwitch","event","result","abortEarly","item","path","handleSubmit","e","forceUpdate","preventDefault","doSubmit","handleSignup","props","history","push","handleClose","a","setItem","handleAuth","this","classes","Container","component","maxWidth","CssBaseline","CircularProgress","className","paper","Avatar","avatar","Typography","variant","form","onSubmit","TextField","margin","fullWidth","type","autoComplete","autoFocus","onChange","helperText","Button","color","submit","Grid","container","xs","Link","href","onClick","style","cursor","Component","withRouter","withStyles","theme","spacing","display","flexDirection","alignItems","backgroundColor","palette","secondary","main","width","marginTop","getStateWiseCity","sname","cityList","filter","c","localeCompare","CustomerRegistration","streetName","zipCode","formData","states","handleSelect","target","handleState","handleHidden","tabValue","index","handleSignin","onSuccess","statesList","noValidate","hidden","Box","borderColor","border","borderRadius","m","p","sm","FormControl","formControl","InputLabel","Select","labelId","MenuItem","map","i","key","city","defaultValue","InputProps","readOnly","FormControlLabel","control","Checkbox","justify","borderStyles","ShopOwnerRegistration","handleNumberChange","updateLocation","addr","description","handleMultipleSelect","Paper","root","IconButton","iconButton","aria-label","onSelect","inputProps","selectedItems","items","chips","flexWrap","chip","padding","marginLeft","flex","divider","height","withTheme","MultipleSelect","getStyles","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MenuProps","PaperProps","maxHeight","multiple","Input","renderValue","selected","Chip","SignUp","open","auth","square","Tabs","indicatorColor","textColor","Tab","Dialog","onClose","aria-labelledby","Shop","imWidth","handleClick","openedNow","d","Date","currentOffset","getTimezoneOffset","ISTTime","getTime","openingTime","closingTime","setHours","setMinutes","currentTime","getHours","getMinutes","time","t","hour","minute","setSeconds","toLocaleTimeString","innerWidth","imageUrl","distancemetric","openingTimeIST","closingTimeIST","ratings","shopRating","travelDuration","distance","imgUrl","boxShadow","cover","direction","bim","backg","marginBottom","backgroundImage","background","fontSize","align","gutterBottom","paddingLeft","marginRight","icon","paddingBottom","Math","round","Divider","endIcon","content","controls","playIcon","backgroundSize","backgroundPosition","getShopList","r","rad","shopList","userLocation","radius","getShopDetails","getShopBookings","myBookings","CurrentLocation","coordinate","openDialogue","handleAddress","getLocation","xl","lg","DialogContent","orientation","FilterCard","openClose","showAll","isOpen","slotTypes","Morning","Afternoon","Evening","customerRatings","slotType","customerRating","handleCheck","updateFilter","handleDR","distanceRating","ascOrder","handleSlot","handleRating","md","Shops","updateShopList","filterList","list","length","shop","tag","includes","newList","concat","getItemList","newValue","Array","from","Set","Slider","step","marks","valueLabelDisplay","GridList","cellHeight","cols","GridListTile","userAddress","flexGrow","timeString","h","hour12","EditBookings","bookingDetails","split","arrivalHour","slotLabel","noticeBody","submitted","success","getSlotTimes","slotTimeArr","stime","setTime","interval","handleBooking","setSlotTime","handlePeriod","handleSlotTime","find","button","SuccessNoticeBody","arrivalMinute","deliveryHour","deliveryMinute","src","QRCode","SlotCard","expanded","handleSlotChange","newData","handleExpandClick","isEditable","isExpired","handleEdit","Card","activeRoot","onMouseOver","onMouseOut","CardHeader","title","media","CardContent","CardActions","disableSpacing","disabled","startIcon","handleDelete","clsx","expand","expandOpen","aria-expanded","Collapse","in","timeout","unmountOnExit","expiredRoot","transform","transition","transitions","create","duration","shortest","MyBookings","slotData","showPastSlot","editDialogue","errorMessage","ctime","slotStartTme","createdAt","copy","numberOfActiveBookngs","count","Fragment","size","cards","buildFileSelector","fileSelector","document","createElement","setAttribute","MyProfile","edit","selectedFile","toDateString","handleFile","click","uploadFile","FormData","append","url","URL","createObjectURL","updateFile","files","userCredentials","largeAvatar","htmlFor","EditForm","shouldAwait","Logout","clear","Address","Order","random","openModal","dialogueData","periodData","splice","handleAddItem","paddingTop","onDelete","Object","keys","aria-describedby","ModalNoticeBody","Image","tileData","img","author","tile","alt","justifyContent","overflow","Review","sortType","sorting","reviews","val","ratingId","customIcons","1","2","3","4","5","IconContainer","other","ReviewCard","liked","handleLike","date","str","toLocaleDateString","year","month","day","customerId","Rating","getLabelText","IconContainerComponent","paragraph","GiveReview","write","reviewText","multiline","rows","tabs","ShopPage","tabPageNumber","getTabPage","handleTabs","handleDirection","destination","match","precision","scrollButtons","tab","noWrap","toolbarLink","toolbarSecondary","overflowX","flexShrink","MainPage","toolbar","drawer","breakpoints","up","appBar","menuButton","mixins","drawerPaper","CustomAppBarClass","anchorEl","handlePath","handleSignIn","handleSignUp","HideOnScroll","children","trigger","useScrollTrigger","undefined","Slide","appear","menuOption","Boolean","homePage","AppBar","elevation","disableGutters","Toolbar","Popover","anchorOrigin","vertical","horizontal","transformOrigin","CustomFooter","bottom","ProfileMenu","handleMenu","aria-controls","aria-haspopup","Menu","keepMounted","option","CustomAppBar","Footer","useStyles","makeStyles","textAlign","hero","backgroundRepeat","position","down","blogsContainer","promo","blogTitle","card","cardActions","cardContent","paginationContainer","Home","gutterbottom","CardMedia","image","ApexLineChart","series","options","chart","dataLabels","enabled","stroke","curve","xaxis","categories","getOptions","x","getSeries","bookedData","turnUpsData","count1","count2","row","SimpleStatCard","CustomerServedToday","UpcomingCustomer","TodayChart","plotOptions","bar","columnWidth","show","colors","yaxis","fill","opacity","UpcomingBookingsTable","bookingsData","filteredList","ct","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","ShopDashboard","response1","creationTime","response2","ViewBookings","todayOnly","updateStatus","filterData","setFilter","RowBody","getChip","handleOtp","arrivalTimeIST","deliveryTimeIST","submitOtp","Filter","minWidth","ListItemText","primary","OTP","showInputField","ShopProfile","handleClickFile","getElementById","updateImageFile","shopData2","imgURL","info","themes","ShopMainPage","NotFound","st","w","innerHeight","Item","errorPageImage","to","App","customerLogged","shopOwnerLogged","customerMenu","shopOwnerMenu","authname","darkTheme","createMuiTheme","check","ex","userLoggedIn","exact","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f9388355.chunk.js","sourcesContent":["const token = () => {\n    const jwt = localStorage.getItem(\"token\");\n\n    if (jwt) return jwt;\n    else {\n        alert(\"Please Sign In first\");\n        window.location = \"/signin\";\n        return null;\n    }\n}\n \nexport default token;","// import { Axios } from \"axios\";\nimport token from \"./authService\";\n\nconst Axios = require(\"axios\");\n\nAxios.interceptors.response.use(null, (error) => {\n    const expectedError =\n        error.response &&\n        error.response.status >= 400 &&\n        error.response.status < 500;\n    if (!expectedError) {\n        console.log(\"Logging the error from axios interceptors\", error.response);\n        alert(\"An unexpected error occured\");\n    }\n    console.log(error.response);\n    return Promise.reject(error);\n});\n\nconst protectedGet = (api, params) => {\n    const jwt = token();\n    const response = Axios.get(api, {\n        params,\n        headers: {\n            Authorization: `Bearer ${jwt}`,\n        },\n    });\n    return response;\n};\n\nconst protectedDelete = (api,body) => {\n    const jwt = token();\n    const response = Axios.delete(api, {\n        headers: {\n            Authorization: `Bearer ${jwt}`,\n        },\n        data:body,\n    });\n    return response;\n};\n\nconst protectedPost = (api, body) => {\n    const jwt = token();\n    const response = Axios.post(api, body, {\n        headers: {\n            'Authorization': `Bearer ${jwt}`,\n        },\n    });\n    return response;\n};\n\nconst uploadForm = (api, body) => {\n    const jwt = token();\n    const response = Axios.post(api, body, {\n        headers: {\n            Authorization: `Bearer ${jwt}`,\n            \"Content-Type\": \"multipart/form-data\",\n        },\n    });\n    return response;\n};\n\n// const upload = (api, file) => {\n//     const jwt = token();\n//     const response = Axios.post(api, body, {\n//         headers: {\n//             'Authorization': `Bearer ${jwt}`,\n//         },\n//     });\n//     return response;\n// };\n\n\nconst protectedPut = (api, body) => {\n    const jwt = token();\n    const response = Axios.put(api, body, {\n        headers: {\n            'Authorization': `Bearer ${jwt}`,\n        },\n    });\n    return response;\n};\n\nconst get = (api, params, headers) => {\n    return Axios.get(api, { params, headers });\n}\n\nexport default {\n    get,\n    post: Axios.post,\n    put: Axios.put,\n    delete: Axios.delete,\n    protectedGet,\n    protectedPost,\n    protectedPut,\n    protectedDelete,\n    uploadForm,\n};\n","import http from \"./httpServices\";\nimport api from \"../configApi.json\";\n\nvar Hash = require(\"sha256\");\n\nexport const customerRegister = (data) => {\n    const {\n        firstName,\n        lastName,\n        email,\n        password,\n        confirmPassword,\n        phoneNumber,\n    } = data;\n    const address =\n        data.streetname +\n        \", \" +\n        data.cityName +\n        \", \" +\n        data.stateName +\n        \", \" +\n        data.country;\n    const userData = {\n        firstName,\n        lastName,\n        email,\n        password: Hash(password),\n        confirmPassword: Hash(confirmPassword),\n        phoneNumber,\n        address,\n        gender: \"Male\",\n    };\n    const response = http.post(api.customerSignup, userData);\n\n    return response;\n};\n\nexport const ShopRegister = (data) => {\n    const {\n        firstName,\n        lastName,\n        shopName,\n        email,\n        phoneNumber,\n        password,\n        confirmPassword,\n        openingHour,\n        openingMinute,\n        closingHour,\n        closingMinute,\n        tags,\n        bookingTimeUnit,\n        maxConcurrent,\n        payment_modes,\n        discount,\n        address,\n    } = data;\n    const userData = {\n        shopName,\n        ownerName: firstName + \" \" + lastName,\n        email,\n        password: Hash(password),\n        confirmPassword: Hash(confirmPassword),\n        phoneNumber: parseInt(phoneNumber),\n        address,\n        openingHour,\n        openingMinute,\n        closingHour,\n        closingMinute,\n        tags,\n        bookingTimeUnit,\n        maxConcurrent,\n        payment_modes,\n        discount,\n    };\n    const response = http.post(api.shopSignup, userData);\n\n    return response;\n};\n\nexport const login = (email, password) => {\n    const response = http.post(api.login, {\n        email,\n        password: Hash(password),\n    });\n    return response;\n};\n\nexport const logout = () => {\n    const response = http.protectedGet(api.logout);\n    return response;\n};\n\nexport const bookNewSlot = (data, id) => {\n    const { itemList, period, slot,otp } = data;\n    const slotName = period.toLowerCase();\n    const body = {\n        purchaseItems: itemList.join(),\n        slotName: slotName,\n        isShop: false,\n        shopId: id,\n        otp,\n        slotGroupBegins: slot.start,\n        slotGroupEnds: slot.end,\n        customerName: localStorage.getItem(\"userName\"),\n    };\n    console.log(body);\n    return http.protectedPost(api.bookSlot, body);\n};\n\n// export const updateRadius = (r) => {\n//     const rad = r * 1000;\n//     console.log(\"radius\", r);\n//     return http.post(api.shopList, {\n//         userLocation: localStorage.getItem(\"userAddress\"),\n//         radius: rad,\n//     });\n// };\n\nexport const updateBookings = (data, id) => {\n    return http.protectedPut(api.editBooking + id, {\n        slotName: data.period.toLowerCase(),\n        slotGroupBegins: data.slot.start,\n        slotGroupEnds: data.slot.end,\n        isShop: false,\n    });\n};\n\nexport const updateShopDetails = (data) => {\n    return http.protectedPut(api.updateShop, { isShop: true, ...data });\n}\n\nexport const updateCustomerDetails = (data) => {\n    return http.protectedPut(api.updateCustomer, { isShop: false, ...data });\n}\n\nexport const userDetails = () => {\n    return http.protectedPost(api.userData, { isShop: false });\n}\n\nexport const deleteSlots = (id) => {\n    return http.protectedDelete(api.editBooking + id, { isShop: false });\n};\n\nexport const giveReview = (rating, shopId, text = \"\") => {\n    if (text)\n        return http.protectedPost(api.giveRating, {\n            shopId,\n            rating,\n            review: text,\n            isShop: false,\n        });\n    else\n        return http.protectedPost(api.giveRating, {\n            shopId,\n            rating,\n            isShop: false,\n        });\n};\n\nexport const getShopDetailsAuthorized = () => {\n    return http.protectedPost(api.shopData, {\n        isShop: true,\n    });\n};\n\nexport const uploadPhoto = file => {\n    return http.protectedPost(api.uploadProfilePhoto, file);\n}\n\nexport const uploadShopPhoto = file => {\n    return http.uploadForm(api.uploadShopProfilePhoto, file);\n}\n\nexport const validateSlotByOtp = (bookingId, otp) => {\n    console.log(\"validate\", bookingId + \"@@##$$\" + otp);\n    return http.protectedPost(api.validateSlot, {\n        isShop: true,\n        qrdata: bookingId + \"@@##$$\" + otp,\n    });\n}\n","import React, { Component } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { login } from \"../../services/userService\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { withRouter } from \"react-router-dom\";\n\nconst Joi = require(\"@hapi/joi\");\n\nconst useStyles = (theme) => ({\n    paper: {\n        margin: theme.spacing(1),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\nclass SignIn extends Component {\n    state = {\n        data: {\n            email: \"\",\n            password: \"\",\n        },\n        errors: {},\n        schema: {\n            email: Joi.string().min(3).max(30).required().label(\"Email\"),\n            password: Joi.string().label(\"Password\").required(),\n        },\n        checked: true,\n        isLoading: false,\n    };\n\n    validateProperty = ({ name, value }) => {\n        const Obj = { [name]: value };\n        const rules = { [name]: this.state.schema[name] };\n        // console.log(name,value,rules,Obj);\n        const { error } = Joi.object(rules).validate(Obj);\n\n        return error ? error.details[0].message : null;\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        const data = { ...this.state.data };\n        // const errorMessage = this.validateProperty(input);\n        // if(errorMessage){\n        //     this.setState({errors:{[input.name]:errorMessage}});\n        // }else this.setState({errors:{[input.name]:\"\"}});\n        data[input.name] = input.value;\n        this.setState({ data });\n        //console.log(this.state.errors);\n    };\n\n    handleSwitch = (event) => {\n        // this.setState({checked: })\n    };\n\n    validate = () => {\n        const errors = {};\n        const { data } = this.state;\n        const result = Joi.object(this.state.schema).validate(data, {\n            abortEarly: false,\n        });\n        if (!result.error) return null;\n        for (let item of result.error.details)\n            errors[item.path[0]] = item.message;\n        return errors;\n    };\n\n    handleSubmit = (e) => {\n        this.setState({ isLoading: true });\n        this.forceUpdate();\n        e.preventDefault();\n        console.log(this.state);\n        const errors = this.validate();\n        this.setState({ errors: errors ? errors : {} });\n        console.log(errors);\n        if (errors) {\n            return;\n            this.setState({ isLoading: false });\n        }\n        console.log(\"load\", this.state.isLoading);\n        this.doSubmit();\n    };\n\n    handleSignup = () => {\n        this.props.history.push(\"/signup\");\n        this.props.handleClose();\n    };\n\n    doSubmit = async () => {\n        console.log(\"load\", this.state.isLoading);\n\n        try {\n            const response = await login(\n                this.state.data.email,\n                this.state.data.password\n            );\n            localStorage.setItem(\"token\", response.data.token);\n            localStorage.setItem(\"isShop\", response.data.isShop ? \"shop\" : \"\");\n            localStorage.setItem(\"userLogged\", true);\n            console.log(response);\n            this.props.handleAuth(\n                response.data.isShop ? \"shopOwnerLogged\" : \"customerLogged\"\n            );\n            this.props.history.push(\n                response.data.isShop ? \"/shopowner\" : \"/customer\"\n            );\n        } catch (ex) {\n            console.log(ex);\n            if (ex.response.data.message) alert(ex.response.data.message);\n            else {\n                const errors = { ...ex.response.data };\n                console.log(\"error\", ex.response);\n                this.setState({ errors });\n            }\n        }\n        this.setState({ isLoading: false });\n        this.forceUpdate();\n        console.log(\"Submitted\", this.state.data);\n        console.log(\"load\", this.state.isLoading);\n    };\n\n    render() {\n        console.log(\"props\", this.props);\n        const { classes } = this.props;\n        const { errors } = this.state;\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                {this.isLoading ? (\n                    <CircularProgress />\n                ) : (\n                    <div className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Sign in\n                        </Typography>\n                        <form\n                            className={classes.form}\n                            onSubmit={this.handleSubmit}\n                        >\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                fullWidth\n                                id=\"email\"\n                                type=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                autoFocus\n                                onChange={this.handleChange}\n                                error={errors && errors.email}\n                                helperText={\n                                    errors && errors.email && errors.email\n                                }\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                onChange={this.handleChange}\n                                autoComplete=\"current-password\"\n                                error={errors && errors.password}\n                                helperText={\n                                    errors && errors.password && errors.password\n                                }\n                            />\n                            {/* <FormControlLabel\n              control={\n                <Switch\n                  checked={true}\n                  onChange={this.handleSwitch}\n                  name=\"checkedB\"\n                  color=\"primary\"\n                />\n              }\n              label=\"Primary\"\n            /> */}\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                            >\n                                Sign In\n                            </Button>\n                            <Grid container>\n                                <Grid item xs>\n                                    <Link href=\"#\" variant=\"body2\">\n                                        Forgot password?\n                                    </Link>\n                                </Grid>\n                                <Grid item>\n                                    <Link\n                                        onClick={this.handleSignup}\n                                        variant=\"body2\"\n                                        style={{ cursor: \"pointer\" }}\n                                    >\n                                        {\"Don't have an account? Sign Up\"}\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </div>\n                )}\n            </Container>\n        );\n    }\n}\n\nexport default withRouter(withStyles(useStyles)(SignIn));\n","\n\nexport const getUserDetails = () => {\n    const data={\n        name:\"John Doe\",\n        email:\"abcdjohn@yahoo.com\",\n        phoneNumber:\"+91 9452656726\",\n        imageUrl:\"https://picsum.photos/554\",\n        address:\"1600 Amphitheatre Parkway in Mountain View, California, United States\",\n    };\n    return data;\n};\n\nexport const ShopsList = (uid=\"-1\") => {\n    const shopList = [\n        {\n            uid:\"123\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/355\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:4.1,\n            \n        },\n        {\n            uid:\"124\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/340\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:3.1,\n            \n        },\n        {\n            uid:\"125\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/348\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:3.6,\n            \n        },\n        {\n            uid:\"126\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/320\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:2.3,\n            \n        },\n        {\n            uid:\"127\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/389\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:3.7,\n            \n        },\n        {\n            uid:\"128\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/337\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:4.6,\n            \n        },\n        {\n            uid:\"129\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/350\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:1.8,\n            \n        },\n        {\n            uid:\"130\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/350\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:1.8,\n            \n        }\n    ];\n    if(uid===\"-1\") return shopList;\n    else return shopList.filter(item => item.uid===uid)[0];\n}\n\nexport const getItemList = () => {\n    const items = [\n        {\n            label:\"Meat & Fish\",\n            value:[\n                \"Skinless white meat\",\"Lean cuts of red meat\",\"Oily fish\",\n                \"Luncheon meat\"\n            ]\n        },\n        {\n            label:\"Condiments\",\n            value:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ]\n        },\n        {\n            label:\"Grains and Bread\",\n            value:[\n                \"Pasta\",\"Rice\",\"Bread\",\"All-purpose flour\",\n                \"Breakfast cereal\"\n            ]\n        },\n        {\n            label:\"Dairy & Eggs\",\n            value:[\n                \"Milk\",\"Eggs\",\"Cheese\",\"Yogurt\"\n            ]\n        },\n        {\n            label:\"Oil & Fat\",\n            value:[\n                \"Cooking oil\",\"Butter\"\n            ]\n        },\n        {\n            label:\"Tinned & Dried Produce\",\n            value:[\n                \"Red kidney beans\",\"White beans\",\"Green lentils\",\n                \"Chopped tomatoes\",\"Soup\",\"Fruit, nuts, and seeds\"\n            ]\n        },\n        \n    ];\n    return items;\n}\n\nexport const getBookedSlotCustomer = () => {\n    const slots = [\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:true,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:true,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:true,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            active:true,\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:true,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:true,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:false,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:false,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:false,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:false,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:false,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:false,\n        },\n    ];\n\n    return slots;\n}\n\n\n//https://sites.google.com/site/ashishright/collections/Statewise-Cities-In-India#TOC-Andaman-Nicobar-AN-\nexport const getStateName = () => {\n    const states = [         \n        \"Andaman & Nicobar [AN]\",\n        \"Andhra Pradesh [AP]\",\n        \"Arunachal Pradesh [AR]\",\n        \"Assam [AS]\",\n        \"Bihar [BH]\",\n        \"Chandigarh [CH]\",\n        \"Chhattisgarh [CG]\",\n        \"Dadra & Nagar Haveli [DN]\",\n        \"Daman & Diu [DD]\",\n        \"Delhi [DL]\",\n        \"Goa [GO]\",\n        \"Gujarat [GU]\",\n        \"Haryana [HR]\",\n        \"Himachal Pradesh [HP]\",\n        \"Jammu & Kashmir [JK]\",\n        \"Jharkhand [JH]\",\n        \"Karnataka [KR]\",\n        \"Kerala [KL]\",\n        \"Lakshadweep [LD]\",\n        \"Madhya Pradesh [MP]\",\n        \"Maharashtra [MH]\",\n        \"Manipur [MN]\",\n        \"Meghalaya [ML]\",\n        \"Mizoram [MM]\",\n        \"Nagaland [NL]\",\n        \"Orissa [OR]\",\n        \"Pondicherry [PC]\",\n        \"Punjab [PJ]\",\n        \"Rajasthan [RJ]\",\n        \"Sikkim [SK]\",\n        \"Tamil Nadu [TN]\",\n        \"Tripura [TR]\",\n        \"Uttar Pradesh [UP]\",\n        \"Uttaranchal [UT]\",\n        \"West Bengal [WB]\",\n\n    ];\n    return states;\n}\n\n\nexport const getStateWiseCity = sname => {\n    const statelist = [\n        {\n            name:\"Andaman & Nicobar [AN]\",\n            cityList:[\n                \"Alipur\", \"Andaman Island\", \"Anderson Island\", \"Arainj-Laka-Punga\", \"Austinabad\", \"Bamboo Flat\", \"Barren Island\", \"Beadonabad\", \"Betapur\", \"Bindraban\", \"Bonington\", \"Brookesabad\", \"Cadell Point\", \"Calicut\", \"Chetamale\", \"Cinque Islands\", \"Defence Island\", \"Digilpur\", \"Dolyganj\", \"Flat Island\", \"Geinyale\", \"Great Coco Island\", \"Haddo\", \"Havelock Island\", \"Henry Lawrence Island\", \"Herbertabad\", \"Hobdaypur\", \"Ilichar\", \"Ingoie\", \"Inteview Island\", \"Jangli Ghat\", \"Jhon Lawrence Island\", \"Karen\", \"Kartara\", \"KYD Islannd\", \"Landfall Island\", \"Little Andmand\", \"Little Coco Island\", \"Long Island\", \"Maimyo\", \"Malappuram\", \"Manglutan\", \"Manpur\", \"Mitha Khari\", \"Neill Island\", \"Nicobar Island\", \"North Brother Island\", \"North Passage Island\", \"North Sentinel Island\", \"Nothen Reef Island\", \"Outram Island\", \"Pahlagaon\", \"Palalankwe\", \"Passage Island\", \"Phaiapong\", \"Phoenix Island\", \"Port Blair\", \"Preparis Island\", \"Protheroepur\", \"Rangachang\", \"Rongat\", \"Rutland Island\", \"Sabari\", \"Saddle Peak\", \"Shadipur\", \"Smith Island\", \"Sound Island\", \"South Sentinel Island\", \"Spike Island\", \"Tarmugli Island\", \"Taylerabad\", \"Titaije\", \"Toibalawe\", \"Tusonabad\", \"West Island\", \"Wimberleyganj\", \"Yadita\", \n            ]\n        },\n        {\n            name:\"Andhra Pradesh [AP]\",\n            cityList:[\n                \"Achampet\", \"Adilabad\", \"Adoni\", \"Alampur\", \"Allagadda\", \"Alur\", \"Amalapuram\", \"Amangallu\", \"Anakapalle\", \"Anantapur\", \"Andole\", \"Araku\", \"Armoor\", \"Asifabad\", \"Aswaraopet\", \"Atmakur\", \"B. Kothakota\", \"Badvel\", \"Banaganapalle\", \"Bandar\", \"Bangarupalem\", \"Banswada\", \"Bapatla\", \"Bellampalli\", \"Bhadrachalam\", \"Bhainsa\", \"Bheemunipatnam\", \"Bhimadole\", \"Bhimavaram\", \"Bhongir\", \"Bhooragamphad\", \"Boath\", \"Bobbili\", \"Bodhan\", \"Chandoor\", \"Chavitidibbalu\", \"Chejerla\", \"Chepurupalli\", \"Cherial\", \"Chevella\", \"Chinnor\", \"Chintalapudi\", \"Chintapalle\", \"Chirala\", \"Chittoor\", \"Chodavaram\", \"Cuddapah\", \"Cumbum\", \"Darsi\", \"Devarakonda\", \"Dharmavaram\", \"Dichpalli\", \"Divi\", \"Donakonda\", \"Dronachalam\", \"East Godavari\", \"Eluru\", \"Eturnagaram\", \"Gadwal\", \"Gajapathinagaram\", \"Gajwel\", \"Garladinne\", \"Giddalur\", \"Godavari\", \"Gooty\", \"Gudivada\", \"Gudur\", \"Guntur\", \"Hindupur\", \"Hunsabad\", \"Huzurabad\", \"Huzurnagar\", \"Hyderabad\", \"Ibrahimpatnam\", \"Jaggayyapet\", \"Jagtial\", \"Jammalamadugu\", \"Jangaon\", \"Jangareddygudem\", \"Jannaram\", \"Kadiri\", \"Kaikaluru\", \"Kakinada\", \"Kalwakurthy\", \"Kalyandurg\", \"Kamalapuram\", \"Kamareddy\", \"Kambadur\", \"Kanaganapalle\", \"Kandukuru\", \"Kanigiri\", \"Karimnagar\", \"Kavali\", \"Khammam\", \"Khanapur (AP)\", \"Kodangal\", \"Koduru\", \"Koilkuntla\", \"Kollapur\", \"Kothagudem\", \"Kovvur\", \"Krishna\", \"Krosuru\", \"Kuppam\", \"Kurnool\", \"Lakkireddipalli\", \"Madakasira\", \"Madanapalli\", \"Madhira\", \"Madnur\", \"Mahabubabad\", \"Mahabubnagar\", \"Mahadevapur\", \"Makthal\", \"Mancherial\", \"Mandapeta\", \"Mangalagiri\", \"Manthani\", \"Markapur\", \"Marturu\", \"Medachal\", \"Medak\", \"Medarmetla\", \"Metpalli\", \"Mriyalguda\", \"Mulug\", \"Mylavaram\", \"Nagarkurnool\", \"Nalgonda\", \"Nallacheruvu\", \"Nampalle\", \"Nandigama\", \"Nandikotkur\", \"Nandyal\", \"Narasampet\", \"Narasaraopet\", \"Narayanakhed\", \"Narayanpet\", \"Narsapur\", \"Narsipatnam\", \"Nazvidu\", \"Nelloe\", \"Nellore\", \"Nidamanur\", \"Nirmal\", \"Nizamabad\", \"Nuguru\", \"Ongole\", \"Outsarangapalle\", \"Paderu\", \"Pakala\", \"Palakonda\", \"Paland\", \"Palmaneru\", \"Pamuru\", \"Pargi\", \"Parkal\", \"Parvathipuram\", \"Pathapatnam\", \"Pattikonda\", \"Peapalle\", \"Peddapalli\", \"Peddapuram\", \"Penukonda\", \"Piduguralla\", \"Piler\", \"Pithapuram\", \"Podili\", \"Polavaram\", \"Prakasam\", \"Proddatur\", \"Pulivendla\", \"Punganur\", \"Putturu\", \"Rajahmundri\", \"Rajampeta\", \"Ramachandrapuram\", \"Ramannapet\", \"Rampachodavaram\", \"Rangareddy\", \"Rapur\", \"Rayachoti\", \"Rayadurg\", \"Razole\", \"Repalle\", \"Saluru\", \"Sangareddy\", \"Sathupalli\", \"Sattenapalle\", \"Satyavedu\", \"Shadnagar\", \"Siddavattam\", \"Siddipet\", \"Sileru\", \"Sircilla\", \"Sirpur Kagaznagar\", \"Sodam\", \"Sompeta\", \"Srikakulam\", \"Srikalahasthi\", \"Srisailam\", \"Srungavarapukota\", \"Sudhimalla\", \"Sullarpet\", \"Tadepalligudem\", \"Tadipatri\", \"Tanduru\", \"Tanuku\", \"Tekkali\", \"Tenali\", \"Thungaturthy\", \"Tirivuru\", \"Tirupathi\", \"Tuni\", \"Udaygiri\", \"Ulvapadu\", \"Uravakonda\", \"Utnor\", \"V.R. Puram\", \"Vaimpalli\", \"Vayalpad\", \"Venkatgiri\", \"Venkatgirikota\", \"Vijayawada\", \"Vikrabad\", \"Vinjamuru\", \"Vinukonda\", \"Visakhapatnam\", \"Vizayanagaram\", \"Vizianagaram\", \"Vuyyuru\", \"Wanaparthy\", \"Warangal\", \"Wardhannapet\", \"Yelamanchili\", \"Yelavaram\", \"Yeleswaram\", \"Yellandu\", \"Yellanuru\", \"Yellareddy\", \"Yerragondapalem\", \"Zahirabad\", \n            ]\n        },\n        {\n            name:\"Arunachal Pradesh [AR]\",\n            cityList:[\n                \"Along\", \"Anini\", \"Anjaw\", \"Bameng\", \"Basar\", \"Changlang\", \"Chowkhem\", \"Daporizo\", \"Dibang Valley\", \"Dirang\", \"Hayuliang\", \"Huri\", \"Itanagar\", \"Jairampur\", \"Kalaktung\", \"Kameng\", \"Khonsa\", \"Kolaring\", \"Kurung Kumey\", \"Lohit\", \"Lower Dibang Valley\", \"Lower Subansiri\", \"Mariyang\", \"Mechuka\", \"Miao\", \"Nefra\", \"Pakkekesang\", \"Pangin\", \"Papum Pare\", \"Passighat\", \"Roing\", \"Sagalee\", \"Seppa\", \"Siang\", \"Tali\", \"Taliha\", \"Tawang\", \"Tezu\", \"Tirap\", \"Tuting\", \"Upper Siang\", \"Upper Subansiri\", \"Yiang Kiag\",\n            ]\n        },\n        {\n            name:\"Assam [AS]\",\n            cityList:[\n                \"Abhayapuri\", \"Baithalangshu\", \"Barama\", \"Barpeta Road\", \"Bihupuria\", \"Bijni\", \"Bilasipara\", \"Bokajan\", \"Bokakhat\", \"Boko\", \"Bongaigaon\", \"Cachar\", \"Cachar Hills\", \"Darrang\", \"Dhakuakhana\", \"Dhemaji\", \"Dhubri\", \"Dibrugarh\", \"Digboi\", \"Diphu\", \"Goalpara\", \"Gohpur\", \"Golaghat\", \"Guwahati\", \"Hailakandi\", \"Hajo\", \"Halflong\", \"Hojai\", \"Howraghat\", \"Jorhat\", \"Kamrup\", \"Karbi Anglong\", \"Karimganj\", \"Kokarajhar\", \"Kokrajhar\", \"Lakhimpur\", \"Maibong\", \"Majuli\", \"Mangaldoi\", \"Mariani\", \"Marigaon\", \"Moranhat\", \"Morigaon\", \"Nagaon\", \"Nalbari\", \"Rangapara\", \"Sadiya\", \"Sibsagar\", \"Silchar\", \"Sivasagar\", \"Sonitpur\", \"Tarabarihat\", \"Tezpur\", \"Tinsukia\", \"Udalgiri\", \"Udalguri\", \"UdarbondhBarpeta\", \n            ]\n        },\n        {\n            name:\"Bihar [BH]\",\n            cityList:[\n                \"Adhaura\", \"Amarpur\", \"Araria\", \"Areraj\", \"Arrah\", \"Arwal\", \"Aurangabad\", \"Bagaha\", \"Banka\", \"Banmankhi\", \"Barachakia\", \"Barauni\", \"Barh\", \"Barosi\", \"Begusarai\", \"Benipatti\", \"Benipur\", \"Bettiah\", \"Bhabhua\", \"Bhagalpur\", \"Bhojpur\", \"Bidupur\", \"Biharsharif\", \"Bikram\", \"Bikramganj\", \"Birpur\", \"Buxar\", \"Chakai\", \"Champaran\", \"Chapara\", \"Dalsinghsarai\", \"Danapur\", \"Darbhanga\", \"Daudnagar\", \"Dhaka\", \"Dhamdaha\", \"Dumraon\", \"Ekma\", \"Forbesganj\", \"Gaya\", \"Gogri\", \"Gopalganj\", \"H.Kharagpur\", \"Hajipur\", \"Hathua\", \"Hilsa\", \"Imamganj\", \"Jahanabad\", \"Jainagar\", \"Jamshedpur\", \"Jamui\", \"Jehanabad\", \"Jhajha\", \"Jhanjharpur\", \"Kahalgaon\", \"Kaimur (Bhabua)\", \"Katihar\", \"Katoria\", \"Khagaria\", \"Kishanganj\", \"Korha\", \"Lakhisarai\", \"Madhepura\", \"Madhubani\", \"Maharajganj\", \"Mahua\", \"Mairwa\", \"Mallehpur\", \"Masrakh\", \"Mohania\", \"Monghyr\", \"Motihari\", \"Motipur\", \"Munger\", \"Muzaffarpur\", \"Nabinagar\", \"Nalanda\", \"Narkatiaganj\", \"Naugachia\", \"Nawada\", \"Pakribarwan\", \"Pakridayal\", \"Patna\", \"Phulparas\", \"Piro\", \"Pupri\", \"Purena\", \"Purnia\", \"Rafiganj\", \"Rajauli\", \"Ramnagar\", \"Raniganj\", \"Raxaul\", \"Rohtas\", \"Rosera\", \"S.Bakhtiarpur\", \"Saharsa\", \"Samastipur\", \"Saran\", \"Sasaram\", \"Seikhpura\", \"Sheikhpura\", \"Sheohar\", \"Sherghati\", \"Sidhawalia\", \"Singhwara\", \"Sitamarhi\", \"Siwan\", \"Sonepur\", \"Supaul\", \"Thakurganj\", \"Triveniganj\", \"Udakishanganj\", \"Vaishali\", \"Wazirganj\",     \n            ]\n        },\n        {\n            name:\"Chandigarh [CH]\",\n            cityList:[\n                \"Chandigarh\", \"Mani Marja\", \n            ]\n        },\n        {\n            name:\"Chhattisgarh [CG]\",\n            cityList:[\n                \"Ambikapur\", \"Antagarh\", \"Arang\", \"Bacheli\", \"Bagbahera\", \"Bagicha\", \"Baikunthpur\", \"Balod\", \"Balodabazar\", \"Balrampur\", \"Barpalli\", \"Basana\", \"Bastanar\", \"Bastar\", \"Bderajpur\", \"Bemetara\", \"Berla\", \"Bhairongarh\", \"Bhanupratappur\", \"Bharathpur\", \"Bhatapara\", \"Bhilai\", \"Bhilaigarh\", \"Bhopalpatnam\", \"Bijapur\", \"Bilaspur\", \"Bodla\", \"Bokaband\", \"Chandipara\", \"Chhinagarh\", \"Chhuriakala\", \"Chingmut\", \"Chuikhadan\", \"Dabhara\", \"Dallirajhara\", \"Dantewada\", \"Deobhog\", \"Dhamda\", \"Dhamtari\", \"Dharamjaigarh\", \"Dongargarh\", \"Durg\", \"Durgakondal\", \"Fingeshwar\", \"Gariaband\", \"Garpa\", \"Gharghoda\", \"Gogunda\", \"Ilamidi\", \"Jagdalpur\", \"Janjgir\", \"Janjgir-Champa\", \"Jarwa\", \"Jashpur\", \"Jashpurnagar\", \"Kabirdham-Kawardha\", \"Kanker\", \"Kasdol\", \"Kathdol\", \"Kathghora\", \"Kawardha\", \"Keskal\", \"Khairgarh\", \"Kondagaon\", \"Konta\", \"Korba\", \"Korea\", \"Kota\", \"Koyelibeda\", \"Kuakunda\", \"Kunkuri\", \"Kurud\", \"Lohadigundah\", \"Lormi\", \"Luckwada\", \"Mahasamund\", \"Makodi\", \"Manendragarh\", \"Manpur\", \"Marwahi\", \"Mohla\", \"Mungeli\", \"Nagri\", \"Narainpur\", \"Narayanpur\", \"Neora\", \"Netanar\", \"Odgi\", \"Padamkot\", \"Pakhanjur\", \"Pali\", \"Pandaria\", \"Pandishankar\", \"Parasgaon\", \"Pasan\", \"Patan\", \"Pathalgaon\", \"Pendra\", \"Pratappur\", \"Premnagar\", \"Raigarh\", \"Raipur\", \"Rajnandgaon\", \"Rajpur\", \"Ramchandrapur\", \"Saraipali\", \"Saranggarh\", \"Sarona\", \"Semaria\", \"Shakti\", \"Sitapur\", \"Sukma\", \"Surajpur\", \"Surguja\", \"Tapkara\", \"Toynar\", \"Udaipur\", \"Uproda\", \"Wadrainagar\", \n            ]\n        },\n        {\n            name:\"Dadra & Nagar Haveli [DN]\",\n            cityList:[\n                \"Amal\", \"Amli\", \"Bedpa\", \"Chikhli\", \"Dadra & Nagar Haveli\", \"Dahikhed\", \"Dolara\", \"Galonda\", \"Kanadi\", \"Karchond\", \"Khadoli\", \"Kharadpada\", \"Kherabari\", \"Kherdi\", \"Kothar\", \"Luari\", \"Mashat\", \"Rakholi\", \"Rudana\", \"Saili\", \"Sili\", \"Silvassa\", \"Sindavni\", \"Udva\", \"Umbarkoi\", \"Vansda\", \"Vasona\", \"Velugam\", \n            ]\n        },\n        {\n            name:\"Daman & Diu [DD]\",\n            cityList:[\n                \"Brancavare\", \"Dagasi\", \"Daman\", \"Diu\", \"Magarvara\", \"Nagwa\", \"Pariali\", \"Passo Covo\",\n            ]\n        },\n        {\n            name:\"Delhi [DL]\",\n            cityList:[\n                \"Central Delhi\", \"East Delhi\", \"New Delhi\", \"North Delhi\", \"North East Delhi\", \"North West Delhi\", \"South Delhi\", \"South West Delhi\", \"West Delhi\", \n            ]\n        },\n        {\n            name:\"Goa [GO]\",\n            cityList:[\n                \"Canacona\", \"Candolim\", \"Chinchinim\", \"Cortalim\", \"Goa\", \"Jua\", \"Madgaon\", \"Mahem\", \"Mapuca\", \"Marmagao\", \"Panji\", \"Ponda\", \"Sanvordem\", \"Terekhol\", \n            ]\n        },\n        {\n            name:\"Gujarat [GU]\",\n            cityList:[\n                \"Ahmedabad\", \"Ahwa\", \"Amod\", \"Amreli\", \"Anand\", \"Anjar\", \"Ankaleshwar\", \"Babra\", \"Balasinor\", \"Banaskantha\", \"Bansada\", \"Bardoli\", \"Bareja\", \"Baroda\", \"Barwala\", \"Bayad\", \"Bhachav\", \"Bhanvad\", \"Bharuch\", \"Bhavnagar\", \"Bhiloda\", \"Bhuj\", \"Billimora\", \"Borsad\", \"Botad\", \"Chanasma\", \"Chhota Udaipur\", \"Chotila\", \"Dabhoi\", \"Dahod\", \"Damnagar\", \"Dang\", \"Danta\", \"Dasada\", \"Dediapada\", \"Deesa\", \"Dehgam\", \"Deodar\", \"Devgadhbaria\", \"Dhandhuka\", \"Dhanera\", \"Dharampur\", \"Dhari\", \"Dholka\", \"Dhoraji\", \"Dhrangadhra\", \"Dhrol\", \"Dwarka\", \"Fortsongadh\", \"Gadhada\", \"Gandhi Nagar\", \"Gariadhar\", \"Godhra\", \"Gogodar\", \"Gondal\", \"Halol\", \"Halvad\", \"Harij\", \"Himatnagar\", \"Idar\", \"Jambusar\", \"Jamjodhpur\", \"Jamkalyanpur\", \"Jamnagar\", \"Jasdan\", \"Jetpur\", \"Jhagadia\", \"Jhalod\", \"Jodia\", \"Junagadh\", \"Junagarh\", \"Kalawad\", \"Kalol\", \"Kapad Wanj\", \"Keshod\", \"Khambat\", \"Khambhalia\", \"Khavda\", \"Kheda\", \"Khedbrahma\", \"Kheralu\", \"Kodinar\", \"Kotdasanghani\", \"Kunkawav\", \"Kutch\", \"Kutchmandvi\", \"Kutiyana\", \"Lakhpat\", \"Lakhtar\", \"Lalpur\", \"Limbdi\", \"Limkheda\", \"Lunavada\", \"M.M.Mangrol\", \"Mahuva\", \"Malia-Hatina\", \"Maliya\", \"Malpur\", \"Manavadar\", \"Mandvi\", \"Mangrol\", \"Mehmedabad\", \"Mehsana\", \"Miyagam\", \"Modasa\", \"Morvi\", \"Muli\", \"Mundra\", \"Nadiad\", \"Nakhatrana\", \"Nalia\", \"Narmada\", \"Naswadi\", \"Navasari\", \"Nizar\", \"Okha\", \"Paddhari\", \"Padra\", \"Palanpur\", \"Palitana\", \"Panchmahals\", \"Patan\", \"Pavijetpur\", \"Porbandar\", \"Prantij\", \"Radhanpur\", \"Rahpar\", \"Rajaula\", \"Rajkot\", \"Rajpipla\", \"Ranavav\", \"Sabarkantha\", \"Sanand\", \"Sankheda\", \"Santalpur\", \"Santrampur\", \"Savarkundla\", \"Savli\", \"Sayan\", \"Sayla\", \"Shehra\", \"Sidhpur\", \"Sihor\", \"Sojitra\", \"Sumrasar\", \"Surat\", \"Surendranagar\", \"Talaja\", \"Thara\", \"Tharad\", \"Thasra\", \"Una-Diu\", \"Upleta\", \"Vadgam\", \"Vadodara\", \"Valia\", \"Vallabhipur\", \"Valod\", \"Valsad\", \"Vanthali\", \"Vapi\", \"Vav\", \"Veraval\", \"Vijapur\", \"Viramgam\", \"Visavadar\", \"Visnagar\", \"Vyara\", \"Waghodia\", \"Wankaner\", \n            ]\n        },\n        {\n            name:\"Haryana [HR]\",\n            cityList:[\n                \"Adampur Mandi\", \"Ambala\", \"Assandh\", \"Bahadurgarh\", \"Barara\", \"Barwala\", \"Bawal\", \"Bawanikhera\", \"Bhiwani\", \"Charkhidadri\", \"Cheeka\", \"Chhachrauli\", \"Dabwali\", \"Ellenabad\", \"Faridabad\", \"Fatehabad\", \"Ferojpur Jhirka\", \"Gharaunda\", \"Gohana\", \"Gurgaon\", \"Hansi\", \"Hisar\", \"Jagadhari\", \"Jatusana\", \"Jhajjar\", \"Jind\", \"Julana\", \"Kaithal\", \"Kalanaur\", \"Kalanwali\", \"Kalka\", \"Karnal\", \"Kosli\", \"Kurukshetra\", \"Loharu\", \"Mahendragarh\", \"Meham\", \"Mewat\", \"Mohindergarh\", \"Naraingarh\", \"Narnaul\", \"Narwana\", \"Nilokheri\", \"Nuh\", \"Palwal\", \"Panchkula\", \"Panipat\", \"Pehowa\", \"Ratia\", \"Rewari\", \"Rohtak\", \"Safidon\", \"Sirsa\", \"Siwani\", \"Sonipat\", \"Tohana\", \"Tohsam\", \"Yamunanagar\", \n            ]\n        },\n        {\n            name:\"Himachal Pradesh [HP]\",\n            cityList:[\n                \"Amb\", \"Arki\", \"Banjar\", \"Bharmour\", \"Bilaspur\", \"Chamba\", \"Churah\", \"Dalhousie\", \"Dehra Gopipur\", \"Hamirpur\", \"Jogindernagar\", \"Kalpa\", \"Kangra\", \"Kinnaur\", \"Kullu\", \"Lahaul\", \"Mandi\", \"Nahan\", \"Nalagarh\", \"Nirmand\", \"Nurpur\", \"Palampur\", \"Pangi\", \"Paonta\", \"Pooh\", \"Rajgarh\", \"Rampur Bushahar\", \"Rohru\", \"Shimla\", \"Sirmaur\", \"Solan\", \"Spiti\", \"Sundernagar\", \"Theog\", \"Udaipur\", \"Una\", \n            ]\n        },\n        {\n            name:\"Jammu & Kashmir [JK]\",\n            cityList:[\n                \"Akhnoor\", \"Anantnag\", \"Badgam\", \"Bandipur\", \"Baramulla\", \"Basholi\", \"Bedarwah\", \"Budgam\", \"Doda\", \"Gulmarg\", \"Jammu\", \"Kalakot\", \"Kargil\", \"Karnah\", \"Kathua\", \"Kishtwar\", \"Kulgam\", \"Kupwara\", \"Leh\", \"Mahore\", \"Nagrota\", \"Nobra\", \"Nowshera\", \"Nyoma\", \"Padam\", \"Pahalgam\", \"Patnitop\", \"Poonch\", \"Pulwama\", \"Rajouri\", \"Ramban\", \"Ramnagar\", \"Reasi\", \"Samba\", \"Srinagar\", \"Udhampur\", \"Vaishno Devi\", \n            ]\n        },\n        {\n            name:\"Jharkhand [JH]\",\n            cityList:[\n                \"Bagodar\", \"Baharagora\", \"Balumath\", \"Barhi\", \"Barkagaon\", \"Barwadih\", \"Basia\", \"Bermo\", \"Bhandaria\", \"Bhawanathpur\", \"Bishrampur\", \"Bokaro\", \"Bolwa\", \"Bundu\", \"Chaibasa\", \"Chainpur\", \"Chakardharpur\", \"Chandil\", \"Chatra\", \"Chavparan\", \"Daltonganj\", \"Deoghar\", \"Dhanbad\", \"Dumka\", \"Dumri\", \"Garhwa\", \"Garu\", \"Ghaghra\", \"Ghatsila\", \"Giridih\", \"Godda\", \"Gomia\", \"Govindpur\", \"Gumla\", \"Hazaribagh\", \"Hunterganj\", \"Ichak\", \"Itki\", \"Jagarnathpur\", \"Jamshedpur\", \"Jamtara\", \"Japla\", \"Jharmundi\", \"Jhinkpani\", \"Jhumaritalaiya\", \"Kathikund\", \"Kharsawa\", \"Khunti\", \"Koderma\", \"Kolebira\", \"Latehar\", \"Lohardaga\", \"Madhupur\", \"Mahagama\", \"Maheshpur Raj\", \"Mandar\", \"Mandu\", \"Manoharpur\", \"Muri\", \"Nagarutatri\", \"Nala\", \"Noamundi\", \"Pakur\", \"Palamu\", \"Palkot\", \"Patan\", \"Rajdhanwar\", \"Rajmahal\", \"Ramgarh\", \"Ranchi\", \"Sahibganj\", \"Saraikela\", \"Simaria\", \"Simdega\", \"Singhbhum\", \"Tisri\", \"Torpa\", \n            ]\n        },\n        {\n            name:\"Karnataka [KR]\",\n            cityList:[\n                \"Afzalpur\", \"Ainapur\", \"Aland\", \"Alur\", \"Anekal\", \"Ankola\", \"Arsikere\", \"Athani\", \"Aurad\", \"Bableshwar\", \"Badami\", \"Bagalkot\", \"Bagepalli\", \"Bailhongal\", \"Bangalore\", \"Bangalore Rural\", \"Bangarpet\", \"Bantwal\", \"Basavakalyan\", \"Basavanabagewadi\", \"Basavapatna\", \"Belgaum\", \"Bellary\", \"Belthangady\", \"Belur\", \"Bhadravati\", \"Bhalki\", \"Bhatkal\", \"Bidar\", \"Bijapur\", \"Biligi\", \"Chadchan\", \"Challakere\", \"Chamrajnagar\", \"Channagiri\", \"Channapatna\", \"Channarayapatna\", \"Chickmagalur\", \"Chikballapur\", \"Chikkaballapur\", \"Chikkanayakanahalli\", \"Chikkodi\", \"Chikmagalur\", \"Chincholi\", \"Chintamani\", \"Chitradurga\", \"Chittapur\", \"Cowdahalli\", \"Davanagere\", \"Deodurga\", \"Devangere\", \"Devarahippargi\", \"Dharwad\", \"Doddaballapur\", \"Gadag\", \"Gangavathi\", \"Gokak\", \"Gowribdanpur\", \"Gubbi\", \"Gulbarga\", \"Gundlupet\", \"H.B.Halli\", \"H.D. Kote\", \"Haliyal\", \"Hampi\", \"Hangal\", \"Harapanahalli\", \"Hassan\", \"Haveri\", \"Hebri\", \"Hirekerur\", \"Hiriyur\", \"Holalkere\", \"Holenarsipur\", \"Honnali\", \"Honnavar\", \"Hosadurga\", \"Hosakote\", \"Hosanagara\", \"Hospet\", \"Hubli\", \"Hukkeri\", \"Humnabad\", \"Hungund\", \"Hunsagi\", \"Hunsur\", \"Huvinahadagali\", \"Indi\", \"Jagalur\", \"Jamkhandi\", \"Jewargi\", \"Joida\", \"K.R. Nagar\", \"Kadur\", \"Kalghatagi\", \"Kamalapur\", \"Kanakapura\", \"Kannada\", \"Kargal\", \"Karkala\", \"Karwar\", \"Khanapur\", \"Kodagu\", \"Kolar\", \"Kollegal\", \"Koppa\", \"Koppal\", \"Koratageri\", \"Krishnarajapet\", \"Kudligi\", \"Kumta\", \"Kundapur\", \"Kundgol\", \"Kunigal\", \"Kurugodu\", \"Kustagi\", \"Lingsugur\", \"Madikeri\", \"Madugiri\", \"Malavalli\", \"Malur\", \"Mandya\", \"Mangalore\", \"Manipal\", \"Manvi\", \"Mashal\", \"Molkalmuru\", \"Mudalgi\", \"Muddebihal\", \"Mudhol\", \"Mudigere\", \"Mulbagal\", \"Mundagod\", \"Mundargi\", \"Murugod\", \"Mysore\", \"Nagamangala\", \"Nanjangud\", \"Nargund\", \"Narsimrajapur\", \"Navalgund\", \"Nelamangala\", \"Nimburga\", \"Pandavapura\", \"Pavagada\", \"Puttur\", \"Raibag\", \"Raichur\", \"Ramdurg\", \"Ranebennur\", \"Ron\", \"Sagar\", \"Sakleshpur\", \"Salkani\", \"Sandur\", \"Saundatti\", \"Savanur\", \"Sedam\", \"Shahapur\", \"Shankarnarayana\", \"Shikaripura\", \"Shimoga\", \"Shirahatti\", \"Shorapur\", \"Siddapur\", \"Sidlaghatta\", \"Sindagi\", \"Sindhanur\", \"Sira\", \"Sirsi\", \"Siruguppa\", \"Somwarpet\", \"Sorab\", \"Sringeri\", \"Sriniwaspur\", \"Srirangapatna\", \"Sullia\", \"T. Narsipur\", \"Tallak\", \"Tarikere\", \"Telgi\", \"Thirthahalli\", \"Tiptur\", \"Tumkur\", \"Turuvekere\", \"Udupi\", \"Virajpet\", \"Wadi\", \"Yadgiri\", \"Yelburga\", \"Yellapur\", \n            ]\n        },\n        {\n            name:\"Kerala [KL]\",\n            cityList:[\n                \"Adimaly\", \"Adoor\", \"Agathy\", \"Alappuzha\", \"Alathur\", \"Alleppey\", \"Alwaye\", \"Amini\", \"Androth\", \"Attingal\", \"Badagara\", \"Bitra\", \"Calicut\", \"Cannanore\", \"Chetlet\", \"Ernakulam\", \"Idukki\", \"Irinjalakuda\", \"Kadamath\", \"Kalpeni\", \"Kalpetta\", \"Kanhangad\", \"Kanjirapally\", \"Kannur\", \"Karungapally\", \"Kasargode\", \"Kavarathy\", \"Kiltan\", \"Kochi\", \"Koduvayur\", \"Kollam\", \"Kottayam\", \"Kovalam\", \"Kozhikode\", \"Kunnamkulam\", \"Malappuram\", \"Mananthodi\", \"Manjeri\", \"Mannarghat\", \"Mavelikkara\", \"Minicoy\", \"Munnar\", \"Muvattupuzha\", \"Nedumandad\", \"Nedumgandam\", \"Nilambur\", \"Palai\", \"Palakkad\", \"Palghat\", \"Pathaanamthitta\", \"Pathanamthitta\", \"Payyanur\", \"Peermedu\", \"Perinthalmanna\", \"Perumbavoor\", \"Punalur\", \"Quilon\", \"Ranni\", \"Shertallai\", \"Shoranur\", \"Taliparamba\", \"Tellicherry\", \"Thiruvananthapuram\", \"Thodupuzha\", \"Thrissur\", \"Tirur\", \"Tiruvalla\", \"Trichur\", \"Trivandrum\", \"Uppala\", \"Vadakkanchery\", \"Vikom\", \"Wayanad\", \n            ]\n        },\n        {\n            name:\"Lakshadweep [LD]\",\n            cityList:[\n                \"Agatti Island\", \"Bingaram Island\", \"Bitra Island\", \"Chetlat Island\", \"Kadmat Island\", \"Kalpeni Island\", \"Kavaratti Island\", \"Kiltan Island\", \"Lakshadweep Sea\", \"Minicoy Island\", \"North Island\", \"South Island\", \n            ]\n        },\n        {\n            name:\"Madhya Pradesh [MP]\",\n            cityList:[\n                \"Agar\", \"Ajaigarh\", \"Alirajpur\", \"Amarpatan\", \"Amarwada\", \"Ambah\", \"Anuppur\", \"Arone\", \"Ashoknagar\", \"Ashta\", \"Atner\", \"Babaichichli\", \"Badamalhera\", \"Badarwsas\", \"Badnagar\", \"Badnawar\", \"Badwani\", \"Bagli\", \"Baihar\", \"Balaghat\", \"Baldeogarh\", \"Baldi\", \"Bamori\", \"Banda\", \"Bandhavgarh\", \"Bareli\", \"Baroda\", \"Barwaha\", \"Barwani\", \"Batkakhapa\", \"Begamganj\", \"Beohari\", \"Berasia\", \"Berchha\", \"Betul\", \"Bhainsdehi\", \"Bhander\", \"Bhanpura\", \"Bhikangaon\", \"Bhimpur\", \"Bhind\", \"Bhitarwar\", \"Bhopal\", \"Biaora\", \"Bijadandi\", \"Bijawar\", \"Bijaypur\", \"Bina\", \"Birsa\", \"Birsinghpur\", \"Budhni\", \"Burhanpur\", \"Buxwaha\", \"Chachaura\", \"Chanderi\", \"Chaurai\", \"Chhapara\", \"Chhatarpur\", \"Chhindwara\", \"Chicholi\", \"Chitrangi\", \"Churhat\", \"Dabra\", \"Damoh\", \"Datia\", \"Deori\", \"Deosar\", \"Depalpur\", \"Dewas\", \"Dhar\", \"Dharampuri\", \"Dindori\", \"Gadarwara\", \"Gairatganj\", \"Ganjbasoda\", \"Garoth\", \"Ghansour\", \"Ghatia\", \"Ghatigaon\", \"Ghorandogri\", \"Ghughari\", \"Gogaon\", \"Gohad\", \"Goharganj\", \"Gopalganj\", \"Gotegaon\", \"Gourihar\", \"Guna\", \"Gunnore\", \"Gwalior\", \"Gyraspur\", \"Hanumana\", \"Harda\", \"Harrai\", \"Harsud\", \"Hatta\", \"Hoshangabad\", \"Ichhawar\", \"Indore\", \"Isagarh\", \"Itarsi\", \"Jabalpur\", \"Jabera\", \"Jagdalpur\", \"Jaisinghnagar\", \"Jaithari\", \"Jaitpur\", \"Jaitwara\", \"Jamai\", \"Jaora\", \"Jatara\", \"Jawad\", \"Jhabua\", \"Jobat\", \"Jora\", \"Kakaiya\", \"Kannod\", \"Kannodi\", \"Karanjia\", \"Kareli\", \"Karera\", \"Karhal\", \"Karpa\", \"Kasrawad\", \"Katangi\", \"Katni\", \"Keolari\", \"Khachrod\", \"Khajuraho\", \"Khakner\", \"Khalwa\", \"Khandwa\", \"Khaniadhana\", \"Khargone\", \"Khategaon\", \"Khetia\", \"Khilchipur\", \"Khirkiya\", \"Khurai\", \"Kolaras\", \"Kotma\", \"Kukshi\", \"Kundam\", \"Kurwai\", \"Kusmi\", \"Laher\", \"Lakhnadon\", \"Lamta\", \"Lanji\", \"Lateri\", \"Laundi\", \"Maheshwar\", \"Mahidpurcity\", \"Maihar\", \"Majhagwan\", \"Majholi\", \"Malhargarh\", \"Manasa\", \"Manawar\", \"Mandla\", \"Mandsaur\", \"Manpur\", \"Mauganj\", \"Mawai\", \"Mehgaon\", \"Mhow\", \"Morena\", \"Multai\", \"Mungaoli\", \"Nagod\", \"Nainpur\", \"Narsingarh\", \"Narsinghpur\", \"Narwar\", \"Nasrullaganj\", \"Nateran\", \"Neemuch\", \"Niwari\", \"Niwas\", \"Nowgaon\", \"Pachmarhi\", \"Pandhana\", \"Pandhurna\", \"Panna\", \"Parasia\", \"Patan\", \"Patera\", \"Patharia\", \"Pawai\", \"Petlawad\", \"Pichhore\", \"Piparia\", \"Pohari\", \"Prabhapattan\", \"Punasa\", \"Pushprajgarh\", \"Raghogarh\", \"Raghunathpur\", \"Rahatgarh\", \"Raisen\", \"Rajgarh\", \"Rajpur\", \"Ratlam\", \"Rehli\", \"Rewa\", \"Sabalgarh\", \"Sagar\", \"Sailana\", \"Sanwer\", \"Sarangpur\", \"Sardarpur\", \"Satna\", \"Saunsar\", \"Sehore\", \"Sendhwa\", \"Seondha\", \"Seoni\", \"Seonimalwa\", \"Shahdol\", \"Shahnagar\", \"Shahpur\", \"Shajapur\", \"Sheopur\", \"Sheopurkalan\", \"Shivpuri\", \"Shujalpur\", \"Sidhi\", \"Sihora\", \"Silwani\", \"Singrauli\", \"Sirmour\", \"Sironj\", \"Sitamau\", \"Sohagpur\", \"Sondhwa\", \"Sonkatch\", \"Susner\", \"Tamia\", \"Tarana\", \"Tendukheda\", \"Teonthar\", \"Thandla\", \"Tikamgarh\", \"Timarani\", \"Udaipura\", \"Ujjain\", \"Umaria\", \"Umariapan\", \"Vidisha\", \"Vijayraghogarh\", \"Waraseoni\", \"Zhirnia\", \n            ]\n        },\n        {\n            name:\"Maharashtra [MH]\",\n            cityList:[\n                \"Achalpur\", \"Aheri\", \"Ahmednagar\", \"Ahmedpur\", \"Ajara\", \"Akkalkot\", \"Akola\", \"Akole\", \"Akot\", \"Alibagh\", \"Amagaon\", \"Amalner\", \"Ambad\", \"Ambejogai\", \"Amravati\", \"Arjuni Merogaon\", \"Arvi\", \"Ashti\", \"Atpadi\", \"Aurangabad\", \"Ausa\", \"Babhulgaon\", \"Balapur\", \"Baramati\", \"Barshi Takli\", \"Barsi\", \"Basmatnagar\", \"Bassein\", \"Beed\", \"Bhadrawati\", \"Bhamregadh\", \"Bhandara\", \"Bhir\", \"Bhiwandi\", \"Bhiwapur\", \"Bhokar\", \"Bhokardan\", \"Bhoom\", \"Bhor\", \"Bhudargad\", \"Bhusawal\", \"Billoli\", \"Brahmapuri\", \"Buldhana\", \"Butibori\", \"Chalisgaon\", \"Chamorshi\", \"Chandgad\", \"Chandrapur\", \"Chandur\", \"Chanwad\", \"Chhikaldara\", \"Chikhali\", \"Chinchwad\", \"Chiplun\", \"Chopda\", \"Chumur\", \"Dahanu\", \"Dapoli\", \"Darwaha\", \"Daryapur\", \"Daund\", \"Degloor\", \"Delhi Tanda\", \"Deogad\", \"Deolgaonraja\", \"Deori\", \"Desaiganj\", \"Dhadgaon\", \"Dhanora\", \"Dharani\", \"Dhiwadi\", \"Dhule\", \"Dhulia\", \"Digras\", \"Dindori\", \"Edalabad\", \"Erandul\", \"Etapalli\", \"Gadhchiroli\", \"Gadhinglaj\", \"Gaganbavada\", \"Gangakhed\", \"Gangapur\", \"Gevrai\", \"Ghatanji\", \"Golegaon\", \"Gondia\", \"Gondpipri\", \"Goregaon\", \"Guhagar\", \"Hadgaon\", \"Hatkangale\", \"Hinganghat\", \"Hingoli\", \"Hingua\", \"Igatpuri\", \"Indapur\", \"Islampur\", \"Jalgaon\", \"Jalna\", \"Jamkhed\", \"Jamner\", \"Jath\", \"Jawahar\", \"Jintdor\", \"Junnar\", \"Kagal\", \"Kaij\", \"Kalamb\", \"Kalamnuri\", \"Kallam\", \"Kalmeshwar\", \"Kalwan\", \"Kalyan\", \"Kamptee\", \"Kandhar\", \"Kankavali\", \"Kannad\", \"Karad\", \"Karjat\", \"Karmala\", \"Katol\", \"Kavathemankal\", \"Kedgaon\", \"Khadakwasala\", \"Khamgaon\", \"Khed\", \"Khopoli\", \"Khultabad\", \"Kinwat\", \"Kolhapur\", \"Kopargaon\", \"Koregaon\", \"Kudal\", \"Kuhi\", \"Kurkheda\", \"Kusumba\", \"Lakhandur\", \"Langa\", \"Latur\", \"Lonar\", \"Lonavala\", \"Madangad\", \"Madha\", \"Mahabaleshwar\", \"Mahad\", \"Mahagaon\", \"Mahasala\", \"Mahaswad\", \"Malegaon\", \"Malgaon\", \"Malgund\", \"Malkapur\", \"Malsuras\", \"Malwan\", \"Mancher\", \"Mangalwedha\", \"Mangaon\", \"Mangrulpur\", \"Manjalegaon\", \"Manmad\", \"Maregaon\", \"Mehda\", \"Mekhar\", \"Mohadi\", \"Mohol\", \"Mokhada\", \"Morshi\", \"Mouda\", \"Mukhed\", \"Mul\", \"Mumbai\", \"Murbad\", \"Murtizapur\", \"Murud\", \"Nagbhir\", \"Nagpur\", \"Nahavara\", \"Nanded\", \"Nandgaon\", \"Nandnva\", \"Nandurbar\", \"Narkhed\", \"Nashik\", \"Navapur\", \"Ner\", \"Newasa\", \"Nilanga\", \"Niphad\", \"Omerga\", \"Osmanabad\", \"Pachora\", \"Paithan\", \"Palghar\", \"Pali\", \"Pandharkawada\", \"Pandharpur\", \"Panhala\", \"Paranda\", \"Parbhani\", \"Parner\", \"Parola\", \"Parseoni\", \"Partur\", \"Patan\", \"Pathardi\", \"Pathari\", \"Patoda\", \"Pauni\", \"Peint\", \"Pen\", \"Phaltan\", \"Pimpalner\", \"Pirangut\", \"Poladpur\", \"Pune\", \"Pusad\", \"Pusegaon\", \"Radhanagar\", \"Rahuri\", \"Raigad\", \"Rajapur\", \"Rajgurunagar\", \"Rajura\", \"Ralegaon\", \"Ramtek\", \"Ratnagiri\", \"Raver\", \"Risod\", \"Roha\", \"Sakarwadi\", \"Sakoli\", \"Sakri\", \"Salekasa\", \"Samudrapur\", \"Sangamner\", \"Sanganeshwar\", \"Sangli\", \"Sangola\", \"Sanguem\", \"Saoner\", \"Saswad\", \"Satana\", \"Satara\", \"Sawantwadi\", \"Seloo\", \"Shahada\", \"Shahapur\", \"Shahuwadi\", \"Shevgaon\", \"Shirala\", \"Shirol\", \"Shirpur\", \"Shirur\", \"Shirwal\", \"Sholapur\", \"Shri Rampur\", \"Shrigonda\", \"Shrivardhan\", \"Sillod\", \"Sinderwahi\", \"Sindhudurg\", \"Sindkheda\", \"Sindkhedaraja\", \"Sinnar\", \"Sironcha\", \"Soyegaon\", \"Surgena\", \"Talasari\", \"Talegaon S.Ji Pant\", \"Taloda\", \"Tasgaon\", \"Thane\", \"Tirora\", \"Tiwasa\", \"Trimbak\", \"Tuljapur\", \"Tumsar\", \"Udgir\", \"Umarkhed\", \"Umrane\", \"Umrer\", \"Urlikanchan\", \"Vaduj\", \"Velhe\", \"Vengurla\", \"Vijapur\", \"Vita\", \"Wada\", \"Wai\", \"Walchandnagar\", \"Wani\", \"Wardha\", \"Warlydwarud\", \"Warora\", \"Washim\", \"Wathar\", \"Yavatmal\", \"Yawal\", \"Yeola\", \"Yeotmal\", \n            ]\n        },\n        {\n            name:\"Manipur [MN]\",\n            cityList:[\n                \"Bishnupur\", \"Chakpikarong\", \"Chandel\", \"Chattrik\", \"Churachandpur\", \"Imphal\", \"Jiribam\", \"Kakching\", \"Kalapahar\", \"Mao\", \"Mulam\", \"Parbung\", \"Sadarhills\", \"Saibom\", \"Sempang\", \"Senapati\", \"Sochumer\", \"Taloulong\", \"Tamenglong\", \"Thinghat\", \"Thoubal\", \"Ukhrul\", \n            ]\n        },\n        {\n            name:\"Meghalaya [ML]\",\n            cityList:[\n                \"Amlaren\", \"Baghmara\", \"Cherrapunjee\", \"Dadengiri\", \"Garo Hills\", \"Jaintia Hills\", \"Jowai\", \"Khasi Hills\", \"Khliehriat\", \"Mariang\", \"Mawkyrwat\", \"Nongpoh\", \"Nongstoin\", \"Resubelpara\", \"Ri Bhoi\", \"Shillong\", \"Tura\", \"Williamnagar\", \n            ]\n        },\n        {\n            name:\"Mizoram [MM]\",\n            cityList:[\n                \"Aizawl\", \"Champhai\", \"Demagiri\", \"Kolasib\", \"Lawngtlai\", \"Lunglei\", \"Mamit\", \"Saiha\", \"Serchhip\",\n            ]\n        },\n        {\n            name:\"Nagaland [NL]\",\n            cityList:[\n                \"Dimapur\", \"Jalukie\", \"Kiphire\", \"Kohima\", \"Mokokchung\", \"Mon\", \"Phek\", \"Tuensang\", \"Wokha\", \"Zunheboto\",\n            ]\n        },\n        {\n            name:\"Orissa [OR]\",\n            cityList:[\n                \"Anandapur\", \"Angul\", \"Anugul\", \"Aska\", \"Athgarh\", \"Athmallik\", \"Attabira\", \"Bagdihi\", \"Balangir\", \"Balasore\", \"Baleswar\", \"Baliguda\", \"Balugaon\", \"Banaigarh\", \"Bangiriposi\", \"Barbil\", \"Bargarh\", \"Baripada\", \"Barkot\", \"Basta\", \"Berhampur\", \"Betanati\", \"Bhadrak\", \"Bhanjanagar\", \"Bhawanipatna\", \"Bhubaneswar\", \"Birmaharajpur\", \"Bisam Cuttack\", \"Boriguma\", \"Boudh\", \"Buguda\", \"Chandbali\", \"Chhatrapur\", \"Chhendipada\", \"Cuttack\", \"Daringbadi\", \"Daspalla\", \"Deodgarh\", \"Deogarh\", \"Dhanmandal\", \"Dharamgarh\", \"Dhenkanal\", \"Digapahandi\", \"Dunguripali\", \"G. Udayagiri\", \"Gajapati\", \"Ganjam\", \"Ghatgaon\", \"Gudari\", \"Gunupur\", \"Hemgiri\", \"Hindol\", \"Jagatsinghapur\", \"Jajpur\", \"Jamankira\", \"Jashipur\", \"Jayapatna\", \"Jeypur\", \"Jharigan\", \"Jharsuguda\", \"Jujumura\", \"Kalahandi\", \"Kalimela\", \"Kamakhyanagar\", \"Kandhamal\", \"Kantabhanji\", \"Kantamal\", \"Karanjia\", \"Kashipur\", \"Kendrapara\", \"Kendujhar\", \"Keonjhar\", \"Khalikote\", \"Khordha\", \"Khurda\", \"Komana\", \"Koraput\", \"Kotagarh\", \"Kuchinda\", \"Lahunipara\", \"Laxmipur\", \"M. Rampur\", \"Malkangiri\", \"Mathili\", \"Mayurbhanj\", \"Mohana\", \"Motu\", \"Nabarangapur\", \"Naktideul\", \"Nandapur\", \"Narlaroad\", \"Narsinghpur\", \"Nayagarh\", \"Nimapara\", \"Nowparatan\", \"Nowrangapur\", \"Nuapada\", \"Padampur\", \"Paikamal\", \"Palla Hara\", \"Papadhandi\", \"Parajang\", \"Pardip\", \"Parlakhemundi\", \"Patnagarh\", \"Pattamundai\", \"Phiringia\", \"Phulbani\", \"Puri\", \"Puruna Katak\", \"R. Udayigiri\", \"Rairakhol\", \"Rairangpur\", \"Rajgangpur\", \"Rajkhariar\", \"Rayagada\", \"Rourkela\", \"Sambalpur\", \"Sohela\", \"Sonapur\", \"Soro\", \"Subarnapur\", \"Sunabeda\", \"Sundergarh\", \"Surada\", \"T. Rampur\", \"Talcher\", \"Telkoi\", \"Titlagarh\", \"Tumudibandha\", \"Udala\", \"Umerkote\",\n            ]\n        },\n        {\n            name:\"Pondicherry [PC]\",\n            cityList:[\n                \"Bahur\", \"Karaikal\", \"Mahe\", \"Pondicherry\", \"Purnankuppam\", \"Valudavur\", \"Villianur\", \"Yanam\", \n            ]\n        },\n        {\n            name:\"Punjab [PJ]\",\n            cityList:[\n                \"Abohar\", \"Ajnala\", \"Amritsar\", \"Balachaur\", \"Barnala\", \"Batala\", \"Bathinda\", \"Chandigarh\", \"Dasua\", \"Dinanagar\", \"Faridkot\", \"Fatehgarh Sahib\", \"Fazilka\", \"Ferozepur\", \"Garhashanker\", \"Goindwal\", \"Gurdaspur\", \"Guruharsahai\", \"Hoshiarpur\", \"Jagraon\", \"Jalandhar\", \"Jugial\", \"Kapurthala\", \"Kharar\", \"Kotkapura\", \"Ludhiana\", \"Malaut\", \"Malerkotla\", \"Mansa\", \"Moga\", \"Muktasar\", \"Nabha\", \"Nakodar\", \"Nangal\", \"Nawanshahar\", \"Nawanshahr\", \"Pathankot\", \"Patiala\", \"Patti\", \"Phagwara\", \"Phillaur\", \"Phulmandi\", \"Quadian\", \"Rajpura\", \"Raman\", \"Rayya\", \"Ropar\", \"Rupnagar\", \"Samana\", \"Samrala\", \"Sangrur\", \"Sardulgarh\", \"Sarhind\", \"SAS Nagar\", \"Sultanpur Lodhi\", \"Sunam\", \"Tanda Urmar\", \"Taran Taran\", \"Zira\", \n            ]\n        },\n        {\n            name:\"Rajasthan [RJ]\",\n            cityList:[\n                \"Abu Road\", \"Ahore\", \"Ajmer\", \"Aklera\", \"Alwar\", \"Amber\", \"Amet\", \"Anupgarh\", \"Asind\", \"Aspur\", \"Atru\", \"Bagidora\", \"Bali\", \"Bamanwas\", \"Banera\", \"Bansur\", \"Banswara\", \"Baran\", \"Bari\", \"Barisadri\", \"Barmer\", \"Baseri\", \"Bassi\", \"Baswa\", \"Bayana\", \"Beawar\", \"Begun\", \"Behror\", \"Bhadra\", \"Bharatpur\", \"Bhilwara\", \"Bhim\", \"Bhinmal\", \"Bikaner\", \"Bilara\", \"Bundi\", \"Chhabra\", \"Chhipaborad\", \"Chirawa\", \"Chittorgarh\", \"Chohtan\", \"Churu\", \"Dantaramgarh\", \"Dausa\", \"Deedwana\", \"Deeg\", \"Degana\", \"Deogarh\", \"Deoli\", \"Desuri\", \"Dhariawad\", \"Dholpur\", \"Digod\", \"Dudu\", \"Dungarpur\", \"Dungla\", \"Fatehpur\", \"Gangapur\", \"Gangdhar\", \"Gerhi\", \"Ghatol\", \"Girwa\", \"Gogunda\", \"Hanumangarh\", \"Hindaun\", \"Hindoli\", \"Hurda\", \"Jahazpur\", \"Jaipur\", \"Jaisalmer\", \"Jalore\", \"Jhalawar\", \"Jhunjhunu\", \"Jodhpur\", \"Kaman\", \"Kapasan\", \"Karauli\", \"Kekri\", \"Keshoraipatan\", \"Khandar\", \"Kherwara\", \"Khetri\", \"Kishanganj\", \"Kishangarh\", \"Kishangarhbas\", \"Kolayat\", \"Kota\", \"Kotputli\", \"Kotra\", \"Kotri\", \"Kumbalgarh\", \"Kushalgarh\", \"Ladnun\", \"Ladpura\", \"Lalsot\", \"Laxmangarh\", \"Lunkaransar\", \"Mahuwa\", \"Malpura\", \"Malvi\", \"Mandal\", \"Mandalgarh\", \"Mandawar\", \"Mangrol\", \"Marwar-Jn\", \"Merta\", \"Nadbai\", \"Nagaur\", \"Nainwa\", \"Nasirabad\", \"Nathdwara\", \"Nawa\", \"Neem Ka Thana\", \"Newai\", \"Nimbahera\", \"Nohar\", \"Nokha\", \"Onli\", \"Osian\", \"Pachpadara\", \"Pachpahar\", \"Padampur\", \"Pali\", \"Parbatsar\", \"Phagi\", \"Phalodi\", \"Pilani\", \"Pindwara\", \"Pipalda\", \"Pirawa\", \"Pokaran\", \"Pratapgarh\", \"Raipur\", \"Raisinghnagar\", \"Rajgarh\", \"Rajsamand\", \"Ramganj Mandi\", \"Ramgarh\", \"Rashmi\", \"Ratangarh\", \"Reodar\", \"Rupbas\", \"Sadulshahar\", \"Sagwara\", \"Sahabad\", \"Salumber\", \"Sanchore\", \"Sangaria\", \"Sangod\", \"Sapotra\", \"Sarada\", \"Sardarshahar\", \"Sarwar\", \"Sawai Madhopur\", \"Shahapura\", \"Sheo\", \"Sheoganj\", \"Shergarh\", \"Sikar\", \"Sirohi\", \"Siwana\", \"Sojat\", \"Sri Dungargarh\", \"Sri Ganganagar\", \"Sri Karanpur\", \"Sri Madhopur\", \"Sujangarh\", \"Taranagar\", \"Thanaghazi\", \"Tibbi\", \"Tijara\", \"Todaraisingh\", \"Tonk\", \"Udaipur\", \"Udaipurwati\", \"Uniayara\", \"Vallabhnagar\", \"Viratnagar\", \n            ]\n        },\n        {\n            name:\"Sikkim [SK]\",\n            cityList:[\n                \"Barmiak\", \"Be\", \"Bhurtuk\", \"Chhubakha\", \"Chidam\", \"Chubha\", \"Chumikteng\", \"Dentam\", \"Dikchu\", \"Dzongri\", \"Gangtok\", \"Gauzing\", \"Gyalshing\", \"Hema\", \"Kerung\", \"Lachen\", \"Lachung\", \"Lema\", \"Lingtam\", \"Lungthu\", \"Mangan\", \"Namchi\", \"Namthang\", \"Nanga\", \"Nantang\", \"Naya Bazar\", \"Padamachen\", \"Pakhyong\", \"Pemayangtse\", \"Phensang\", \"Rangli\", \"Rinchingpong\", \"Sakyong\", \"Samdong\", \"Singtam\", \"Siniolchu\", \"Sombari\", \"Soreng\", \"Sosing\", \"Tekhug\", \"Temi\", \"Tsetang\", \"Tsomgo\", \"Tumlong\", \"Yangang\", \"Yumtang\", \n            ]\n        },\n        {\n            name:\"Tamil Nadu [TN]\",\n            cityList:[\n                \"Ambasamudram\", \"Anamali\", \"Arakandanallur\", \"Arantangi\", \"Aravakurichi\", \"Ariyalur\", \"Arkonam\", \"Arni\", \"Aruppukottai\", \"Attur\", \"Avanashi\", \"Batlagundu\", \"Bhavani\", \"Chengalpattu\", \"Chengam\", \"Chennai\", \"Chidambaram\", \"Chingleput\", \"Coimbatore\", \"Courtallam\", \"Cuddalore\", \"Cumbum\", \"Denkanikoitah\", \"Devakottai\", \"Dharampuram\", \"Dharmapuri\", \"Dindigul\", \"Erode\", \"Gingee\", \"Gobichettipalayam\", \"Gudalur\", \"Gudiyatham\", \"Harur\", \"Hosur\", \"Jayamkondan\", \"Kallkurichi\", \"Kanchipuram\", \"Kangayam\", \"Kanyakumari\", \"Karaikal\", \"Karaikudi\", \"Karur\", \"Keeranur\", \"Kodaikanal\", \"Kodumudi\", \"Kotagiri\", \"Kovilpatti\", \"Krishnagiri\", \"Kulithalai\", \"Kumbakonam\", \"Kuzhithurai\", \"Madurai\", \"Madurantgam\", \"Manamadurai\", \"Manaparai\", \"Mannargudi\", \"Mayiladuthurai\", \"Mayiladutjurai\", \"Mettupalayam\", \"Metturdam\", \"Mudukulathur\", \"Mulanur\", \"Musiri\", \"Nagapattinam\", \"Nagarcoil\", \"Namakkal\", \"Nanguneri\", \"Natham\", \"Neyveli\", \"Nilgiris\", \"Oddanchatram\", \"Omalpur\", \"Ootacamund\", \"Ooty\", \"Orathanad\", \"Palacode\", \"Palani\", \"Palladum\", \"Papanasam\", \"Paramakudi\", \"Pattukottai\", \"Perambalur\", \"Perundurai\", \"Pollachi\", \"Polur\", \"Pondicherry\", \"Ponnamaravathi\", \"Ponneri\", \"Pudukkottai\", \"Rajapalayam\", \"Ramanathapuram\", \"Rameshwaram\", \"Ranipet\", \"Rasipuram\", \"Salem\", \"Sankagiri\", \"Sankaran\", \"Sathiyamangalam\", \"Sivaganga\", \"Sivakasi\", \"Sriperumpudur\", \"Srivaikundam\", \"Tenkasi\", \"Thanjavur\", \"Theni\", \"Thirumanglam\", \"Thiruraipoondi\", \"Thoothukudi\", \"Thuraiyure\", \"Tindivanam\", \"Tiruchendur\", \"Tiruchengode\", \"Tiruchirappalli\", \"Tirunelvelli\", \"Tirupathur\", \"Tirupur\", \"Tiruttani\", \"Tiruvallur\", \"Tiruvannamalai\", \"Tiruvarur\", \"Tiruvellore\", \"Tiruvettipuram\", \"Trichy\", \"Tuticorin\", \"Udumalpet\", \"Ulundurpet\", \"Usiliampatti\", \"Uthangarai\", \"Valapady\", \"Valliyoor\", \"Vaniyambadi\", \"Vedasandur\", \"Vellore\", \"Velur\", \"Vilathikulam\", \"Villupuram\", \"Virudhachalam\", \"Virudhunagar\", \"Wandiwash\", \"Yercaud\", \n            ]\n        },\n        {\n            name:\"Tripura [TR]\",\n            cityList:[\n                \"Agartala\", \"Ambasa\", \"Bampurbari\", \"Belonia\", \"Dhalai\", \"Dharam Nagar\", \"Kailashahar\", \"Kamal Krishnabari\", \"Khopaiyapara\", \"Khowai\", \"Phuldungsei\", \"Radha Kishore Pur\", \"Tripura\", \n            ]\n        },\n        {\n            name:\"Uttar Pradesh [UP]\",\n            cityList:[\n                \"Achhnera\", \"Agra\", \"Akbarpur\", \"Aliganj\", \"Aligarh\", \"Allahabad\", \"Ambedkar Nagar\", \"Amethi\", \"Amiliya\", \"Amroha\", \"Anola\", \"Atrauli\", \"Auraiya\", \"Azamgarh\", \"Baberu\", \"Badaun\", \"Baghpat\", \"Bagpat\", \"Baheri\", \"Bahraich\", \"Ballia\", \"Balrampur\", \"Banda\", \"Bansdeeh\", \"Bansgaon\", \"Bansi\", \"Barabanki\", \"Bareilly\", \"Basti\", \"Bhadohi\", \"Bharthana\", \"Bharwari\", \"Bhogaon\", \"Bhognipur\", \"Bidhuna\", \"Bijnore\", \"Bikapur\", \"Bilari\", \"Bilgram\", \"Bilhaur\", \"Bindki\", \"Bisalpur\", \"Bisauli\", \"Biswan\", \"Budaun\", \"Budhana\", \"Bulandshahar\", \"Bulandshahr\", \"Capianganj\", \"Chakia\", \"Chandauli\", \"Charkhari\", \"Chhata\", \"Chhibramau\", \"Chirgaon\", \"Chitrakoot\", \"Chunur\", \"Dadri\", \"Dalmau\", \"Dataganj\", \"Debai\", \"Deoband\", \"Deoria\", \"Derapur\", \"Dhampur\", \"Domariyaganj\", \"Dudhi\", \"Etah\", \"Etawah\", \"Faizabad\", \"Farrukhabad\", \"Fatehpur\", \"Firozabad\", \"Garauth\", \"Garhmukteshwar\", \"Gautam Buddha Nagar\", \"Ghatampur\", \"Ghaziabad\", \"Ghazipur\", \"Ghosi\", \"Gonda\", \"Gorakhpur\", \"Gunnaur\", \"Haidergarh\", \"Hamirpur\", \"Hapur\", \"Hardoi\", \"Harraiya\", \"Hasanganj\", \"Hasanpur\", \"Hathras\", \"Jalalabad\", \"Jalaun\", \"Jalesar\", \"Jansath\", \"Jarar\", \"Jasrana\", \"Jaunpur\", \"Jhansi\", \"Jyotiba Phule Nagar\", \"Kadipur\", \"Kaimganj\", \"Kairana\", \"Kaisarganj\", \"Kalpi\", \"Kannauj\", \"Kanpur\", \"Karchhana\", \"Karhal\", \"Karvi\", \"Kasganj\", \"Kaushambi\", \"Kerakat\", \"Khaga\", \"Khair\", \"Khalilabad\", \"Kheri\", \"Konch\", \"Kumaon\", \"Kunda\", \"Kushinagar\", \"Lalganj\", \"Lalitpur\", \"Lucknow\", \"Machlishahar\", \"Maharajganj\", \"Mahoba\", \"Mainpuri\", \"Malihabad\", \"Mariyahu\", \"Math\", \"Mathura\", \"Mau\", \"Maudaha\", \"Maunathbhanjan\", \"Mauranipur\", \"Mawana\", \"Meerut\", \"Mehraun\", \"Meja\", \"Mirzapur\", \"Misrikh\", \"Modinagar\", \"Mohamdabad\", \"Mohamdi\", \"Moradabad\", \"Musafirkhana\", \"Muzaffarnagar\", \"Nagina\", \"Najibabad\", \"Nakur\", \"Nanpara\", \"Naraini\", \"Naugarh\", \"Nawabganj\", \"Nighasan\", \"Noida\", \"Orai\", \"Padrauna\", \"Pahasu\", \"Patti\", \"Pharenda\", \"Phoolpur\", \"Phulpur\", \"Pilibhit\", \"Pitamberpur\", \"Powayan\", \"Pratapgarh\", \"Puranpur\", \"Purwa\", \"Raibareli\", \"Rampur\", \"Ramsanehi Ghat\", \"Rasara\", \"Rath\", \"Robertsganj\", \"Sadabad\", \"Safipur\", \"Sagri\", \"Saharanpur\", \"Sahaswan\", \"Sahjahanpur\", \"Saidpur\", \"Salempur\", \"Salon\", \"Sambhal\", \"Sandila\", \"Sant Kabir Nagar\", \"Sant Ravidas Nagar\", \"Sardhana\", \"Shahabad\", \"Shahganj\", \"Shahjahanpur\", \"Shikohabad\", \"Shravasti\", \"Siddharthnagar\", \"Sidhauli\", \"Sikandra Rao\", \"Sikandrabad\", \"Sitapur\", \"Siyana\", \"Sonbhadra\", \"Soraon\", \"Sultanpur\", \"Tanda\", \"Tarabganj\", \"Tilhar\", \"Unnao\", \"Utraula\", \"Varanasi\", \"Zamania\", \n            ]\n        },\n        {\n            name:\"Uttaranchal [UT]\",\n            cityList:[\n                \"Almora\", \"Bageshwar\", \"Bhatwari\", \"Chakrata\", \"Chamoli\", \"Champawat\", \"Dehradun\", \"Deoprayag\", \"Dharchula\", \"Dunda\", \"Haldwani\", \"Haridwar\", \"Joshimath\", \"Karan Prayag\", \"Kashipur\", \"Khatima\", \"Kichha\", \"Lansdown\", \"Munsiari\", \"Mussoorie\", \"Nainital\", \"Pantnagar\", \"Partapnagar\", \"Pauri Garhwal\", \"Pithoragarh\", \"Purola\", \"Rajgarh\", \"Ranikhet\", \"Roorkee\", \"Rudraprayag\", \"Tehri Garhwal\", \"Udham Singh Nagar\", \"Ukhimath\", \"Uttarkashi\", \n            ]\n        },\n        {\n            name:\"West Bengal [WB]\",\n            cityList:[\n                \"Adra\", \"Alipurduar\", \"Amlagora\", \"Arambagh\", \"Asansol\", \"Balurghat\", \"Bankura\", \"Bardhaman\", \"Basirhat\", \"Berhampur\", \"Bethuadahari\", \"Birbhum\", \"Birpara\", \"Bishanpur\", \"Bolpur\", \"Bongoan\", \"Bulbulchandi\", \"Burdwan\", \"Calcutta\", \"Canning\", \"Champadanga\", \"Contai\", \"Cooch Behar\", \"Daimond Harbour\", \"Dalkhola\", \"Dantan\", \"Darjeeling\", \"Dhaniakhali\", \"Dhuliyan\", \"Dinajpur\", \"Dinhata\", \"Durgapur\", \"Gangajalghati\", \"Gangarampur\", \"Ghatal\", \"Guskara\", \"Habra\", \"Haldia\", \"Harirampur\", \"Harishchandrapur\", \"Hooghly\", \"Howrah\", \"Islampur\", \"Jagatballavpur\", \"Jalpaiguri\", \"Jhalda\", \"Jhargram\", \"Kakdwip\", \"Kalchini\", \"Kalimpong\", \"Kalna\", \"Kandi\", \"Karimpur\", \"Katwa\", \"Kharagpur\", \"Khatra\", \"Krishnanagar\", \"Mal Bazar\", \"Malda\", \"Manbazar\", \"Mathabhanga\", \"Medinipur\", \"Mekhliganj\", \"Mirzapur\", \"Murshidabad\", \"Nadia\", \"Nagarakata\", \"Nalhati\", \"Nayagarh\", \"Parganas\", \"Purulia\", \"Raiganj\", \"Rampur Hat\", \"Ranaghat\", \"Seharabazar\", \"Siliguri\", \"Suri\", \"Takipur\", \"Tamluk\", \n            ]\n        },\n        // {\n        //     name:\"\",\n        //     cityList:[\n\n        //     ]\n        // },\n        \n    ];\n    if(!sname) return [];\n    console.log(sname);\n    //return statelist[0].cityList;\n    return statelist.filter(c => !c.name.localeCompare(sname))[0].cityList;\n}\n","import React, { Component } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { getStateName, getStateWiseCity } from \"../../utils/auth\";\nimport { customerRegister } from \"../../services/userService\";\n\nconst useStyles = (theme) => ({\n    paper: {\n        marginTop: theme.spacing(3),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        borderStyles: \"solid\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\nclass CustomerRegistration extends Component {\n    state = {\n        data: {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            phoneNumber: \"\",\n            streetName: \"\",\n            cityName: \"\",\n            zipCode: \"\",\n            country: \"India\",\n            stateName: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n        },\n        error: {},\n    };\n\n    formData = {\n        states: getStateName(),\n        cityList: getStateWiseCity(this.state.stateName),\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        let data = { ...this.state.data };\n        data[input.name] = input.value;\n        this.setState({ data });\n    };\n\n    handleSelect = ({ target: { name, value } }) => {\n        let data = { ...this.state.data };\n        data[name] = value;\n        this.setState({ data });\n    };\n\n    handleState = ({ target: { name, value } }) => {\n        let data = { ...this.state.data };\n        data[name] = value;\n        data.cityName = \"\";\n        this.setState({ data });\n    };\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(\"Registered\", this.state);\n\n        // this.props.auth(\"customerLogged\");\n        // this.props.onSuccess(\"/customer\");\n\n        try {\n            const response = await customerRegister(this.state.data);\n            console.log(response);\n            alert(\n                \"SignedUp Successfully. Check your email to verify and Signin .\"\n            );\n            window.location = \"/\";\n        } catch (ex) {\n            if (ex.response) {\n                const error = { ...ex.response.data };\n                console.log(\"error\", ex.response);\n                this.setState({ error });\n            }\n        }\n    };\n\n    handleHidden = () => {\n        return this.props.tabValue !== this.props.index;\n    };\n\n    handleSignin = () => {\n        this.props.onSuccess();\n    };\n\n    render() {\n        console.log(this.state.data);\n        const { classes } = this.props;\n        const { states: statesList, cityList } = this.formData;\n        const { error } = this.state;\n        return (\n            <form\n                className={classes.form}\n                noValidate\n                onSubmit={this.handleSubmit}\n                hidden={this.props.tabValue !== this.props.index}\n            >\n                <Grid container spacing={2}>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Name and Contact Details\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name=\"firstName\"\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"firstName\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                    error={error && error.firstName}\n                                    helperText={error && error.firstName}\n                                    onChange={this.handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"lastName\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    onChange={this.handleChange}\n                                    error={error && error.lastName}\n                                    helperText={error && error.lastName}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name=\"email\"\n                                    variant=\"filled\"\n                                    type=\"email\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Complete Email Address\"\n                                    onChange={this.handleChange}\n                                    error={error && error.email}\n                                    helperText={error && error.email}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"phoneNumber\"\n                                    label=\"Contact Number\"\n                                    name=\"phoneNumber\"\n                                    onChange={this.handleChange}\n                                    error={error && error.phoneNumber}\n                                    helperText={error && error.phoneNumber}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Address\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={4}>\n                                <FormControl\n                                    variant=\"filled\"\n                                    fullWidth\n                                    className={classes.formControl}\n                                >\n                                    <InputLabel id=\"demo-simple-select-filled-label\">\n                                        State\n                                    </InputLabel>\n                                    <Select\n                                        name=\"stateName\"\n                                        labelId=\"demo-simple-select-filled-label\"\n                                        id=\"demo-simple-select-filled\"\n                                        value={this.state.data.stateName}\n                                        onChange={this.handleState}\n                                    >\n                                        <MenuItem value=\"\">\n                                            <em>Choose...</em>\n                                        </MenuItem>\n                                        {statesList.map((state, i) => (\n                                            <MenuItem key={i} value={state}>\n                                                {state}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} sm={4}>\n                                <FormControl\n                                    variant=\"filled\"\n                                    fullWidth\n                                    className={classes.formControl}\n                                >\n                                    <InputLabel id=\"demo-simple-select-filled-label\">\n                                        City\n                                    </InputLabel>\n                                    <Select\n                                        name=\"cityName\"\n                                        labelId=\"demo-simple-select-filled-label\"\n                                        id=\"demo-simple-select-filled\"\n                                        value={this.state.data.cityName}\n                                        onChange={this.handleSelect}\n                                    >\n                                        <MenuItem value=\"\">\n                                            <em>Choose...</em>\n                                        </MenuItem>\n                                        {getStateWiseCity(\n                                            this.state.data.stateName\n                                        ).map((city, i) => (\n                                            <MenuItem key={i} value={city}>\n                                                {city}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} sm={4}>\n                                <TextField\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"country\"\n                                    label=\"Country\"\n                                    name=\"country\"\n                                    defaultValue=\"India\"\n                                    //onChange={this.handleChange}\n                                    InputProps={{\n                                        readOnly: true,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"zipCode\"\n                                    label=\"Zip Code\"\n                                    name=\"zipCode\"\n                                    onChange={this.handleChange}\n                                    error={error && error.address}\n                                    helperText={error && error.address}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"streetName\"\n                                    label=\"Street Name\"\n                                    name=\"streetName\"\n                                    onChange={this.handleChange}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Password\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    onChange={this.handleChange}\n                                    error={error && error.password}\n                                    helperText={error && error.password}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"confirmPassword\"\n                                    label=\"Confirm Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    onChange={this.handleChange}\n                                    error={error && error.confirmPassword}\n                                    helperText={error && error.confirmPassword}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    value=\"allowExtraEmails\"\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                        />\n                    </Grid>\n                </Grid>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                >\n                    Sign Up\n                </Button>\n                <Grid container justify=\"flex-end\">\n                    <Grid item onClick={this.handleSignin}>\n                        <Link style={{ cursor: \"pointer\" }} variant=\"body2\">\n                            Already have an account? Sign in\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(CustomerRegistration);\n","import React, { Component } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { getStateName, getStateWiseCity } from \"../../utils/auth\";\nimport { ShopRegister } from \"../../services/userService\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Input from \"@material-ui/core/Input\";\n\nconst useStyles = (theme) => ({\n    paper: {\n        marginTop: theme.spacing(3),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        borderStyles: \"solid\",\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        width: \"100%\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    chips: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    chip: {\n        margin: 2,\n    },\n    root: {\n        padding: \"2px 4px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        width: \"100%\",\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n});\n\nclass ShopOwnerRegistration extends Component {\n    state = {\n        data: {\n            firstName: \"\",\n            lastName: \"\",\n            shopName: \"\",\n            email: \"\",\n            phoneNumber: \"\",\n            address:\"\",\n            password: \"\",\n            confirmPassword: \"\",\n            openingHour: 0,\n            openingMinute: 0,\n            closingHour: 0,\n            closingMinute: 0,\n            tags: [],\n            bookingTimeUnit: \"\",\n            maxConcurrent: 0,\n            payment_modes: [],\n            discount: 0,\n        },\n        error: {},\n    };\n\n    formData = {\n        states: getStateName(),\n        cityList: getStateWiseCity(this.state.stateName),\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        let data = { ...this.state.data };\n        data[input.name] = input.value;\n        this.setState({ data });\n    };\n\n    handleNumberChange = ({ currentTarget: input }) => {\n        let data = { ...this.state.data };\n        data[input.name] = parseInt(input.value);\n        this.setState({ data });\n    };\n\n    handleSelect = ({ target: { name, value } }) => {\n        let data = { ...this.state.data };\n        data[name] = value;\n        this.setState({ data });\n    };\n\n    updateLocation = (addr) => {\n        let data = { ...this.state.data };\n        data[\"address\"] = addr.description;\n        this.setState({ data });\n        localStorage.setItem(\"userAddress\", addr.description);\n    };\n\n    handleMultipleSelect = (event) => {};\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(\"Registered\", this.state);\n\n        try {\n            const response = await ShopRegister(this.state.data);\n            console.log(response);\n            alert(\n                \"SignedUp Successfully. Check your email to verify and Signin .\"\n            );\n            window.location = \"/\";\n        } catch (ex) {\n            if (ex.response) {\n                if (ex.response.status == 500) {\n                    alert(ex.response.data);\n                } else {\n                    const error = { ...ex.response.data };\n                    this.setState({ error });\n                }\n                console.log(\"error\", ex.response);\n            }\n        }\n    };\n\n    // handleSubmit = (e) => {\n    //   e.preventDefault();\n    //   console.log(\"Registered\", this.state);\n    //   this.props.onSuccess(\"/shopowner\");\n    //   this.props.auth(\"shopOwnerLogged\");\n    // };\n\n    handleHidden = () => {\n        return this.props.tabValue !== this.props.index;\n    };\n\n    handleSignin = () => {\n        this.props.onSuccess();\n    };\n\n    render() {\n        console.log(this.state.data);\n\n        const { classes } = this.props;\n        const { error } = this.state;\n        return (\n            <form\n                className={classes.form}\n                noValidate\n                onSubmit={this.handleSubmit}\n                hidden={this.props.tabValue !== this.props.index}\n            >\n                <Grid container spacing={2}>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <TextField\n                            name=\"shopName\"\n                            variant=\"filled\"\n                            required\n                            fullWidth\n                            id=\"shopName\"\n                            label=\"Shop Name\"\n                            autoFocus\n                            error={error && error.shopName}\n                            helperText={error && error.shopName}\n                            onChange={this.handleChange}\n                        />\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Name and Contact Details\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name=\"firstName\"\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"firstName\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                    error={error && error.ownerName}\n                                    helperText={error && error.ownerName}\n                                    onChange={this.handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"lastName\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    onChange={this.handleChange}\n                                    error={error && error.ownerName}\n                                    helperText={error && error.ownerName}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name=\"email\"\n                                    variant=\"filled\"\n                                    type=\"email\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Complete Email Address\"\n                                    onChange={this.handleChange}\n                                    error={error && error.email}\n                                    helperText={error && error.email}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"phoneNumber\"\n                                    label=\"Contact Number\"\n                                    name=\"phoneNumber\"\n                                    onChange={this.handleChange}\n                                    error={error && error.phoneNumber}\n                                    helperText={error && error.phoneNumber}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Address\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <Paper\n                                    component=\"form\"\n                                    className={classes.root}\n                                >\n                                    <IconButton\n                                        type=\"submit\"\n                                        className={classes.iconButton}\n                                        aria-label=\"search\"\n                                    >\n                                        <SearchIcon />\n                                    </IconButton>\n                                    <GooglePlacesAutocomplete\n                                        onSelect={this.updateLocation}\n                                    />\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Opening Time And Closing Time(Please use 24Hr\n                            format)\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={6} sm={3}>\n                                <TextField\n                                    name=\"openingHour\"\n                                    variant=\"filled\"\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            max: 24,\n                                            min: 0,\n                                        },\n                                    }}\n                                    fullWidth\n                                    id=\"openingHour\"\n                                    label=\"Opening Hour\"\n                                    error={error && error.openingHour}\n                                    helperText={error && error.openingHour}\n                                    onChange={this.handleNumberChange}\n                                />\n                            </Grid>\n                            <Grid item xs={6} sm={3}>\n                                <TextField\n                                    name=\"openingMinute\"\n                                    variant=\"filled\"\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            max: 60,\n                                            min: 0,\n                                        },\n                                    }}\n                                    fullWidth\n                                    id=\"openingMinute\"\n                                    label=\"Opening Minute\"\n                                    error={error && error.openingMinute}\n                                    helperText={error && error.openingMinute}\n                                    onChange={this.handleNumberChange}\n                                />\n                            </Grid>\n                            <Grid item xs={6} sm={3}>\n                                <TextField\n                                    name=\"closingHour\"\n                                    variant=\"filled\"\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            max: 24,\n                                            min: 0,\n                                        },\n                                    }}\n                                    fullWidth\n                                    id=\"closingHour\"\n                                    label=\"Closing Hour\"\n                                    error={error && error.closingHour}\n                                    helperText={error && error.closingHour}\n                                    onChange={this.handleNumberChange}\n                                />\n                            </Grid>\n                            <Grid item xs={6} sm={3}>\n                                <TextField\n                                    name=\"closingMinute\"\n                                    variant=\"filled\"\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            max: 60,\n                                            min: 0,\n                                        },\n                                    }}\n                                    fullWidth\n                                    id=\"closingMinute\"\n                                    label=\"Cloosing Minute\"\n                                    error={error && error.closingMinute}\n                                    helperText={error && error.closingMinute}\n                                    onChange={this.handleNumberChange}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Discount And Times given to Customer per each Item\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name=\"bookingTimeUnit\"\n                                    variant=\"filled\"\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            min: 0,\n                                        },\n                                    }}\n                                    fullWidth\n                                    id=\"bookingTimeUnit\"\n                                    label=\"Average Times given for Five items(In Minutes)\"\n                                    error={error && error.bookingTimeUnit}\n                                    helperText={error && error.bookingTimeUnit}\n                                    onChange={this.handleNumberChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name=\"discount\"\n                                    variant=\"filled\"\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            min: 0,\n                                        },\n                                    }}\n                                    fullWidth\n                                    id=\"discount\"\n                                    label=\"Discount\"\n                                    error={error && error.discount}\n                                    helperText={error && error.discount}\n                                    onChange={this.handleNumberChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    name=\"maxConcurrent\"\n                                    variant=\"filled\"\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            min: 0,\n                                        },\n                                    }}\n                                    fullWidth\n                                    id=\"maxConcurrent\"\n                                    label=\"Max Customer Accomodetion\"\n                                    error={error && error.maxConcurrent}\n                                    helperText={error && error.maxConcurrent}\n                                    onChange={this.handleNumberChange}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Items Type And Payments Method Avaialable\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={6}>\n                                <MultipleSelect\n                                    selectedItems={\n                                        this.state.data.payment_modes\n                                    }\n                                    handleChange={this.handleSelect}\n                                    classes={classes}\n                                    name=\"payment_modes\"\n                                    label=\"Accepted Payment Modes\"\n                                    theme={this.props.theme}\n                                    items={[\n                                        \"Cards\",\n                                        \"Cash\",\n                                        \"Gpay\",\n                                        \"Digital Wallets\",\n                                        \"UPI\",\n                                        \"Other Methods\",\n                                    ]}\n                                />\n                                <Typography\n                                    variant=\"caption\"\n                                    display=\"block\"\n                                    style={{ color: \"red\" }}\n                                >\n                                    {error && error.payment_modes}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <MultipleSelect\n                                    selectedItems={this.state.data.tags}\n                                    handleChange={this.handleSelect}\n                                    classes={classes}\n                                    name=\"tags\"\n                                    label=\"Type of Items Available\"\n                                    theme={this.props.theme}\n                                    items={[\n                                        \"Meat & Fish\",\n                                        \"Grocery\",\n                                        \"Condiments(Spices)\",\n                                        \"Grains and Bread\",\n                                        \"Dairy & Eggs\",\n                                        \"Oil & Fat\",\n                                        \"Tinned & Dried Produce\",\n                                        \"Electronics\",\n                                    ]}\n                                />\n                                <Typography\n                                    variant=\"caption\"\n                                    display=\"block\"\n                                    style={{ color: \"red\" }}\n                                >\n                                    {error && error.tags}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Password\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    onChange={this.handleChange}\n                                    error={error && error.password}\n                                    helperText={error && error.password}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"confirmPassword\"\n                                    label=\"Confirm Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    onChange={this.handleChange}\n                                    error={error && error.confirmPassword}\n                                    helperText={error && error.confirmPassword}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    value=\"allowExtraEmails\"\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                        />\n                    </Grid>\n                </Grid>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                >\n                    Sign Up\n                </Button>\n                <Grid container justify=\"flex-end\">\n                    <Grid item onClick={this.handleSignin}>\n                        <Link style={{ cursor: \"pointer\" }} variant=\"body2\">\n                            Already have an account? Sign in\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        );\n    }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(\n    ShopOwnerRegistration\n);\n\nclass MultipleSelect extends Component {\n    state = {\n        items: this.props.items,\n    };\n\n    getStyles = (item, selectedItems, theme) => {\n        return {\n            fontWeight:\n                selectedItems.indexOf(item) === -1\n                    ? theme.typography.fontWeightRegular\n                    : theme.typography.fontWeightMedium,\n        };\n    };\n\n    MenuProps = {\n        PaperProps: {\n            style: {\n                maxHeight: 224,\n                width: 250,\n            },\n        },\n    };\n\n    render() {\n        const {\n            selectedItems,\n            handleChange,\n            classes,\n            theme,\n            name,\n            label,\n        } = this.props;\n\n        return (\n            <FormControl className={classes.formControl} variant=\"filled\">\n                <InputLabel id=\"demo-mutiple-chip-label\">{label}</InputLabel>\n                <Select\n                    labelId=\"demo-mutiple-chip-label\"\n                    id=\"demo-mutiple-chip\"\n                    multiple\n                    name={name}\n                    value={selectedItems}\n                    onChange={handleChange}\n                    input={<Input id=\"select-multiple-chip\" />}\n                    renderValue={(selected) => (\n                        <div className={classes.chips}>\n                            {selected.map((value) => (\n                                <Chip\n                                    key={value}\n                                    label={value}\n                                    color=\"primary\"\n                                    className={classes.chip}\n                                />\n                            ))}\n                        </div>\n                    )}\n                    MenuProps={this.MenuProps}\n                >\n                    {this.props.items.map((item, i) => (\n                        <MenuItem\n                            key={item}\n                            value={item}\n                            style={this.getStyles(item, selectedItems, theme)}\n                        >\n                            {item}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport CustomerRegistration from \"./CustomerRegistration\";\nimport ShopOwnerRegistration from \"./ShopOwnerRegistration\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { withRouter } from \"react-router-dom\";\nimport SignIn from './signin';\n\n\n\nconst useStyles = (theme) => ({\n    paper: {\n        marginTop: theme.spacing(3),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        borderStyles: \"solid\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n});\n\nclass SignUp extends Component {\n    state = {\n        value: 0,\n        open:false,\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n        console.log(\"value\", this.state.value);\n    };\n\n    handleSignin = () => {\n        this.setState({ open: true });\n    };\n\n    handleAuth = (auth) => {\n        this.props.handleAuth(auth);\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { value } = this.state;\n        return (\n            <Container component=\"main\" maxWidth=\"md\">\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n                    </Typography>\n                    <Paper square>\n                        <Tabs\n                            value={value}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={this.handleChange}\n                        >\n                            <Tab label=\"Customer\" />\n                            <Tab label=\"Shop Owner\" />\n                        </Tabs>\n                    </Paper>\n                    <CustomerRegistration\n                        tabValue={value}\n                        onSuccess={this.handleSignin}\n                        auth={this.handleAuth}\n                        index={0}\n                    />\n                    <ShopOwnerRegistration\n                        tabValue={value}\n                        onSuccess={this.handleSignin}\n                        auth={this.handleAuth}\n                        index={1}\n                    />\n                    <Dialog\n                        onClose={this.handleClose}\n                        aria-labelledby=\"simple-dialog-title\"\n                        open={this.state.open}\n                    >\n                        <SignIn\n                            handleAuth={this.props.handleAuth}\n                            handleClose={this.handleClose}\n                        />\n                    </Dialog>\n                </div>\n            </Container>\n        );\n    }\n}\n\nexport default withRouter(withStyles(useStyles)(SignUp));\n","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport { Divider, Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport PaymentIcon from \"@material-ui/icons/Payment\";\nimport DirectionsBikeIcon from \"@material-ui/icons/DirectionsBike\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport StarRateOutlinedIcon from \"@material-ui/icons/StarRateOutlined\";\n\nconst useStyles = (theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        background: \"#ffffff\",\n        width: \"100%\",\n        //width: window.innerWidth<500 ? (window.innerWidth*0.96) : 600,\n    },\n    details: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        //padding: 10,\n        marginLeft: 8,\n        marginTop: 10,\n    },\n    content: {\n        flex: \"1 0 auto\",\n    },\n    cover: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        // marginBottom:20,\n    },\n    controls: {\n        display: \"flex\",\n        alignItems: \"center\",\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n    bim: {\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n    },\n});\n\nclass Shop extends Component {\n    state = {\n        imWidth: \"90%\",\n    };\n\n    handleClick = () => {\n        //this.props.history.push(`/customer/shop/`);\n        this.props.history.push(`/customer/shop/${this.props.data.shopId}`);\n        console.log(\"Loved\");\n    };\n\n    openedNow = () => {\n        let d = new Date();\n        let currentOffset = d.getTimezoneOffset();\n        let ISTOffset = 330;\n        let ISTTime = new Date(\n            d.getTime() + (ISTOffset + currentOffset) * 60000\n        );\n        const openingTime = new Date();\n        const closingTime = new Date();\n        const {\n            openingHour,\n            openingMinute,\n            closingHour,\n            closingMinute,\n        } = this.props.data;\n        openingTime.setHours(openingHour);\n        openingTime.setMinutes(openingMinute);\n        closingTime.setHours(closingHour);\n        closingTime.setMinutes(closingTime);\n\n        const currentTime =\n            ISTTime.getHours() * 3600 + ISTTime.getMinutes() * 60;\n\n        return (\n            currentTime >= openingHour * 3600 + openingMinute * 60 &&\n            currentTime <= closingHour * 3600 + closingMinute * 60\n        );\n    };\n\n    time = (t) => {\n        let d = new Date();\n        d.setHours(t.hour);\n        d.setMinutes(t.minute);\n        d.setSeconds(0);\n        return d.toLocaleTimeString();\n    };\n\n    render() {\n        this.state.imWidth = window.innerWidth < 800 ? \"90%\" : \"100%\";\n        const { classes, theme } = this.props;\n        const {\n            shopName: name,\n            address,\n            imageUrl,\n            discount,\n            distancemetric,\n            openingTimeIST,\n            closingTimeIST,\n            tags: itemsAvailable,\n            shopRating: ratings,\n            payment_modes,\n            travelDuration,\n        } = this.props.data;\n        const distance = distancemetric || -1;\n        const imgUrl =\n            imageUrl ||\n            \"https://picsum.photos/500/500\";\n        //const imgUrl =\"https://img.etimg.com/thumb/width-640,height-480,imgsize-789754,resizemode-1,msid-73320353/small-biz/sme-sector/the-kirana-is-a-technology-shop-too/kirana-bccl.jpg\";\n        //const { openingTime, closingTime } = shopSchedule;\n        return (\n            <Grid item>\n                <Box\n                    className={classes.root}\n                    boxShadow={8}\n                    style={{ width: \"95%\" }}\n                    borderRadius=\"borderRadius\"\n                    borderRadius={15}\n                    borderColor=\"primary.main\"\n                    m={2}\n                >\n                    <Box className={classes.cover}>\n                        <Grid item container xs={12} direction=\"column\">\n                            <Grid\n                                container\n                                spacing={2}\n                                xs={12}\n                                justify=\"center\"\n                            >\n                                <Grid item xs={12} sm={5} justify=\"center\">\n                                    <Box\n                                        className={classes.bim}\n                                        boxShadow={5}\n                                        style={{\n                                            backg: 0.5,\n                                            height: \"200px\",\n                                            width: `${this.state.imWidth}`,\n                                            borderRadius: 15,\n                                            padding: 10,\n                                            marginTop: 10,\n                                            marginLeft: 10,\n                                            marginBottom: 10,\n                                            backgroundImage: `url(${imgUrl})`,\n                                        }}\n                                    >\n                                        <Chip\n                                            label={\n                                                this.openedNow()\n                                                    ? \"Open\"\n                                                    : \"Closed\"\n                                            }\n                                            style={{\n                                                background: this.openedNow()\n                                                    ? \"#00b476\"\n                                                    : \"#ef0052\",\n                                                fontSize: 17,\n                                                fontWeight: \"bold\",\n                                                color: \"white\",\n                                            }}\n                                        ></Chip>\n                                    </Box>\n                                    <Typography\n                                        variant=\"body1\"\n                                        align=\"center\"\n                                        gutterBottom\n                                        style={{\n                                            paddingLeft: 10,\n                                            margin: \"auto\",\n                                        }}\n                                    >\n                                        <FiberManualRecordIcon\n                                            style={{\n                                                color: \"green\",\n                                                fontSize: 13,\n                                                marginRight: 5,\n                                            }}\n                                        />\n                                        {openingTimeIST}\n                                        <FiberManualRecordIcon\n                                            style={{\n                                                color: \"red\",\n                                                fontSize: 13,\n                                                marginLeft: 10,\n                                            }}\n                                        />\n                                        {closingTimeIST}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12} sm={7}>\n                                    <Box className={classes.details}>\n                                        <Typography\n                                            component=\"h4\"\n                                            variant=\"h4\"\n                                            style={{ color: \"indigo\" }}\n                                        >\n                                            <b>{name}</b>\n                                        </Typography>\n                                        {this.openedNow() || (\n                                            <Typography\n                                                variant=\"body1\"\n                                                gutterBottom\n                                            >\n                                                Opens next at {openingTimeIST}\n                                            </Typography>\n                                        )}\n                                        <br />\n                                        <Box\n                                            style={{\n                                                display: \"flex\",\n                                                flexDirection: \"row\",\n                                            }}\n                                        >\n                                            <Chip\n                                                icon={\n                                                    <StarRateOutlinedIcon\n                                                        style={{\n                                                            color: \"#ffffff\",\n                                                        }}\n                                                    />\n                                                }\n                                                label={ratings[0]}\n                                                variant=\"contained\"\n                                                style={{\n                                                    backgroundColor: \"#58AC00\",\n                                                    margin: 2,\n                                                    fontSize: 18,\n                                                    color: \"white\",\n                                                }}\n                                            />\n                                        </Box>\n                                        <br />\n                                        <Typography\n                                            variant=\"body1\"\n                                            gutterBottom\n                                        >\n                                            <Box\n                                                style={{\n                                                    display: \"flex\",\n                                                    flexDirection: \"row\",\n                                                }}\n                                            >\n                                                <LocationOnIcon />\n                                                <Typography\n                                                    variant=\"body1\"\n                                                    style={{\n                                                        paddingBottom: 3,\n                                                        marginLeft: 5,\n                                                        marginRight: 5,\n                                                    }}\n                                                >\n                                                    {`${distance} km`}\n                                                </Typography>\n                                                <DirectionsBikeIcon />\n                                                <Typography\n                                                    variant=\"body1\"\n                                                    style={{\n                                                        paddingBottom: 3,\n                                                        marginLeft: 5,\n                                                    }}\n                                                >\n                                                    {travelDuration <= 3600\n                                                        ? `${Math.round(\n                                                              travelDuration /\n                                                                  60\n                                                          )} Min`\n                                                        : `${\n                                                              travelDuration /\n                                                              3600\n                                                          } Hour`}\n                                                </Typography>\n                                            </Box>\n                                            {true && (\n                                                <Box\n                                                    style={{\n                                                        display: \"flex\",\n                                                        flexDirection: \"row\",\n                                                    }}\n                                                >\n                                                    <PaymentIcon\n                                                        style={{\n                                                            color: \"#00b300\",\n                                                        }}\n                                                    />\n                                                    <Typography\n                                                        variant=\"body1\"\n                                                        style={{\n                                                            paddingBottom: 3,\n                                                            marginLeft: 5,\n                                                        }}\n                                                    >\n                                                        Accepts{\" \"}\n                                                        {payment_modes.join()}\n                                                    </Typography>\n                                                </Box>\n                                            )}\n                                        </Typography>\n                                    </Box>\n                                </Grid>\n                            </Grid>\n                            <br />\n                            <Divider />\n                            <Grid item container xs={12} direction=\"row\">\n                                <Grid\n                                    item\n                                    container\n                                    direction=\"row\"\n                                    xs={7}\n                                    justify=\"center\"\n                                    alignItems=\"center\"\n                                >\n                                    <Box\n                                        style={{\n                                            display: \"flex\",\n                                            flexDirection: \"row\",\n                                        }}\n                                    >\n                                        <LocalOfferIcon\n                                            style={{ color: \"#f445a6\" }}\n                                        />\n                                        <Typography\n                                            variant=\"body1\"\n                                            style={{\n                                                paddingBottom: 3,\n                                                color: \"#f445a6\",\n                                                marginLeft: 5,\n                                            }}\n                                        >\n                                            {discount}% off on all On-Time\n                                            orders\n                                        </Typography>\n                                    </Box>\n                                </Grid>\n                                <Grid\n                                    item\n                                    container\n                                    xs={5}\n                                    direction=\"row\"\n                                    justify=\"flex-end\"\n                                >\n                                    <IconButton\n                                        style={{ color: \"red\", margin: 2 }}\n                                    >\n                                        <FavoriteIcon />\n                                    </IconButton>\n                                    <Button\n                                        variant=\"contained\"\n                                        onClick={this.handleClick}\n                                        style={{\n                                            backgroundColor: \"green\",\n                                            color: \"white\",\n                                            margin: 2,\n                                            fontSize: 17,\n                                        }}\n                                        endIcon={\n                                            <ArrowForwardIosIcon\n                                                style={{ paddingBottom: 1 }}\n                                            />\n                                        }\n                                    >\n                                        <b>Book Slot</b>\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Box>\n            </Grid>\n        );\n    }\n}\n\nexport default withRouter(withStyles(useStyles, { withTheme: true })(Shop));\n","import http from \"./httpServices\";\nimport api from \"../configApi.json\";\n\nexport const getShopList = (r=3) => {\n    const rad = r * 1000;\n    const response = http.post(api.shopList, {\n        userLocation:localStorage.getItem(\"userAddress\"),\n        radius: rad,\n    });\n    return response;\n};\n\nexport const getShopDetails = (id) => {\n    const response = http.get(\n        api.shopData + `/${id}`,\n        {params: {\n            isShop: false,\n            \n        }}\n    );\n    return response;\n};\n\nexport const getReviews = id => {\n    return http.post(api.reviews, {\n        \"shopId\": id\n    });\n}\n\nexport const getMyBookings = () => {\n    return http.protectedPost(api.myBookings, { isShop: false });\n}\n\nexport const getShopBookings = () => {\n    return http.protectedPost(api.myBookings, { isShop: true });\n}","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Box, Grid, Button } from \"@material-ui/core\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DirectionsIcon from \"@material-ui/icons/Directions\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport \"react-google-places-autocomplete/dist/index.min.css\";\nimport http from \"../../../../services/httpServices\";\n\nconst useStyles = (theme) => ({\n    root: {\n        padding: \"2px 4px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        width: \"100%\",\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n});\n\nclass CurrentLocation extends Component {\n    state = {\n        location: \"\",\n        coordinate: {},\n        openDialogue: false,\n    };\n\n    componentDidMount() {\n        //navigator.geolocation.getCurrentPosition(this.showPosition);\n        if (!localStorage.getItem(\"userAddress\"))\n            this.setState({\n                openDialogue: true,\n            });\n        else this.setState({ location: localStorage.getItem(\"userAddress\") });\n    }\n\n    // showPosition = (position) => {\n    //     const location =\n    //         \"Latitude: \" +\n    //         position.coords.latitude +\n    //         \" Longitude: \" +\n    //         position.coords.longitude;\n    //     const coordinate = {};\n    //     coordinate.latitude = position.coords.latitude;\n    //     coordinate.longitude = position.coords.longitude;\n    //     this.setState({ location, coordinate });\n    //     console.log(\"coordinate set\");\n    // };\n\n    handleClick = () => {\n        this.setState({ openDialogue: true });\n        // try {\n        //     const response = await http.get(\n        //         `https://maps.googleapis.com/maps/api/geocode/json?latlng=${this.state.coordinate.latitude},${this.state.coordinate.longitude}&key=AIzaSyBixtvcF5A38Z2dVP9fFkcvLf5P59RmnEA`,\n        //     );\n        //     console.log(response);\n        // } catch (ex) {\n        //     console.log(ex.response);\n        // }\n    };\n\n    updateLocation = (addr) => {\n        console.log(addr.description);\n        this.setState({ location: addr.description, openDialogue: false });\n        localStorage.setItem(\"userAddress\", addr.description);\n        this.props.handleAddress();\n    };\n\n    handleClose = () => {\n        this.setState({ openDialogue: false });\n    };\n\n    render() {\n        const { openDialogue } = this.state;\n        const { handleClose, handleClick } = this;\n        const { classes } = this.props;\n        return (\n            <Box\n                borderRadius={10}\n                style={{\n                    width: \"100%\",\n                    backgroundColor: \"#00583a\",\n                    color: \"white\",\n                }}\n                m={1}\n                p={1}\n                onClick={this.getLocation}\n            >\n                <Grid container direction=\"row\" xs xl lg>\n                    <Grid item xs={8}>\n                        <Typography variant=\"body1\">\n                            <LocationOnIcon />\n                            Near <b>{this.state.location}</b>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={4} container justify=\"flex-end\">\n                        <Button\n                            variant=\"outlined\"\n                            style={{backgroundColor:'white'}}\n                            onClick={handleClick}\n                        >\n                            Change\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Dialog open={openDialogue} onClose={handleClose}>\n                    <DialogContent\n                        style={{\n                            backgroundColor: \"#ffe7ef\",\n                            height: \"300px\",\n                            width: window.innerWidth < 600 ? \"340px\" : \"600px\",\n                        }}\n                    >\n                        <Paper component=\"form\" className={classes.root}>\n                            <IconButton\n                                type=\"submit\"\n                                className={classes.iconButton}\n                                aria-label=\"search\"\n                            >\n                                <SearchIcon />\n                            </IconButton>\n                            <GooglePlacesAutocomplete\n                                onSelect={this.updateLocation}\n                            />\n                            <Divider\n                                className={classes.divider}\n                                orientation=\"vertical\"\n                            />\n                            <IconButton\n                                color=\"primary\"\n                                className={classes.iconButton}\n                                aria-label=\"directions\"\n                            >\n                                <DirectionsIcon />\n                            </IconButton>\n                        </Paper>\n                    </DialogContent>\n                </Dialog>\n            </Box>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(CurrentLocation);\n","import React, { Component } from \"react\";\nimport { Box, Divider, GridListTile } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\n\n\nconst useStyles = (theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        width: \"100%\",\n    },\n    chips: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    chip: {\n        margin: 2,\n    },\n});\n\n\nclass FilterCard extends Component {\n    state = {\n        filter: {\n            openClose: { showAll: true, isOpen: false },\n            items: [],\n            slotTypes: { Morning: true, Afternoon: true, Evening: true },\n            customerRatings:{\"4\":false,\"3\":false},\n        },\n    };\n\n    formData = {\n        itemList: [\"gas\", \"gasf\", \"gsaf\", \"gafdsag\", \"sgasdf\"],\n        slotType: [\"Morning\", \"Afternoon\", \"Evening\"],\n        customerRating:[\"4\",\"3\"],\n\n    };\n\n    handleCheck = (event) => {\n        let filter = { ...this.state.filter };\n        filter.openClose[event.target.name] = event.target.checked;\n        this.setState({ filter });\n        console.log(event.target.checked, this.state.filter);\n        this.props.updateFilter(this.state.filter);\n    };\n\n    handleDR = (name) => {\n        let filter = { ...this.state.filter };\n        if (filter.distanceRating[name])\n            filter.distanceRating[name].ascOrder = !filter.distanceRating[name]\n                .ascOrder;\n        else\n            filter.distanceRating = {\n                [name]: { ascOrder: true },\n            };\n        this.setState({ filter });\n        this.props.updateFilter(this.state.filter);\n    };\n\n    handleSelect = ({ target: { name, value } }) => {\n        let filter = { ...this.state.filter };\n        filter[name] = value;\n        this.setState({ filter });\n        this.props.updateFilter(filter);\n    };\n\n    handleSlot = event => {\n        let filter = { ...this.state.filter };\n        filter.slotTypes[event.target.name] = event.target.checked;\n        this.setState({ filter });\n        this.props.updateFilter(this.state.filter);\n    }\n    \n    handleRating = event => {\n        let filter = { ...this.state.filter };\n        filter.customerRatings[event.target.name] = event.target.checked;\n        this.setState({ filter });\n        this.props.updateFilter(this.state.filter);\n    }\n\n    render() {\n        const {\n            openClose,\n            distanceRating: dr,\n            slotTypes,\n            customerRatings,\n        } = this.state.filter;\n        const { handleCheck, handleDR, handleSlot, handleRating } = this;\n        const { items, slotType, customerRating } = this.formData;\n        const { classes, theme } = this.props;\n        return (\n            <Box\n                boxShadow={5}\n                style={{\n                    backgroundColor: \"white\",\n                    width: \"100%\",\n                    marginTop: 5,\n                }}\n                borderRadius={5}\n            >\n                <Grid\n                    item\n                    container\n                    direction=\"column\"\n                    justify=\"flex-start\"\n                    alignItems=\"flex-start\"\n                    spacing={2}\n                    style={{\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Grid\n                        item\n                        container\n                        direction=\"row\"\n                        justify=\"flex-start\"\n                        xs={12}\n                    >\n                        <Typography variant=\"h5\">\n                            <b>Filters</b>\n                        </Typography>\n                    </Grid>\n                    <Box p={1} style={{ width: \"100%\", paddingLeft: 15 }}>\n                        <Grid item container xs={12}>\n                            <Grid\n                                item\n                                container\n                                xs={12}\n                                md={12}\n                                direction=\"column\"\n                                justify=\"center\"\n                            >\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={openClose.showAll}\n                                            onChange={handleCheck}\n                                            name=\"showAll\"\n                                        />\n                                    }\n                                    label=\"Show All\"\n                                />\n                                <Typography variant=\"body2\">\n                                    Check this box to show closed shops too\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box p={1} style={{ width: \"90%\", paddingLeft: 15 }}>\n                        <Typography variant=\"h6\">Items Available</Typography>\n                        <MultipleSelect\n                            selectedItems={this.state.filter.items}\n                            handleChange={this.handleSelect}\n                            classes={classes}\n                            name=\"items\"\n                            label=\"Type of Items Available\"\n                            theme={theme}\n                            items={this.props.itemList}\n                        />\n                    </Box>\n                    <Box p={1} style={{ width: \"90%\", paddingLeft: 15 }}>\n                        <Typography variant=\"h6\">Slot Type</Typography>\n                        <Grid item container direction=\"column\">\n                            {slotType.map((label) => (\n                                <Grid item>\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox\n                                                checked={slotTypes[label]}\n                                                onChange={handleSlot}\n                                                name={label}\n                                            />\n                                        }\n                                        label={label}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </Box>\n                    <Box p={1} style={{ width: \"90%\", paddingLeft: 15 }}>\n                        <Typography variant=\"h6\">Customer Rating</Typography>\n                        <Grid item container direction=\"column\">\n                            {customerRating.map((label) => (\n                                <Grid item>\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox\n                                                checked={customerRatings[label]}\n                                                onChange={handleRating}\n                                                name={label}\n                                            />\n                                        }\n                                        label={`${label} ★ & above`}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </Box>\n                </Grid>\n            </Box>\n        );\n    }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(FilterCard);\n\n\nclass MultipleSelect extends Component {\n    state = {\n        items: this.props.items,\n    };\n\n    getStyles = (item, selectedItems, theme) => {\n        return {\n            fontWeight:\n                selectedItems.indexOf(item) === -1\n                    ? theme.typography.fontWeightRegular\n                    : theme.typography.fontWeightMedium,\n        };\n    };\n\n    MenuProps = {\n        PaperProps: {\n            style: {\n                maxHeight: 224,\n                width: 250,\n            },\n        },\n    };\n\n    render() {\n        const {\n            selectedItems,\n            handleChange,\n            classes,\n            theme,\n            name,\n            label,\n        } = this.props;\n\n        return (\n            <FormControl className={classes.formControl} variant=\"filled\">\n                <InputLabel id=\"demo-mutiple-chip-label\">{label}</InputLabel>\n                <Select\n                    labelId=\"demo-mutiple-chip-label\"\n                    id=\"demo-mutiple-chip\"\n                    multiple\n                    name={name}\n                    value={selectedItems}\n                    onChange={handleChange}\n                    input={<Input id=\"select-multiple-chip\" />}\n                    renderValue={(selected) => (\n                        <div className={classes.chips}>\n                            {selected.map((value) => (\n                                <Chip\n                                    key={value}\n                                    label={value}\n                                    color=\"primary\"\n                                    className={classes.chip}\n                                />\n                            ))}\n                        </div>\n                    )}\n                    MenuProps={this.MenuProps}\n                >\n                    {this.props.items.map((item, i) => (\n                        <MenuItem\n                            key={item}\n                            value={item}\n                            style={this.getStyles(item, selectedItems, theme)}\n                        >\n                            {item}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport Shop from \"./components/shop\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { getShopList } from \"../../../services/dataServices\";\nimport GridList from \"@material-ui/core/GridList\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { Box } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { updateRadius } from \"../../../services/userService\";\nimport CurrentLocation from \"./shopPage/getLocation\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport FilterCard from \"./components/filter\";\nimport filter from \"./components/filter\";\n\nconst useStyles = (theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        width: \"100%\",\n    },\n});\n\nclass Shops extends Component {\n    state = {\n        shopData: [],\n        distance: 3,\n        isLoading: false,\n        message: \"An Error Occured\",\n        filter: {\n            openClose: { showAll: true, isOpen: false },\n            items: [],\n            slotTypes: { Morning: true, Afternoon: true, Evening: true },\n            customerRatings: { \"4\": false, \"3\": false },\n        },\n    };\n\n    formData = {\n        distance: [\n            { value: 1, label: \"1 km\" },\n            { value: 2, label: \"2 km\" },\n            { value: 5, label: \"5 km\" },\n            { value: 10, label: \"10 km\" },\n        ],\n    };\n\n    componentDidMount() {\n        this.updateShopList();\n    }\n\n    updateShopList = async () => {\n        this.setState({ isLoading: true });\n        try {\n            const response = await getShopList(this.state.distance);\n            console.log(response);\n            if (response.data)\n                this.setState({ shopData: response.data, message: \"\" });\n            else this.setState({ message: \"No Shop Found\" });\n        } catch (ex) {\n            if (ex.response) {\n                if (ex.response.status == 403)\n                    this.setState({ message: ex.response.data.message });\n                else\n                    this.setState({\n                        message: ex.response.data\n                            ? ex.response.data.message\n                            : \"An Error Occured\",\n                    });\n            } else this.setState({ message: \"An Error Occured\" });\n            console.log(ex.response);\n        }\n        this.setState({ isLoading: false });\n    };\n\n    updateFilter = (filter) => {\n        this.setState({ filter });\n    };\n\n    //     customerRatings:\n    // 3: false\n    // 4: false\n    // __proto__: Object\n    // items: []\n    // openClose:\n    // isOpen: false\n    // showAll: true\n    // __proto__: Object\n    // slotTypes:\n    // Afternoon: true\n    // Evening: true\n    // Morning: true\n\n    filterList = () => {\n        const filter = this.state.filter;\n        let list = [];\n        const shopList = this.state.shopData;\n\n        //Rating based filter\n        if (filter.customerRatings[\"3\"])\n            list = shopList.filter((c) => c.shopRating[0] >= 3);\n        else if (filter.customerRatings[\"4\"])\n            list = shopList.filter((c) => c.shopRating[0] >= 4);\n        else list = shopList;\n\n        //Open-Close based\n        const openedNow = (data) => {\n            let d = new Date();\n            let currentOffset = d.getTimezoneOffset();\n            let ISTOffset = 330;\n            let ISTTime = new Date(\n                d.getTime() + (ISTOffset + currentOffset) * 60000\n            );\n            const openingTime = new Date();\n            const closingTime = new Date();\n            const {\n                openingHour,\n                openingMinute,\n                closingHour,\n                closingMinute,\n            } = data;\n            openingTime.setHours(openingHour);\n            openingTime.setMinutes(openingMinute);\n            closingTime.setHours(closingHour);\n            closingTime.setMinutes(closingTime);\n\n            const currentTime =\n                ISTTime.getHours() * 3600 + ISTTime.getMinutes() * 60;\n\n            return (\n                currentTime >= openingHour * 3600 + openingMinute * 60 &&\n                currentTime <= closingHour * 3600 + closingMinute * 60\n            );\n        };\n        if (!filter.openClose.showAll) list = list.filter((c) => openedNow(c));\n\n        //Items Based \n        if (filter.items.length != 0)\n            list = list.filter(shop => {\n                for (let tag of shop.tags) {\n                    if (filter.items.includes(tag)) return true;\n                }\n                return false;\n            });\n\n        //Period Based(Must filter at last)\n        let newList = [];\n        if (filter.slotTypes.Morning)\n            newList = list.filter((c) => c.openingHour < 12);\n        // else newList = list.filter((c) => c.openingHour >= 12);\n        if (filter.slotTypes.Afternoon)\n            newList = newList.concat(\n                list\n                    .filter((c) => c.openingHour < 18 && c.closingHour >= 12)\n                    .filter((c) => !newList.includes(c))\n            );\n        if (filter.slotTypes.Evening)\n            newList = newList.concat(\n                list\n                    .filter((c) => c.closingHour > 18)\n                    .filter((c) => !newList.includes(c))\n            );\n\n        return newList;\n    };\n\n    getItemList = (shopList) => {};\n\n    handleChange = (event, newValue) => {\n        const distance = newValue;\n        this.setState({ distance });\n        this.updateShopList();\n    };\n\n    handleAddress = () => {\n        this.updateShopList();\n    };\n\n    getItemList = shopList => {\n        let itemList = [];\n        for (const shop of shopList) {\n            itemList = [...shop.tags , ...itemList];\n        }\n        return Array.from(new Set(itemList));\n    }\n\n    render() {\n        const shopList = this.filterList();\n        const { classes } = this.props;\n        const { distance } = this.state;\n        console.log(\"render called\");\n        return (\n            // <Shop/>\n            <div className={classes.root}>\n                <Grid\n                    container\n                    spacing={5}\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"flex-start\"\n                >\n                    <Grid\n                        container\n                        sm={3}\n                        md={3}\n                        lg={3}\n                        spacing={1}\n                        direction=\"column\"\n                        alignItems=\"center\"\n                    >\n                        <Grid item style={{ width: \"100%\" }}>\n                            <Box\n                                boxShadow={5}\n                                style={{\n                                    backgroundColor: \"white\",\n                                    width: \"100%\",\n                                    marginTop: 23,\n                                }}\n                                p={3}\n                                borderRadius={5}\n                            >\n                                <Typography variant=\"body1\">\n                                    Choose Your Radius(in Km)..\n                                </Typography>\n                                <Slider\n                                    value={distance}\n                                    aria-labelledby=\"discrete-slider-always\"\n                                    step={1}\n                                    onChange={this.handleChange}\n                                    min={1}\n                                    max={5}\n                                    marks={[{value:1,label:\"1 km\"},{value:2},{value:3},{value:4},{value:5,label:'5 km'}]}\n                                    valueLabelDisplay=\"on\"\n                                />\n                            </Box>\n                        </Grid>\n                        <Grid\n                            item\n                            container\n                            direction=\"column\"\n                            justify=\"flex-start\"\n                            alignItems=\"center\"\n                            style={{ width: \"100%\" }}\n                        >\n                            <FilterCard updateFilter={this.updateFilter} itemList={this.getItemList(this.state.shopData)} />\n                        </Grid>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        sm={8}\n                        md={8}\n                        lg={8}\n                        direction=\"column\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        style={{ width: \"100%\" }}\n                    >\n                        <Grid container xs={12} direction=\"row\">\n                            <CurrentLocation\n                                handleAddress={this.handleAddress}\n                            />\n                        </Grid>\n                        {this.state.isLoading ? (\n                            <Grid\n                                container\n                                spacing={5}\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"flex-start\"\n                                style={{ marginTop: 20 }}\n                            >\n                                <CircularProgress color=\"secondary\" />\n                            </Grid>\n                        ) : this.state.message ? (\n                            <Typography variant=\"body1\" align=\"center\">\n                                {this.state.message}\n                            </Typography>\n                        ) : (\n                            <GridList\n                                cellHeight=\"auto\"\n                                cols={2}\n                                spacing={10}\n                                style={{ width: \"100%\" }}\n                            >\n                                {shopList.length == 0 ? (\n                                    <Grid container xs={12} justify=\"center\" direction=\"row\">\n                                        <Grid item>\n                                            <Typography\n                                                variant=\"h5\"\n                                                align=\"center\"\n                                            >\n                                                No Shop Found\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                ) : (\n                                    shopList.map((data, i) => (\n                                        <GridListTile\n                                            key={i}\n                                            cols={\n                                                window.innerWidth < 500 ? 2 : 1\n                                            }\n                                        >\n                                            <Shop\n                                                data={data}\n                                                userAddress={\n                                                    this.state.userAddress\n                                                }\n                                            />\n                                        </GridListTile>\n                                    ))\n                                )}\n                            </GridList>\n                        )}\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Shops);\n","import React, { Component } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Box } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { updateBookings } from \"../../../../services/userService\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = (theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        width: \"90%\",\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginTop: 10,\n        //backgroundColor: \"#d96477\",\n    },\n    chips: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    chip: {\n        margin: 2,\n    },\n});\n\nfunction timeString(h, m = 0) {\n    let d = new Date();\n    d.setHours(h);\n    d.setMinutes(m);\n    return d.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n    });\n}\n\nclass EditBookings extends Component {\n    state = {\n        data: {\n            itemList: this.props.bookingDetails.purchaseItems.split(\",\"),\n            period:\n                this.props.bookingDetails.arrivalHour < 12\n                    ? \"Morning\"\n                    : this.props.bookingDetails.arrivalHour < 18\n                    ? \"Afternoon\"\n                    : \"Evening\",\n            slot: {\n                start: this.props.bookingDetails.slotGroupBegins,\n                end: this.props.bookingDetails.slotGroupEnds,\n            },\n        },\n        slotLabel: `${timeString(\n            this.props.bookingDetails.slotGroupBegins\n        )} - ${timeString(this.props.bookingDetails.slotGroupEnds)}`,\n        noticeBody: {},\n        isLoading: false,\n        submitted: false,\n        success: true,\n    };\n\n    formData = {\n        period: [\n            { label: \"Morning\", slot: { start: 0, end: 12 } },\n            { label: \"Afternoon\", slot: { start: 12, end: 18 } },\n            { label: \"Evening\", slot: { start: 18, end: 23 } },\n        ],\n    };\n\n    getSlotTimes = (period) => {\n        let slotTimeArr = [];\n        let stime = new Date();\n        const currentTime = new Date();\n        const gap = 60 * 60 * 1000;\n        if (!period)\n            period = this.formData.period.filter(\n                (c) => !c.label.localeCompare(this.state.data.period)\n            )[0].slot;\n        const duration = 3600 * 1000;\n        stime.setHours(period.start);\n        stime.setMinutes(0);\n        stime.setSeconds(0);\n        const {\n            openingHour,\n            openingMinute,\n            closingHour,\n            closingMinute,\n        } = this.props.data;\n        if (period.end < currentTime.getHours()) return [];\n        while (\n            stime.getHours() < period.end &&\n            stime.getHours() < closingHour\n        ) {\n            const start = new Date(stime);\n            const end = new Date(stime.getTime() + duration);\n            if (\n                start.getTime() < currentTime.getTime() ||\n                start.getHours() < openingHour\n            ) {\n                stime.setTime(stime.getTime() + gap);\n                continue;\n            }\n            let slot = {};\n            slot.interval = { start: start.getHours(), end: end.getHours() };\n            slot.label =\n                start.toLocaleTimeString(\"en-US\", {\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                    hour12: true,\n                }) +\n                \" - \" +\n                end.toLocaleTimeString(\"en-US\", {\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                    hour12: true,\n                });\n\n            slotTimeArr.push(slot);\n            //if (start.getHours() <= this.props.closingHour) break;\n            stime.setTime(stime.getTime() + gap);\n        }\n        //console.log(slotTimeArr);\n        return slotTimeArr;\n    };\n\n    handleBooking = async () => {\n        this.setState({ submitted: true, isLoading: true });\n        try {\n            const { data } = await updateBookings(\n                this.state.data,\n                this.props.bookingDetails.bookingId\n            );\n            this.setState({ noticeBody: data });\n            this.props.setSlotTime(data);\n        } catch (ex) {\n            console.log(\"ex logging\", ex);\n            this.setState({ noticeBody: ex.response.data, success: false });\n            console.log(this.state.noticeBody, ex.response.data);\n            //alert(\"An error occured, Try re signin and booking\");\n        }\n        this.setState({ isLoading: false });\n    };\n\n    handlePeriod = (e) => {\n        const data = { ...this.state.data };\n        data.period = e.target.value.label;\n        //data.slot = this.getSlotTimes(e.target.value.slot)[0] || \"\" ;\n        this.setState({ data, slotLabel: \"\" });\n    };\n\n    handleSlotTime = (e) => {\n        const data = { ...this.state.data };\n        const slot = this.getSlotTimes().find(\n            (time) => !time.label.localeCompare(e.target.value)\n        ).interval;\n        data.slot = slot;\n        this.setState({ data, slotLabel: e.target.value });\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        this.setState({ [input.name]: input.value });\n    };\n\n    handleClose = () => {\n        this.setState({\n            noticeBody: {},\n            isLoading: false,\n            submitted: false,\n            success: true,\n        });\n        this.props.handleClose();\n    }\n\n    render() {\n        const {  open, classes } = this.props;\n        const { data, slotLabel } = this.state;\n        const { period } = this.formData;\n        const {\n            handlePeriod,\n            handleSlotTime,\n            handleBooking,\n            handleClose,\n        } = this;\n\n        return (\n            <Dialog\n                maxWidth=\"xl\"\n                onClose={handleClose}\n                aria-labelledby=\"simple-dialog-title\"\n                open={open}\n                style={{ width: window.innerWidth * 0.6, margin: \"auto\" }}\n            >\n                {!this.state.submitted ? (\n                    <form style={{ width: \"100%\" }}>\n                        <Box\n                            style={{ width: \"100%\", backgroundColor: \"white\" }}\n                            m={2}\n                            p={1}\n                        >\n                            <Grid item container xs={12}>\n                                <Grid item xs={12} md={6}>\n                                    <FormControl\n                                        variant=\"outlined\"\n                                        className={classes.formControl}\n                                        required\n                                    >\n                                        <InputLabel id=\"SelectPeriod\">\n                                            Slot Type\n                                        </InputLabel>\n                                        <Select\n                                            labelId=\"SelectPeriod\"\n                                            id=\"SelectPeriod\"\n                                            value={\n                                                period.filter(\n                                                    (c) =>\n                                                        !c.label.localeCompare(\n                                                            data.period\n                                                        )\n                                                )[0]\n                                            }\n                                            onChange={handlePeriod}\n                                            label=\"Period\"\n                                        >\n                                            {period.map((time, i) => (\n                                                <MenuItem key={i} value={time}>\n                                                    {time.label}\n                                                </MenuItem>\n                                            ))}\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <FormControl\n                                        variant=\"outlined\"\n                                        required\n                                        className={classes.formControl}\n                                    >\n                                        <InputLabel id=\"SlotTime\">\n                                            Slot Time\n                                        </InputLabel>\n                                        <Select\n                                            labelId=\"SlotTime\"\n                                            id=\"SlotTime\"\n                                            value={slotLabel}\n                                            onChange={handleSlotTime}\n                                            label=\"Slot Time\"\n                                        >\n                                            {this.getSlotTimes().map(\n                                                (item, i) => (\n                                                    <MenuItem\n                                                        key={i}\n                                                        value={item.label}\n                                                    >\n                                                        {item.label}\n                                                    </MenuItem>\n                                                )\n                                            )}\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                        </Box>\n                        <Box\n                            borderRadius={5}\n                            style={{ width: \"100%\", backgroundColor: \"white\" }}\n                            m={2}\n                            p={1}\n                        >\n                            <Grid item container xs={12}>\n                                <Grid item xs={12}>\n                                    <Box>\n                                        {data.itemList.map((value, i) => (\n                                            <Chip\n                                                key={i}\n                                                label={value}\n                                                color=\"secondary\"\n                                                className={classes.chip}\n                                            />\n                                        ))}\n                                    </Box>\n                                </Grid>\n                            </Grid>\n                        </Box>\n                        <Box\n                            borderRadius={5}\n                            boxShadow={2}\n                            style={{ width: \"100%\", backgroundColor: \"white\" }}\n                            m={2}\n                            p={1}\n                        >\n                            <Typography>\n                                {data.itemList.length\n                                    ? `${data.itemList.length} items selected.`\n                                    : \"\"}\n                                <br />\n                                You'll be alloted a period within the slot you\n                                choosed.\n                            </Typography>\n                            <br />\n                            <Grid\n                                item\n                                container\n                                direction=\"row\"\n                                justify=\"center\"\n                            >\n                                <Button\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    onClick={handleBooking}\n                                >\n                                    Confirm Booking\n                                </Button>\n                            </Grid>\n                        </Box>\n                    </form>\n                ) : this.state.isLoading ? (\n                    <Box m={3}>\n                        <CircularProgress color=\"primary\" />\n                    </Box>\n                ) : (\n                    <SuccessNoticeBody\n                        data={this.state.noticeBody}\n                        error={!this.state.success}\n                    />\n                )}\n            </Dialog>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(EditBookings);\n\n// arrivalHour: 15;\n// arrivalMinute: 0;\n// arrivalTimeIST: 3;\n// deliveryHour: 15;\n// deliveryMinute: 30;\n// deliveryTimeIST: 3;\n// message: \"Booking updated successfully\";\n\nclass SuccessNoticeBody extends Component {\n    state = {};\n\n    render() {\n        if (this.props.error) {\n            const { message } = this.props.data;\n            return (\n                <Box m={2}>\n                    <Typography\n                        variant=\"h5\"\n                        style={{ margin: 20 }}\n                        color=\"error\"\n                        align=\"center\"\n                    >\n                        <b>{message}</b>\n                    </Typography>\n                </Box>\n            );\n        } else {\n            const {\n                arrivalHour,\n                arrivalMinute,\n                deliveryHour,\n                message,\n                deliveryMinute,\n            } = this.props.data;\n            return (\n                <Box m={2}>\n                    <Typography variant=\"h5\" align=\"center\" gutterBottom>\n                        <img\n                            src=\"https://www.huayeahfabric.com/wp-content/uploads/2019/06/success.gif\"\n                            style={{ height: 150, margin: \"auto\" }}\n                        />\n                        <br />\n                        Thank you for your order.\n                        <br />\n                        <p style={{ fontSize: 20 }}>\n                            You are alloted the slot <br />\n                            <b style={{ fontSize: 26 }}>\n                                {timeString(arrivalHour, arrivalMinute)} →{\" \"}\n                                {timeString(deliveryHour, deliveryMinute)}\n                            </b>\n                        </p>\n                    </Typography>\n                    <Typography variant=\"h6\" align=\"center\">\n                        <b>{message}</b>\n                    </Typography>\n                </Box>\n            );\n        }\n    }\n}\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { Divider } from \"@material-ui/core\";\nimport EditBookings from \"./editBookings\";\nimport { getShopDetails } from \"../../../../services/dataServices\";\n\nvar QRCode = require(\"qrcode.react\");\n\nconst useStyles = (theme) => ({\n    activeRoot: {\n        width: 250,\n        //inWidth: 200,\n        //background: \"#80ffd4\",\n        color: \"black\",\n        \"&:hover\": {\n            background: \"#efefef\",\n        },\n    },\n    expiredRoot: {\n        maxWidth: 250,\n        background: \"#ffff80\",\n        color: \"black\",\n        \"&:hover\": {\n            background: \"#ffe066\",\n        },\n    },\n    media: {\n        height: 150,\n        width: 150,\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        margin: \"auto\",\n    },\n    expand: {\n        transform: \"rotate(0deg)\",\n        marginLeft: \"auto\",\n        transition: theme.transitions.create(\"transform\", {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: \"rotate(180deg)\",\n    },\n    chips: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    chip: {\n        margin: 2,\n    },\n    margin: {\n        margin: theme.spacing(0.5),\n        padding: theme.spacing(1),\n    },\n});\n\nfunction timeString(h, m = 0) {\n    let d = new Date();\n    d.setHours(h);\n    d.setMinutes(m);\n    return d.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n    });\n}\n\nclass SlotCard extends Component {\n    state = {\n        expanded: false,\n        data: this.props.data,\n        shopData: {},\n        open: false,\n        isLoading: false,\n    };\n\n    async componentDidMount() {\n        this.setState({ isLoading: true });\n        try {\n            const { data } = await getShopDetails(this.props.data.shopId);\n            this.setState({ shopData: data[0] });\n        } catch (ex) {\n            alert(\"An error Occured. Check Internet or Re signin\");\n            console.log(ex);\n        }\n        this.setState({ isLoading: false });\n    }\n\n    handleSlotChange = newData => {\n        let data = { ...this.state.data };\n        data.arrivalHour = newData.arrivalHour;\n        data.arrivalMinute = newData.arrivalMinute;\n        data.deliveryHour = newData.deliveryHour;\n        data.deliveryMinute = newData.deliveryMinute;\n        this.setState({ data });\n    }\n\n    handleExpandClick = () => {\n        this.setState({ expanded: !this.state.expanded });\n    };\n\n    isEditable = () => {\n        return (\n            this.props.isExpired ||\n            this.state.isLoading\n        );\n    }\n\n    handleEdit = () => {\n        this.setState({ open: true });\n    }\n    handleClose = () => {\n        this.setState({ open: false });\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { expanded, data, open, isLoading, shopData } = this.state;\n        const { handleClose, handleEdit,handleSlotChange } = this;\n        return (\n            <Card\n                className={classes.activeRoot}\n                onMouseOver={this.handleExpandClick}\n                onMouseOut={this.handleExpandClick}\n            >\n                {isLoading ? (\n                    \"waiting for network..\"\n                ) : (\n                    <CardHeader title={shopData.shopName} />\n                )}\n                <Grid justify=\"center\">\n                    <QRCode\n                        value={data.bookingId+\"@@##$$\"+data.otp}\n                        style={{ margin: \"auto\" }}\n                        className={classes.media}\n                    />\n                    <Typography variant=\"body1\" align=\"center\" style={{margin:10}}><b>OTP: {data.otp}</b></Typography>\n                </Grid>\n\n                <CardContent>\n                    <Typography\n                        variant=\"h6\"\n                        justify=\"center\"\n                        align=\"center\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                    >\n                        <b>\n                            {timeString(data.arrivalHour, data.arrivalMinute)} →{\" \"}\n                            {timeString(data.deliveryHour, data.deliveryMinute)}\n                        </b>\n                        <br />\n                    </Typography>\n                </CardContent>\n                <CardActions disableSpacing>\n                    <Button\n                        disabled={this.isEditable()}\n                        variant=\"outlined\"\n                        className={classes.margin}\n                        color=\"primary\"\n                        startIcon={<EditIcon />}\n                        onClick={handleEdit}\n                    >\n                        Edit\n                    </Button>\n\n                    <Button\n                        variant=\"outlined\"\n                        className={classes.margin}\n                        color=\"secondary\"\n                        startIcon={<DeleteIcon />}\n                        onClick={()=> this.props.handleDelete(data.bookingId)}\n                    >\n                        Delete\n                    </Button>\n                    <EditBookings\n                        data={this.state.shopData}\n                        bookingDetails={data}\n                        open={open}\n                        handleClose={handleClose}\n                        setSlotTime={handleSlotChange}\n                    />\n                    <IconButton\n                        className={clsx(classes.expand, {\n                            [classes.expandOpen]: expanded,\n                        })}\n                        aria-expanded={expanded}\n                        aria-label=\"show more\"\n                    >\n                        <ExpandMoreIcon />\n                    </IconButton>\n                </CardActions>\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent className={classes.chips}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            Order summary\n                        </Typography>\n                        <hr />\n                        <br />\n                        <br />\n                        {data.purchaseItems.split(\",\").map((value) => (\n                            <Chip\n                                key={value}\n                                label={value}\n                                color=\"primary\"\n                                className={classes.chip}\n                            />\n                        ))}\n                    </CardContent>\n                </Collapse>\n                <Divider />\n            </Card>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(SlotCard);\n","import React, { Component } from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\nimport SlotCard from \"./components/slotCard\";\nimport { getBookedSlotCustomer } from \"../../../utils/auth\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { getMyBookings } from \"../../../services/dataServices\";\nimport { deleteSlots } from \"../../../services/userService\";\n\nclass MyBookings extends Component {\n    state = {\n        slotData: [],\n        showPastSlot: false,\n        editDialogue: false,\n        isLoading: false,\n        errorMessage: \"\",\n    };\n\n    async componentDidMount() {\n        this.setState({ isLoading: true });\n        try {\n            const response = await getMyBookings();\n            console.log(response.data);\n            this.setState({ slotData: response.data, errorMessage: \"\" });\n        } catch (ex) {\n            console.log(ex.response);\n            this.setState({\n                errorMessage:\n                    \"Firebase ID token has expired. Get a fresh ID token by RE SIGN IN.\",\n            });\n        }\n        this.setState({ isLoading: false });\n    }\n\n    isExpired = (data) => {\n        const ctime = new Date();\n        let slotStartTme = new Date(data.createdAt);\n        slotStartTme.setHours(data.arrivalHour);\n        slotStartTme.setMinutes(data.arrivalMinute);\n        return ctime.getTime() >= slotStartTme.getTime();\n    };\n\n    handleDelete = async id => {\n        const copy = [...this.state.slotData];\n        this.setState({ slotData: copy.filter(c => c.bookingId !== id) });\n        console.log(\n            \"data updated\",\n            this.state.slotData\n        );\n\n        try {\n            console.log(copy.length);\n            const { data } = await deleteSlots(id);\n            console.log(data);\n            alert(data.message);\n            this.forceUpdate();\n        } catch (ex) {\n            alert(\"An error occured\");\n            console.log(ex.response);\n            this.setState({ slotData: copy });\n        }\n    }\n\n    numberOfActiveBookngs = () => {\n        let count = 0;\n        for (const item of this.state.slotData) {\n            if (!this.isExpired(item)) count++;\n        }\n        return count;\n    };\n\n    showPastSlot = () => {\n        this.setState({ showPastSlot: !this.state.showPastSlot });\n    };\n\n    render() {\n        console.log(\"render the slots\",this.state.slotData);\n        const { slotData: data } = this.state;\n        return (\n            <Grid container spacing={2} justify=\"flex-start\">\n                {this.state.isLoading ? (\n                    <Grid item>\n                        <CircularProgress />\n                    </Grid>\n                ) : this.state.errorMessage ? (\n                    <h2>{this.state.errorMessage}</h2>\n                ) : (\n                    <React.Fragment>\n                        <Grid xs={12} item style={{ margin: 6 }}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"large\"\n                            >{`Active Slots  ${this.numberOfActiveBookngs()}`}</Button>\n                        </Grid>\n                        {data.map(\n                            (cards, i) =>\n                                this.isExpired(cards) || (\n                                    <Grid key={i} item md={4} lg={2}>\n                                        <SlotCard\n                                            data={cards}\n                                            isExpired={this.isExpired(cards)}\n                                            handleDelete={this.handleDelete}\n                                        />\n                                    </Grid>\n                                )\n                        )}\n                        <Grid xs={12} item style={{ margin: 6 }}>\n                            <Button\n                                variant=\"contained\"\n                                onClick={this.showPastSlot}\n                                label=\"See Past Slots\"\n                                color=\"secondary\"\n                            >\n                                See Past Slots\n                            </Button>\n                        </Grid>\n                        {this.state.showPastSlot &&\n                            data.map(\n                                (cards, i) =>\n                                    this.isExpired(cards) && (\n                                        <Grid key={i} item sm={4} md={3}>\n                                            <SlotCard\n                                                data={cards}\n                                                isExpired={this.isExpired(\n                                                    cards\n                                                )}\n                                                handleDelete={this.handleDelete}\n                                            />\n                                        </Grid>\n                                    )\n                            )}\n                    </React.Fragment>\n                )}\n            </Grid>\n        );\n    }\n}\n\nexport default MyBookings;\n","import React, { Component } from \"react\";\nimport { Grid, Button, Box } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n    userDetails,\n    uploadPhoto,\n    updateCustomerDetails,\n} from \"../../../services/userService\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\n\nconst useStyles = (theme) => ({\n    largeAvatar: {\n        width: theme.spacing(35),\n        height: theme.spacing(35),\n        margin: \"auto\",\n    },\n});\n\nfunction buildFileSelector() {\n    const fileSelector = document.createElement(\"input\");\n    fileSelector.setAttribute(\"type\", \"file\");\n    fileSelector.setAttribute(\"multiple\", \"multiple\");\n    return fileSelector;\n}\n\nclass MyProfile extends Component {\n    state = {\n        userData: {},\n        isLoading: false,\n        edit: false,\n        selectedFile: null,\n    };\n\n    async componentDidMount() {\n        this.setState({ isLoading: true });\n        try {\n            const response = await userDetails();\n            this.setState({ userData: response.data.userCredentials });\n            console.log(response);\n        } catch (ex) {\n            console.log(ex.response);\n        }\n        this.setState({ isLoading: false });\n        this.fileSelector = buildFileSelector();\n        this.fileSelector.setAttribute(\"onchange\", this.updateFile);\n    }\n\n    getTime = (t) => {\n        const d = new Date(t);\n        return d.toDateString();\n    };\n\n    handleClick = () => {\n        this.setState({ edit: true });\n    };\n\n    handleClose = () => {\n        this.setState({ edit: false });\n    };\n\n    handleFile = () => {\n        this.fileSelector.click();\n        console.log(\"hello\", this.fileSelector);\n        console.log(this.state.selectedFile);\n    };\n\n    uploadFile = async () => {\n        const formData = new FormData();\n        formData.append(\n            \"Image\",\n            this.state.selectedFile,\n            this.state.selectedFile.name\n        );\n        try {\n            const response = await uploadPhoto(formData);\n            console.log(response);\n            const url = URL.createObjectURL(this.state.selectedFile);\n            let userData = { ...this.state.userData };\n            userData.imageUrl = url;\n            this.setState({ userData });\n            this.forceUpdate();\n        } catch (ex) {\n            console.log(ex.response);\n        } finally {\n            this.setState({ selectedFile: null });\n        }\n    };\n\n    updateFile = (event) => {\n        this.setState({ selectedFile: event.target.files[0] });\n        console.log(this.state.selectedFile, event.target.files);\n        // this.uploadFile();\n    };\n\n    // address: \"undefined, Durgapur, West Bengal [WB], India\";\n    // createdAt: \"2020-07-17T06:34:53.036Z\";\n    // email: \"skshahnawaz2909@gmail.com\";\n    // firstName: \"Sk\";\n    // gender: \"Male\";\n    // imageUrl: \"https://picsum.photos/200\";\n    // lastName: \"Shahnawaz\";\n    // phoneNumber: \"6297939928\";\n    // userId: \"iS3rFzmTr6MPbySvMjaiBlR8MDO2\";\n\n    render() {\n        const { classes } = this.props;\n        const { userData } = this.state;\n        console.log(\"hello\", this.fileSelector);\n        return (\n            <Grid container justify=\"center\" spacing={5}>\n                {this.state.isLoading ? (\n                    <Grid item style={{ marginTop: 20 }}>\n                        <CircularProgress color=\"secondary\" />\n                    </Grid>\n                ) : (\n                    <React.Fragment>\n                        {\" \"}\n                        <Grid\n                            item\n                            container\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            xs={12}\n                            spacing={2}\n                        >\n                            {/* //<div style={{ padding: 10 }}> */}\n                            <Grid item>\n                                <Avatar\n                                    src={\n                                        userData.imageUrl ||\n                                        \"https://picsum.photos/500/500\"\n                                    }\n                                    className={classes.largeAvatar}\n                                />\n                            </Grid>\n                            <Grid item>\n                                {\" \"}\n                                {this.state.selectedFile ? (\n                                    <React.Fragment>\n                                        <Typography variant=\"body1\">\n                                            {this.state.selectedFile.name}\n                                        </Typography>\n                                        <Button\n                                            variant=\"contained\"\n                                            onClick={this.uploadFile}\n                                            color=\"primary\"\n                                        >\n                                            upload\n                                        </Button>\n                                    </React.Fragment>\n                                ) : (\n                                    <React.Fragment>\n                                        <label\n                                            htmlFor=\"uploadFile\"\n                                            style={{ cursor: \"pointer\" }}\n                                        >\n                                            <AddAPhotoIcon fontSize=\"large\" />\n                                        </label>\n                                        <input\n                                            type=\"file\"\n                                            id=\"uploadFile\"\n                                            multiple=\"multiple\"\n                                            onChange={this.updateFile}\n                                            style={{ display: \"none\" }}\n                                        />\n                                    </React.Fragment>\n                                )}\n                            </Grid>\n\n                            <br />\n                            <Grid item>\n                                <Typography\n                                    variant=\"h3\"\n                                    component=\"h3\"\n                                    align=\"center\"\n                                >\n                                    {userData.firstName +\n                                        \" \" +\n                                        userData.lastName}\n                                </Typography>\n                            </Grid>\n\n                            {/* </div> */}\n                        </Grid>\n                        <Grid xs={12} item>\n                            <Typography variant=\"h6\" align=\"center\">\n                                {userData.address}\n                            </Typography>\n                        </Grid>\n                        <Grid\n                            item\n                            container\n                            justify=\"center\"\n                            xs={8}\n                            direction=\"row\"\n                        >\n                            <Grid\n                                item\n                                sm={4}\n                                md={4}\n                                lg={4}\n                                xl={4}\n                                container\n                                alignItems=\"center\"\n                                direction=\"column\"\n                            >\n                                <Grid item>\n                                    <EmailIcon />\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant=\"h6\" align=\"center\">\n                                        {userData.email}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid\n                                item\n                                sm={4}\n                                md={4}\n                                lg={4}\n                                xl={4}\n                                container\n                                alignItems=\"center\"\n                                direction=\"column\"\n                            >\n                                <Grid item>\n                                    <PhoneIcon />\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant=\"h6\" align=\"center\">\n                                        {userData.phoneNumber}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid\n                            item\n                            xs={6}\n                            container\n                            spacing={3}\n                            alignItems=\"center\"\n                            direction=\"column\"\n                        >\n                            <Grid item>\n                                <Button\n                                    onClick={this.handleClick}\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Edit\n                                </Button>\n                            </Grid>\n                            <Grid item>\n                                <Typography\n                                    variant=\"caption\"\n                                    color=\"textSecondary\"\n                                >\n                                    Member since{\" \"}\n                                    {this.getTime(userData.createdAt)}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <EditForm\n                            open={this.state.edit}\n                            handleClose={this.handleClose}\n                            data={userData}\n                        />\n                    </React.Fragment>\n                )}\n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(MyProfile);\n\nclass EditForm extends Component {\n    state = {\n        data: {\n            firstName: this.props.data.firstName,\n            lastName: this.props.data.lastName,\n            phoneNumber: this.props.data.phoneNumber,\n            address: this.props.data.address,\n        },\n        shouldAwait: false,\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        let data = { ...this.state.data };\n        data[input.name] = input.value;\n        this.setState({ data });\n    };\n\n    handleSelect = ({ target: { name, value } }) => {\n        let data = { ...this.state.data };\n        data[name] = value;\n        this.setState({ data });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(\"Registered\", this.state);\n        this.doSubmit();\n    };\n\n    doSubmit = async () => {\n        this.setState({ shouldAwait: true });\n        try {\n            const response = await updateCustomerDetails(this.state.data);\n            console.log(response);\n            this.setState({ shouldAwait: false });\n            alert(response.data.message);\n        } catch (ex) {\n            // alert(\"Cann't Update. \");\n            console.log(ex.response);\n        }\n        this.props.handleClose();\n        this.setState({ shouldAwait: false });\n    };\n\n    updateLocation = (addr) => {\n        let data = { ...this.state.data };\n        data[\"address\"] = addr.description;\n        this.setState({ data });\n        localStorage.setItem(\"userAddress\", addr.description);\n    };\n\n    render() {\n        const { handleClose, open } = this.props;\n        const { data } = this.state;\n        return (\n            <Dialog\n                onClose={handleClose}\n                aria-labelledby=\"simple-dialog-title\"\n                open={open}\n            >\n                <Box m={2}>\n                    <form\n                        style={{ width: \"100%\", marginTop: 5 }}\n                        noValidate\n                        onSubmit={this.handleSubmit}\n                    >\n                        <Grid container spacing={2}>\n                            <Box\n                                borderColor=\"primary.main\"\n                                border={1}\n                                borderRadius=\"borderRadius\"\n                                m={1}\n                                p={2}\n                                style={{ width: \"100%\" }}\n                            >\n                                <Typography variant=\"caption\" display=\"block\">\n                                    Name and Contact Details\n                                </Typography>\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            name=\"firstName\"\n                                            value={data.firstName}\n                                            variant=\"filled\"\n                                            required\n                                            fullWidth\n                                            id=\"firstName\"\n                                            label=\"First Name\"\n                                            autoFocus\n                                            onChange={this.handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            variant=\"filled\"\n                                            required\n                                            fullWidth\n                                            id=\"lastName\"\n                                            label=\"Last Name\"\n                                            name=\"lastName\"\n                                            value={data.lastName}\n                                            onChange={this.handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={12}>\n                                        <TextField\n                                            variant=\"filled\"\n                                            required\n                                            fullWidth\n                                            value={data.phoneNumber}\n                                            id=\"phoneNumber\"\n                                            label=\"Contact Number\"\n                                            name=\"phoneNumber\"\n                                            onChange={this.handleChange}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Box>\n                            <Box\n                                borderColor=\"primary.main\"\n                                border={1}\n                                borderRadius=\"borderRadius\"\n                                m={1}\n                                p={2}\n                                style={{ width: \"100%\" }}\n                            >\n                                <Typography variant=\"caption\" display=\"block\">\n                                    Address\n                                </Typography>\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12}>\n                                        <Paper\n                                            component=\"form\"\n                                            style={{\n                                                padding: \"2px 4px\",\n                                                display: \"flex\",\n                                                alignItems: \"center\",\n                                                width: \"100%\",\n                                            }}\n                                        >\n                                            <IconButton\n                                                type=\"submit\"\n                                                style={{ padding: 5 }}\n                                                aria-label=\"search\"\n                                            >\n                                                <SearchIcon />\n                                            </IconButton>\n                                            <GooglePlacesAutocomplete\n                                                onSelect={this.updateLocation}\n                                            />\n                                        </Paper>\n                                    </Grid>\n                                </Grid>\n                            </Box>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            disabled={this.state.shouldAwait}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={{ marginTop: 15 }}\n                        >\n                            Submit\n                        </Button>\n                    </form>\n                </Box>\n            </Dialog>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport http from \"../../../services/httpServices\";\nimport { withRouter } from \"react-router-dom\";\nimport { logout } from \"../../../services/userService\";\n\nclass Logout extends Component {\n  state = {};\n  async componentDidMount() {\n    try {\n      const response = await logout();\n      console.log(response);\n    } catch (ex) {\n      console.log(ex);\n    }\n    localStorage.clear();\n    window.location = \"/\";\n  }\n  render() {\n    return null;\n  }\n}\n\nexport default withRouter(Logout);\n","import React, { Component } from 'react';\nimport { Typography, Box } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\n\n\nclass Address extends Component {\n    state = {  }\n    render() { \n        const { address, phoneNumber, ownerName } = this.props.data;\n        return (\n            <Grid item>\n                <Box\n                    borderRadius={5}\n                    boxShadow={3}\n                    padding={2}\n                    style={{ backgroundColor: \"white\" }}\n                >\n                    <Typography\n                        variant=\"body1\"\n                        style={{ fontSize: 18, borderRadius: 5 }}\n                    >\n                        <b>{ownerName}</b>\n                        <br />\n                        {address}\n                        <br />\n                        Contact: {phoneNumber}\n                    </Typography>\n                </Box>\n            </Grid>\n        );\n    }\n}\n \nexport default Address;","import React, { Component } from 'react';\n\nclass Overview extends Component {\n    state = {  }\n    render() { \n        return ( \n            <p>Overview</p>\n         );\n    }\n}\n \nexport default Overview;","import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Box } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { bookNewSlot } from \"../../../../services/userService\";\nimport CurrentLocation from \"./getLocation\";\n\nconst useStyles = (theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        width: \"90%\",\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginTop: 10,\n        //backgroundColor: \"#d96477\",\n    },\n    chips: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    chip: {\n        margin: 2,\n    },\n});\n\nclass Order extends Component {\n    state = {\n        data: {\n            itemList: [],\n            period: \"Morning\",\n            slot: {},\n            otp: Math.round(Math.random(0, 1) * 777777 + 222222),\n        },\n        slotLabel: \"\",\n        item: \"\",\n        openModal: false,\n        dialogueData: {},\n        errors: {},\n    };\n\n    // componentDidMount() {\n    //     let data = { ...this.state.data };\n    //     data.period = this.periodData()[0].label;\n    //     this.setState({ data });\n    // }\n\n    formData = {\n        period: [\n            { label: \"Morning\", slot: { start: 0, end: 12 } },\n            { label: \"Afternoon\", slot: { start: 12, end: 18 } },\n            { label: \"Evening\", slot: { start: 18, end: 23 } },\n        ],\n    };\n\n    periodData = () => {\n        const {\n            openingHour,\n            openingMinute,\n            closingHour,\n            closingMinute,\n        } = this.props.data;\n        let period = [\n            {\n                label: \"Morning\",\n                slot: { start: { h: 0, m: 0 }, end: { h: 12, m: 0 } },\n            },\n            {\n                label: \"Afternoon\",\n                slot: { start: { h: 12, m: 0 }, end: { h: 18, m: 0 } },\n            },\n            {\n                label: \"Evening\",\n                slot: { start: { h: 18, m: 0 }, end: { h: 24, m: 0 } },\n            },\n        ];\n        if (openingHour < 12 && openingHour > 0) {\n            period[0].slot.start = { h: openingHour, m: openingMinute };\n        } else if (openingMinute >= 12 && openingHour < 18) {\n            period.splice(0, 1);\n            period[0].slot.start = { h: openingHour, m: openingMinute };\n        } else if (openingMinute >= 18 && openingHour < 24) {\n            period.splice(0, 2);\n            period[0].slot.start = { h: openingHour, m: openingMinute };\n        }\n\n        if (closingHour > 0 && closingHour <= 12) {\n            period[period.length - 1].slot.end = {\n                h: closingHour,\n                m: closingMinute,\n            };\n            period.splice(1, 2);\n        } else if (closingHour > 12 && closingHour <= 18) {\n            period[period.length - 1].slot.end = {\n                h: closingHour,\n                m: closingMinute,\n            };\n            period.splice(2, 1);\n        } else if (closingHour > 18 && closingHour <= 24) {\n            period[period.length - 1].slot.end = {\n                h: closingHour,\n                m: closingMinute,\n            };\n        }\n\n        return period;\n    };\n\n    getSlotTimes = (period) => {\n        let slotTimeArr = [];\n        let stime = new Date();\n        const currentTime = new Date();\n        const gap = 60 * 60 * 1000;\n        if (!period)\n            period = this.formData.period.filter(\n                (c) => !c.label.localeCompare(this.state.data.period)\n            )[0].slot;\n        const duration = 3600 * 1000;\n        stime.setHours(period.start);\n        stime.setMinutes(0);\n        stime.setSeconds(0);\n        const {\n            openingHour,\n            openingMinute,\n            closingHour,\n            closingMinute,\n        } = this.props.data;\n        if (period.end < currentTime.getHours()) return [];\n        while (\n            stime.getHours() < period.end &&\n            stime.getHours() < closingHour\n        ) {\n            const start = new Date(stime);\n            const end = new Date(stime.getTime() + duration);\n            if (\n                start.getTime() < currentTime.getTime() ||\n                start.getHours() < openingHour\n            ) {\n                stime.setTime(stime.getTime() + gap);\n                continue;\n            }\n            let slot = {};\n            slot.interval = { start: start.getHours(), end: end.getHours() };\n            slot.label =\n                start.toLocaleTimeString(\"en-US\", {\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                    hour12: true,\n                }) +\n                \" - \" +\n                end.toLocaleTimeString(\"en-US\", {\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                    hour12: true,\n                });\n\n            slotTimeArr.push(slot);\n            //if (start.getHours() <= this.props.closingHour) break;\n            stime.setTime(stime.getTime() + gap);\n        }\n        //console.log(slotTimeArr);\n        return slotTimeArr;\n    };\n\n    handlePeriod = (e) => {\n        const data = { ...this.state.data };\n        data.period = e.target.value.label;\n        //data.slot = this.getSlotTimes(e.target.value.slot)[0] || \"\" ;\n        this.setState({ data });\n    };\n\n    handleAddItem = () => {\n        const data = { ...this.state.data };\n        if (this.state.item) data.itemList.push(this.state.item);\n        this.setState({ data, item: \"\", errors: {} });\n    };\n\n    handleSlotTime = (e) => {\n        const data = { ...this.state.data };\n        const slot = this.getSlotTimes().find(\n            (time) => !time.label.localeCompare(e.target.value)\n        ).interval;\n        data.slot = slot;\n        this.setState({ data, slotLabel: e.target.value });\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        this.setState({ [input.name]: input.value });\n    };\n\n    handleDelete = (item) => {\n        const data = { ...this.state.data };\n        const index = data.itemList.indexOf(item);\n        data.itemList.splice(index, 1);\n        this.setState({ data });\n    };\n\n    handleBooking = async () => {\n        try {\n            const { data } = await bookNewSlot(\n                this.state.data,\n                this.props.data.shopId\n            );\n            const otp = this.state.data.otp;\n            this.setState({ dialogueData: {otp, ...data} });\n            this.setState({ openModal: true });\n        } catch (ex) {\n            console.log(ex);\n            this.setState({ errors: ex.response.data });\n            //alert(\"An error occured, Try re signin and booking\");\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ openModal: false });\n    };\n\n    render() {\n        //console.log(\"order:\", this.periodData());\n        const { data, item, openModal, slotLabel } = this.state;\n        const { period } = this.formData;\n        const { classes } = this.props;\n        const {\n            handlePeriod,\n            handleSlotTime,\n            handleAddItem,\n            handleDelete,\n            handleBooking,\n            handleClose,\n        } = this;\n        return (\n            <Grid container spacing={2} style={{ paddingTop: 15 }}>\n                <form style={{ width: \"100%\" }}>\n                    {/* <CurrentLocation /> */}\n                    <br />\n                    <Box\n                        borderRadius={5}\n                        boxShadow={5}\n                        style={{ width: \"100%\", backgroundColor: \"white\" }}\n                        m={1}\n                        p={1}\n                    >\n                        <Grid item container xs={12}>\n                            <Grid item xs={12} md={6}>\n                                <FormControl\n                                    variant=\"outlined\"\n                                    className={classes.formControl}\n                                    required\n                                >\n                                    <InputLabel id=\"SelectPeriod\">\n                                        Slot Type\n                                    </InputLabel>\n                                    <Select\n                                        labelId=\"SelectPeriod\"\n                                        id=\"SelectPeriod\"\n                                        value={\n                                            period.filter(\n                                                (c) =>\n                                                    !c.label.localeCompare(\n                                                        data.period\n                                                    )\n                                            )[0]\n                                        }\n                                        onChange={handlePeriod}\n                                        label=\"Period\"\n                                    >\n                                        {period.map((time, i) => (\n                                            <MenuItem key={i} value={time}>\n                                                {time.label}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <FormControl\n                                    variant=\"outlined\"\n                                    required\n                                    className={classes.formControl}\n                                >\n                                    <InputLabel id=\"SlotTime\">\n                                        Slot Time\n                                    </InputLabel>\n                                    <Select\n                                        labelId=\"SlotTime\"\n                                        id=\"SlotTime\"\n                                        value={slotLabel}\n                                        onChange={handleSlotTime}\n                                        label=\"Slot Time\"\n                                    >\n                                        {this.getSlotTimes().map((item, i) => (\n                                            <MenuItem\n                                                key={i}\n                                                value={item.label}\n                                            >\n                                                {item.label}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderRadius={5}\n                        boxShadow={5}\n                        style={{ width: \"100%\", backgroundColor: \"white\" }}\n                        m={1}\n                        p={1}\n                    >\n                        <Grid item container xs={12}>\n                            <Grid item xs={12} md={8}>\n                                <TextField\n                                    id=\"standard-basic\"\n                                    name=\"item\"\n                                    value={item}\n                                    onChange={this.handleChange}\n                                    label=\"Item\"\n                                    className={classes.formControl}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={4}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    size=\"large\"\n                                    onClick={handleAddItem}\n                                    className={classes.button}\n                                    startIcon={<AddIcon />}\n                                >\n                                    add\n                                </Button>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Box>\n                                    {data.itemList.map((value, i) => (\n                                        <Chip\n                                            key={i}\n                                            label={value}\n                                            color=\"secondary\"\n                                            onDelete={() => handleDelete(value)}\n                                            className={classes.chip}\n                                        />\n                                    ))}\n                                </Box>\n                            </Grid>\n                            {this.state.errors &&\n                            this.state.errors.purchaseItems ? (\n                                <Grid item xs={12}>\n                                    <Typography variant=\"body2\" color=\"error\">\n                                        {this.state.errors.purchaseItems}\n                                    </Typography>\n                                </Grid>\n                            ) : null}\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderRadius={5}\n                        boxShadow={2}\n                        style={{ width: \"100%\", backgroundColor: \"white\" }}\n                        m={1}\n                        p={3}\n                    >\n                        <Typography>\n                            {data.itemList.length\n                                ? `${data.itemList.length} items selected.`\n                                : \"\"}\n                            <br />\n                            You'll be alloted a period within the slot you\n                            choosed.\n                        </Typography>\n                        <br />\n                        <Grid item container direction=\"row\" justify=\"center\">\n                            <Button\n                                disabled={\n                                    Object.keys(this.state.data.slot).length ===\n                                    0\n                                }\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={handleBooking}\n                            >\n                                Confirm Booking\n                            </Button>\n                        </Grid>\n                        <Dialog\n                            open={openModal}\n                            onClose={handleClose}\n                            aria-labelledby=\"simple-modal-title\"\n                            aria-describedby=\"simple-modal-description\"\n                        >\n                            <DialogContent>\n                                <ModalNoticeBody\n                                    data={this.state.dialogueData}\n                                />\n                            </DialogContent>\n                        </Dialog>\n                    </Box>\n                </form>\n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(Order);\n\nfunction timeString(h, m) {\n    let d = new Date();\n    d.setHours(h);\n    d.setMinutes(m);\n    return d.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n    });\n}\n\nclass ModalNoticeBody extends Component {\n    state = {};\n\n    render() {\n        const {\n            arrivalHour,\n            arrivalMinute,\n            deliveryHour,\n            bookingId,\n            otp,\n            deliveryMinute,\n        } = this.props.data;\n        return (\n            <Box>\n                <Typography variant=\"h5\" align=\"center\" gutterBottom>\n                    <img\n                        src=\"https://www.huayeahfabric.com/wp-content/uploads/2019/06/success.gif\"\n                        style={{ height: 150, margin: \"auto\" }}\n                    />\n                    <br />\n                    Thank you for your order.\n                    <br />\n                    <p style={{ fontSize: 20 }}>\n                        You are alloted the slot <br />\n                        <b style={{ fontSize: 26 }}>\n                            {timeString(arrivalHour, arrivalMinute)} →{\" \"}\n                            {timeString(deliveryHour, deliveryMinute)}\n                        </b>\n                    </p>\n                </Typography>\n                <Typography variant=\"h5\" align=\"center\">\n                    OTP: <b>{otp}</b>\n                </Typography><Typography variant=\"h6\" align=\"center\">\n                    Your Booking Id: <b>{bookingId}</b>\n                </Typography>\n            </Box>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\n\n\nconst useStyles = (theme) => ({\n    root: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        width:'100%',\n        justifyContent: \"space-around\",\n        overflow: \"hidden\",\n        marginTop:20,\n        backgroundColor: theme.palette.background.paper,\n    },\n    // gridList: {\n    //     width: 500,\n    //     height: 450,\n    // },\n});\n\nclass Image extends Component {\n    state = {};\n    tileData = [\n        {\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 2,\n        },{\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 1,\n        },{\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 1,\n        },{\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 1,\n        },{\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 1,\n        },{\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 1,\n        },{\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 2,\n        },{\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 3,\n        },\n    ];\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <GridList\n                    cellHeight={250}\n                    //className={classes.gridList}\n                    cols={3}\n                >\n                    {this.tileData.map((tile) => (\n                        <GridListTile\n                            key={tile.img}\n                            cols={tile.cols || 1}\n                        >\n                            <img src={tile.img} alt={tile.title} />\n                        </GridListTile>\n                    ))}\n                </GridList>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Image);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Box } from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport Button from \"@material-ui/core/Button\";\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport SentimentDissatisfiedIcon from \"@material-ui/icons/SentimentDissatisfied\";\nimport SentimentSatisfiedIcon from \"@material-ui/icons/SentimentSatisfied\";\nimport SentimentSatisfiedAltIcon from \"@material-ui/icons/SentimentSatisfiedAltOutlined\";\nimport SentimentVerySatisfiedIcon from \"@material-ui/icons/SentimentVerySatisfied\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { getReviews } from '../../../../services/dataServices';\n\n\nclass Review extends Component {\n    state = {\n        data: [],\n        sortType: \"Newest First\",\n        isLoading:false,\n    };\n\n    async componentDidMount() {\n        this.setState({ isLoading: true });\n        try {\n            const { data } = await getReviews(this.props.id);\n            this.setState({ data });\n        } catch (ex) {\n            console.log(ex.response);\n        }\n        this.setState({ isLoading: false });\n    }\n\n    sorting = [\n        \"Newest First\",\n        \"Oldest First\",\n        \"Highest Rated\",\n        \"Lowest Rated\"\n    ];\n\n    handleChange = event => {\n        this.setState({ sortType: event.target.value });\n    }\n\n    render() {\n        return (\n            <Grid container direction=\"row\" spacing={5} lg sm md xs>\n                {this.state.isLoading ? (\n                    <Grid item container direction=\"row\" justify=\"center\" style={{marginTop:10}}>\n                        <CircularProgress />\n                    </Grid>\n                ) : (\n                    <React.Fragment>\n                        <FormControl\n                            variant=\"standard\"\n                            style={{ marginLeft: 30, marginTop: 20 }}\n                            //className={classes.formControl}\n                        >\n                            <InputLabel id=\"demo-simple-select-filled-label\">\n                                Sort By\n                            </InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-filled-label\"\n                                id=\"demo-simple-select-filled\"\n                                value={this.state.sortType}\n                                onChange={this.handleChange}\n                            >\n                                {this.sorting.map((value, i) => (\n                                    <MenuItem key={i} value={value}>\n                                        {value}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                        {this.state.data.map((val) => (\n                            <React.Fragment>\n                                <ReviewCard key={val.ratingId} data={val} />\n                                <Divider />\n                            </React.Fragment>\n                        ))}\n                    </React.Fragment>\n                )}\n            </Grid>\n        );\n    }\n}\n\nexport default Review;\n\n\n\nconst customIcons = {\n    1: {\n        icon: <SentimentVeryDissatisfiedIcon />,\n        label: \"Very Dissatisfied\",\n    },\n    2: {\n        icon: <SentimentDissatisfiedIcon />,\n        label: \"Dissatisfied\",\n    },\n    3: {\n        icon: <SentimentSatisfiedIcon />,\n        label: \"Neutral\",\n    },\n    4: {\n        icon: <SentimentSatisfiedAltIcon />,\n        label: \"Satisfied\",\n    },\n    5: {\n        icon: <SentimentVerySatisfiedIcon />,\n        label: \"Very Satisfied\",\n    },\n};\nfunction IconContainer(props) {\n    const { value, ...other } = props;\n    return <span {...other}>{customIcons[value].icon}</span>;\n}\n\nIconContainer.propTypes = {\n    value: PropTypes.number.isRequired,\n};\n\n\nclass ReviewCard extends Component {\n    state = {\n        data: {},\n        liked: false,\n    };\n\n    handleLike = () => {\n        this.setState({ liked: !this.state.liked });\n    };\n\n    date = str => {\n        const options = {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\",\n        };\n        let d = new Date(str);\n        return d.toLocaleDateString(\"en-US\", options);\n    }\n\n    // createdAt: \"2020-07-20T13:15:35.544Z\";\n    // customerId: \"iS3rFzmTr6MPbySvMjaiBlR8MDO2\";\n    // customerName: \"Sk Shahnawaz\";\n    // imageUrl: \"https://picsum.photos/200\";\n    // rating: 5;\n    // ratingId: \"zKb44YHvLhhfBlnYnwER\";\n    // review: \"okay delivery\";\n\n    render() {\n        const {\n            customerName:name,\n            review,\n            rating,\n            imageUrl,\n            createdAt,\n            customerId,\n            ratingId,\n        } = this.props.data;\n        return (\n\n            <Grid\n                container\n                item\n                direction=\"column\"\n                lg={12}\n                sm={12}\n                md={12}\n                xl={12}\n            >\n                <Box borderRadius={5} style={{ padding: 8, width: \"100%\" }}>\n                    <Grid\n                        container\n                        item\n                        direction=\"row\"\n                        lg={12}\n                        sm={12}\n                        md={12}\n                        xl={12}\n                        spacing={5}\n                    >\n                        <Grid\n                            item\n                            container\n                            direction=\"row\"\n                            justify=\"flex-start\"\n                            lg={8}\n                            xl={8}\n                            spacing={2}\n                            sm={8}\n                        >\n                            <Grid item xs={2}>\n                                <Avatar\n                                    src={imageUrl}\n                                    style={{ margin: 5 }}\n                                />\n                            </Grid>\n                            <Grid\n                                item\n                                container\n                                direction=\"column\"\n                                xs={12}\n                                lg={8}\n                                xl={8}\n                            >\n                                <Typography component=\"h2\" variant=\"h5\">\n                                    {name}\n                                </Typography>\n                                <Typography\n                                    variant=\"subtitle1\"\n                                    color=\"textSecondary\"\n                                >\n                                    {this.date(createdAt)}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid\n                            item\n                            container\n                            lg={4}\n                            xl={4}\n                            sm={4}\n                            justify=\"flex-end\"\n                            alignItems=\"center\"\n                            spacing={1}\n                        >\n                            <Grid item>\n                                <Rating\n                                    name=\"ratings\"\n                                    defaultValue={rating}\n                                    readOnly\n                                    style={{ paddingTop: 4, color: \"#ff065c\" }}\n                                    getLabelText={(value) =>\n                                        customIcons[value].label\n                                    }\n                                    IconContainerComponent={IconContainer}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <Typography variant=\"h6\">\n                                    <b>{rating}</b>\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid>\n                        <Typography\n                            variant=\"subtitle1\"\n                            paragraph\n                            style={{ marginTop: 20 }}\n                        >\n                            {review}\n                        </Typography>\n                        <Grid\n                            container\n                            spacing={2}\n                            style={{ marginBottom: 10 }}\n                        >\n                            <Grid item>\n                                <Box\n                                    borderRadius={15}\n                                    style={{\n                                        backgroundImage: `url(${\"https://picsum.photos/200/150\"})`,\n                                        width: \"200px\",\n                                        height: \"150px\",\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <Box\n                                    borderRadius={15}\n                                    style={{\n                                        backgroundImage: `url(${\"https://picsum.photos/201/150\"})`,\n                                        width: \"200px\",\n                                        height: \"150px\",\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid>\n                        <Button\n                            color=\"secondary\"\n                            onClick={this.handleLike}\n                            startIcon={\n                                this.state.liked ? (\n                                    <ThumbUpAltIcon />\n                                ) : (\n                                    <ThumbUpAltOutlinedIcon />\n                                )\n                            }\n                        >\n                            like\n                        </Button>\n                        <Typography variant=\"caption\">\n                            {Math.round(Math.random(0, 1) * 500)} Likes\n                        </Typography>\n                    </Grid>\n                </Box>\n                <Divider style={{ width: \"90%\", margin: \"auto\" }} />\n            </Grid>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { Typography, Box, Button } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { giveReview } from '../../../../services/userService';\n\n\nclass GiveReview extends Component {\n    state = { write: false, reviewText: \"\", ratings: 0 };\n\n    handleClick = () => {\n        if (!localStorage.getItem(\"userLogged\")) {\n            alert(\"Please Sign in to review\");\n            window.location = \"/signin\";\n        } else {\n            if (!this.state.write) this.setState({ write: !this.state.write });\n            else this.handleSubmit();\n        }\n    };\n\n    handleSubmit = async () => {\n        this.setState({ write: !this.state.write });\n        try {\n            const response = await giveReview(this.state.ratings, this.props.id, this.state.reviewText);\n            console.log(response.data);\n            alert(\"Submitted\");\n        } catch (ex) {\n            alert(ex.response.data);\n            console.log(ex.response);\n        }\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        this.setState({ [input.name]: input.value });\n    };\n\n    handleRating = (event, value) => {\n        this.setState({ ratings: value });\n    }\n\n    render() {\n        return (\n            <Grid item>\n                <Box\n                    borderRadius={5}\n                    boxShadow={3}\n                    padding={2}\n                    style={{ backgroundColor: \"white\", width: \"100%\" }}\n                >\n                    <Typography style={{ fontSize: 25, color: \"#ff689c\" }}>\n                        <b>Rate your experience</b>\n                    </Typography>\n                    <Rating\n                        name=\"ratings\"\n                        style={{ fontSize: 25, color: \"#f10053\" }}\n                        onChange={this.handleRating}\n                        value={this.state.ratings}\n                    />\n                    <br />\n                    {this.state.write && (\n                        <TextField\n                            id=\"outlined-multiline-static\"\n                            label=\"Write your review here\"\n                            multiline\n                            value={this.state.reviewText}\n                            name=\"reviewText\"\n                            rows={6}\n                            fullWidth\n                            onChange={this.handleChange}\n                            defaultValue=\"\"\n                            variant=\"outlined\"\n                            style={{ marginBottom: 5, marginTop: 15 }}\n                        />\n                    )}\n                    <Button\n                        size=\"small\"\n                        color=\"secondary\"\n                        variant=\"outlined\"\n                        onClick={this.handleClick}\n                        style={{ marginTop: 5 }}\n                    >\n                        {this.state.write ? \"submit\" : \"Add a review\"}\n                    </Button>\n                </Box>\n            </Grid>\n        );\n    }\n}\n\nexport default GiveReview;\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { Box } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport BallotOutlinedIcon from \"@material-ui/icons/BallotOutlined\";\nimport PhotoLibraryOutlinedIcon from \"@material-ui/icons/PhotoLibraryOutlined\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport DashboardOutlinedIcon from \"@material-ui/icons/DashboardOutlined\";\nimport AddBoxOutlinedIcon from \"@material-ui/icons/AddBoxOutlined\";\nimport DirectionsIcon from \"@material-ui/icons/Directions\";\nimport ShareIcon from \"@material-ui/icons/Share\";\n\nimport Address from \"./Adress\";\nimport Overview from \"./Overview\";\nimport Order from \"./Order\";\nimport Image from \"./Image\";\nimport Review from \"./Reviews\";\nimport GiveReview from \"./giveReview\";\nimport { getShopDetails } from \"../../../../services/dataServices\";\n\nconst useStyles = (theme) => ({\n    chip: {\n        margin: 2,\n    },\n    toolbarSecondary: {\n        justifyContent: \"space-between\",\n        overflowX: \"auto\",\n    },\n    toolbarLink: {\n        padding: theme.spacing(1),\n        margin: 5,\n        flexShrink: 0,\n        fontSize: 12,\n        cursor: \"pointer\",\n    },\n});\n\nconst tabs = [\n    { title: \"Book Slot\", value: 0, icon: <AddBoxOutlinedIcon /> },\n    { title: \"Reviews\", value: 1, icon: <BallotOutlinedIcon /> },\n    { title: \"Photos\", value: 2, icon: <PhotoLibraryOutlinedIcon /> },\n];\n\nclass ShopPage extends Component {\n    state = {\n        data: {},\n        tabPageNumber: 0,\n        isLoading: true,\n        address: \"\",\n    };\n\n    async componentDidMount() {\n        const id = this.props.match.params.shopId;\n        this.setState({ isLoading: true });\n        try {\n            const { data } = await getShopDetails(id);\n            this.setState({ data: data[0], isLoading: false });\n        } catch (ex) {\n            console.log(ex);\n        }\n    }\n\n    getTabPage = (id, data) => {\n        const tabPage = [\n            <Order data={data} />,\n            <Review id={data.shopId} />,\n            <Image />,\n        ];\n        return tabPage[id];\n    };\n\n    handleTabs = (event, tabPageNumber) => {\n        this.setState({ tabPageNumber });\n    };\n\n    handleDirection = () => {\n        const userAddress = localStorage\n            .getItem(\"userAddress\")\n            .split(\" \")\n            .join(\"%20\");\n        const destination = this.state.data.address.split(\" \").join(\"%20\");\n\n        window.open(\n            `https://www.google.com/maps/dir/?api=1&origin=${userAddress}&destination=${destination}`,\n            \"_blank\"\n        );\n    };\n\n    render() {\n        console.log(this.state, this.props.userAddress);\n        const { classes } = this.props;\n        const {\n            imageUrl,\n            tags,\n            payment_modes,\n            shopRating: rating,\n            address,\n            phoneNumber,\n            ownerName,\n            shopId,\n            shopName,\n            discount,\n            openingTimeIST,\n            closingTimeIST,\n            openingHour,\n            openingMinute,\n            closingHour,\n            closingMinute,\n        } = this.state.data;\n        // const imageUrl =\n        //     imgUrl ||\n        //     \"https://picsum.photos/600/\" +\n        //         Math.round(Math.random(0, 1) * 200 + 500);\n\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                <Container maxWidth=\"xl\">\n                    <main>\n                        <Box boxShadow={0} p={2} style={{ width: \"100%\" }}>\n                            {this.state.isLoading ? (\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    xs\n                                    xl\n                                    lg\n                                    justify=\"center\"\n                                    style={{ marginTop: 20 }}\n                                >\n                                    <CircularProgress color=\"secondary\" />\n                                </Grid>\n                            ) : (\n                                <Grid container direction=\"row\" spacing={0}>\n                                    <Grid\n                                        item\n                                        container\n                                        sm={4}\n                                        md={4}\n                                        lg={4}\n                                        spacing={5}\n                                        direction=\"column\"\n                                        alignItems=\"center\"\n                                    >\n                                        <Grid item style={{ width: \"100%\" }}>\n                                            <Box\n                                                borderRadius={16}\n                                                boxShadow={3}\n                                                style={{\n                                                    backgroundImage: `url(${imageUrl})`,\n                                                    height: 450,\n                                                    backgroundSize: \"cover\",\n                                                    width: \"100%\",\n                                                }}\n                                            ></Box>\n                                        </Grid>\n                                        <Grid container item direction=\"row\">\n                                            <Grid\n                                                item\n                                                container\n                                                direction=\"column\"\n                                                sm={8}\n                                                lg={8}\n                                                md={8}\n                                                xl={8}\n                                                justify=\"flex-start\"\n                                                alignItems=\"flex-start\"\n                                            >\n                                                <Grid item>\n                                                    <Typography\n                                                        variant=\"h4\"\n                                                        style={{\n                                                            marginBottom: 10,\n                                                        }}\n                                                    >\n                                                        <b>{shopName}</b>\n                                                    </Typography>\n                                                    <Typography variant=\"body1\">\n                                                        <FiberManualRecordIcon\n                                                            style={{\n                                                                color: \"green\",\n                                                                fontSize: 13,\n                                                                marginRight: 5,\n                                                            }}\n                                                        />\n                                                        {openingTimeIST}\n                                                        <FiberManualRecordIcon\n                                                            style={{\n                                                                color: \"red\",\n                                                                fontSize: 13,\n                                                            }}\n                                                        />\n                                                        {closingTimeIST}\n                                                    </Typography>\n                                                </Grid>\n                                                <Grid\n                                                    item\n                                                    style={{\n                                                        marginTop: 20,\n                                                        marginBottom: 10,\n                                                    }}\n                                                >\n                                                    {tags.map((value) => (\n                                                        <Chip\n                                                            key={value}\n                                                            label={value}\n                                                            color=\"primary\"\n                                                            variant=\"outlined\"\n                                                            className={\n                                                                classes.chip\n                                                            }\n                                                        />\n                                                    ))}\n                                                </Grid>\n                                            </Grid>\n                                            <Grid\n                                                item\n                                                container\n                                                sm={4}\n                                                lg={4}\n                                                xl={4}\n                                                justify=\"flex-Start\"\n                                                alignItems=\"flex-end\"\n                                                direction=\"column\"\n                                            >\n                                                <Grid\n                                                    item\n                                                    container\n                                                    direction=\"row\"\n                                                    justify=\"flex-end\"\n                                                    style={{ marginBottom: 10 }}\n                                                >\n                                                    <Rating\n                                                        name=\"ratings\"\n                                                        defaultValue={rating[0]}\n                                                        precision={0.1}\n                                                        readOnly\n                                                        style={{\n                                                            fontSize: 40,\n                                                            color: \"red\",\n                                                        }}\n                                                    />\n                                                    <Typography\n                                                        variant=\"h5\"\n                                                        style={{\n                                                            marginTop: 5,\n                                                            marginLeft: 5,\n                                                        }}\n                                                    >\n                                                        <b>{rating[0]}</b>\n                                                    </Typography>\n                                                </Grid>\n                                                {/* <Grid\n                                                    item\n                                                    container\n                                                    direction=\"row\"\n                                                    justify=\"flex-end\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                    }}\n                                                >\n                                                    <Typography variant=\"body1\">\n                                                        {rating[1] + \" \"}\n                                                        reviews\n                                                    </Typography>\n                                                </Grid> */}\n                                                <br />\n                                                <Grid\n                                                    item\n                                                    container\n                                                    direction=\"row\"\n                                                    justify=\"flex-end\"\n                                                    spacing={5}\n                                                    style={{\n                                                        width: \"100%\",\n                                                    }}\n                                                >\n                                                    <Button\n                                                        variant=\"outlined\"\n                                                        style={{ margin: 5 }}\n                                                        color=\"secondary\"\n                                                        onClick={\n                                                            this.handleDirection\n                                                        }\n                                                        startIcon={\n                                                            <DirectionsIcon />\n                                                        }\n                                                    >\n                                                        direction\n                                                    </Button>\n                                                    <Button\n                                                        variant=\"outlined\"\n                                                        style={{ margin: 5 }}\n                                                        color=\"secondary\"\n                                                        startIcon={\n                                                            <ShareIcon />\n                                                        }\n                                                    >\n                                                        share\n                                                    </Button>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            container\n                                            spacing={2}\n                                            alignItems=\"center\"\n                                            justify=\"flex-start\"\n                                            direction=\"column\"\n                                        >\n                                            <Grid\n                                                item\n                                                style={{ width: \"100%\" }}\n                                            >\n                                                <Address\n                                                    data={{\n                                                        address,\n                                                        phoneNumber,\n                                                        ownerName,\n                                                    }}\n                                                />\n                                            </Grid>\n                                            <Grid\n                                                item\n                                                style={{ width: \"100%\" }}\n                                            >\n                                                <GiveReview id={this.state.data.shopId}/>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item sm={1} md={1} lg={1}></Grid>\n                                    <Grid\n                                        item\n                                        container\n                                        sm={6}\n                                        md={6}\n                                        lg={6}\n                                        style={{ width: \"100%\" }}\n                                        spacing={5}\n                                        direction=\"column\"\n                                        alignItems=\"center\"\n                                    >\n                                        <Grid\n                                            item\n                                            container\n                                            direction=\"row\"\n                                            justify=\"center\"\n                                            style={{ width: \"100%\" }}\n                                        >\n                                            <Tabs\n                                                value={this.state.tabPageNumber}\n                                                onChange={this.handleTabs}\n                                                variant=\"scrollable\"\n                                                scrollButtons=\"auto\"\n                                                indicatorColor=\"secondary\"\n                                                textColor=\"secondary\"\n                                                aria-label=\"icon label tabs example\"\n                                            >\n                                                {tabs.map((tab) => (\n                                                    <Tab\n                                                        color=\"inherit\"\n                                                        noWrap\n                                                        icon={tab.icon}\n                                                        label={tab.title}\n                                                        key={tab.title}\n                                                        variant=\"body2\"\n                                                        className={\n                                                            classes.toolbarLink\n                                                        }\n                                                    />\n                                                ))}\n                                            </Tabs>\n                                        </Grid>\n                                        <Grid style={{ width: \"100%\" }}>\n                                            {this.getTabPage(\n                                                this.state.tabPageNumber,\n                                                this.state.data\n                                            )}\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            )}\n                        </Box>\n                    </main>\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(ShopPage);\n","import React, { Component } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport BookmarksRoundedIcon from \"@material-ui/icons/BookmarksRounded\";\nimport PowerSettingsNewRoundedIcon from \"@material-ui/icons/PowerSettingsNewRounded\";\n\nimport Shops from \"./shops\";\nimport { Route, Switch } from \"react-router-dom\";\nimport MyBookings from \"./myBookings\";\nimport MyProfile from \"./profile\";\nimport Logout from \"./Logout\";\nimport ShopPage from \"./shopPage/shopPage\";\nimport { userDetails } from \"../../../services/userService\";\n\nconst drawerWidth = 240;\n\nconst useStyles = (theme) => ({\n    root: {\n        display: \"flex\",\n        width: \"100%\",\n    },\n    drawer: {\n        [theme.breakpoints.up(\"sm\")]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        // [theme.breakpoints.up('sm')]: {\n        //   width: `calc(100% - ${drawerWidth}px)`,\n        //   marginLeft: drawerWidth,\n        // },\n        background: \"#f98b88\",\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        width: \"100%\",\n        padding: theme.spacing(3),\n    },\n    largeAvatar: {\n        width: theme.spacing(15),\n        height: theme.spacing(15),\n        margin: \"auto\",\n    },\n});\n\nclass MainPage extends Component {\n    state = {\n        data: [\n            {\n                path: \"/customer/profile\",\n                label: \"Profile\",\n                icon: <AccountBoxIcon />,\n            },\n            {\n                path: \"/customer/dashboard\",\n                label: \"Dashboard\",\n                icon: <DashboardIcon />,\n            },\n            {\n                path: \"/customer/booking\",\n                label: \"Bookings\",\n                icon: <BookmarksRoundedIcon />,\n            },\n            {\n                path: \"/customer/logout\",\n                label: \"Logout\",\n                icon: <PowerSettingsNewRoundedIcon />,\n            },\n        ],\n    };\n\n    async componentDidMount() {\n        try {\n            const response = await userDetails();\n            const { firstName, lastName } = response.data.userCredentials;\n            localStorage.setItem(\"userName\", firstName + \" \" + lastName);\n            console.log(response);\n        } catch (ex) {\n            if (ex.response && ex.response.status == 403) alert(\"Your Token has expired. Please re Sign In.\");\n            console.log(ex.response)\n        }\n    }\n\n    handleClick = (path) => {\n        this.props.history.push(path);\n    };\n\n    render() {\n        const { window, classes, theme } = this.props;\n        const container =\n            window !== undefined ? () => window().document.body : undefined;\n\n        return (\n            <div className={classes.root}>\n                <CssBaseline />\n\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <Switch>\n                        <Route\n                            path=\"/customer/profile\"\n                            component={() => <MyProfile />}\n                        />\n                        <Route\n                            path=\"/customer/dashboard\"\n                            component={() => <Shops />}\n                        />\n                        <Route\n                            path=\"/customer/booking/\"\n                            component={MyBookings}\n                        />\n                        <Route path=\"/customer/logout/\" component={Logout} />\n                        <Route\n                            path=\"/customer/shop/:shopId?\"\n                            component={ShopPage}\n                        />\n                        <Route path=\"/customer\" component={() => <Shops />} />\n                        {/* <Route path=\"/\" component={MyProfile} /> */}\n                    </Switch>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(withStyles(useStyles, { withTheme: true })(MainPage));\n","//Only for App.js, Includes Appbar and Options,\n\nimport React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport { withRouter } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Slide from \"@material-ui/core/Slide\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Popover from \"@material-ui/core/Popover\";\nimport { Box } from \"@material-ui/core\";\nimport SignIn from \"./pages/signin\";\n\nclass CustomAppBarClass extends Component {\n    state = {\n        anchorEl: null,\n    };\n\n    handlePath = (path) => {\n        this.props.history.push(path);\n    };\n\n    handleSignIn = (event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleSignUp = () => {\n        this.props.history.push(\"/signup\");\n    };\n\n    HideOnScroll = (props) => {\n        const { children, window } = props;\n        const trigger = useScrollTrigger({\n            target: window ? window() : undefined,\n        });\n\n        return (\n            <Slide appear={false} direction=\"down\" in={!trigger}>\n                {children}\n            </Slide>\n        );\n    };\n\n    render() {\n        const { menuOption, auth } = this.props;\n        const { HideOnScroll } = this;\n        const open = Boolean(this.state.anchorEl);\n        const id = open ? \"simple-popover\" : undefined;\n        const homePage = !localStorage.getItem(\"userLogged\");\n        console.log(\"home \",homePage);\n        return (\n            <HideOnScroll {...this.props}>\n                {/* <AppBar color=\"transparent\"  style={{ flexGrow: 1,  }} > */}\n                <AppBar\n                    color={homePage ? \"transparent\" : \"\"}\n                    elevation={homePage ? 0 : 6}\n                    disableGutters={homePage ? \"true\" : \"false\"}\n                    style={{\n                        flexGrow: 1,\n                        background: homePage ? \"\" : \"#28da8b\",\n                        //background: homePage ? \"\" : \"#00ff80\",\n                    }}\n                    //style={{ flexGrow: 1, background: \"#00ff80\" }}\n                >\n                    <Toolbar>\n                        {homePage || (\n                            <img\n                                src=\"https://storage.googleapis.com/shopsafe-ju/logonew.png\"\n                                //src=\"https://drive.google.com/uc?export=view&id=18cWTWvu9cTgiZWWp_yDnwzvic3HDZPhz\"\n                                width=\"60\"\n                                height=\"50\"\n                            />\n                        )}\n                        <div style={{ flexGrow: 1 }} />\n                        {/* <Typography variant=\"h4\" noWrap /> */}\n                        {auth ? (\n                            <ProfileMenu\n                                menuOption={menuOption || []}\n                                handlePath={this.handlePath}\n                            />\n                        ) : (\n                            <React.Fragment>\n                                <Button\n                                    variant=\"contained\"\n                                    onClick={this.handleSignIn}\n                                    color=\"primary\"\n                                    style={{\n                                        margin: 3,\n                                    }}\n                                >\n                                    Sign In\n                                </Button>\n                                <Popover\n                                    id={id}\n                                    open={open}\n                                    anchorEl={this.state.anchorEl}\n                                    onClose={this.handleClose}\n                                    anchorOrigin={{\n                                        vertical: \"bottom\",\n                                        horizontal: \"center\",\n                                    }}\n                                    transformOrigin={{\n                                        vertical: \"top\",\n                                        horizontal: \"center\",\n                                    }}\n                                >\n                                    <Box m={2} p={2}>\n                                        <SignIn\n                                            handleAuth={this.props.handleAuth}\n                                            handleClose={this.handleClose}\n                                        />\n                                    </Box>\n                                </Popover>\n                                <Button\n                                    variant=\"contained\"\n                                    onClick={this.handleSignUp}\n                                    color=\"primary\"\n                                    style={{\n                                        margin: 3,\n                                    }}\n                                >\n                                    Sign Up\n                                </Button>\n                            </React.Fragment>\n                        )}\n                    </Toolbar>\n                </AppBar>\n            </HideOnScroll>\n        );\n    }\n}\n\n//export default withRouter(CustomAppBar);\n\nclass CustomFooter extends Component {\n    state = {};\n    render() {\n        return (\n            // <footer\n            //     style={{\n            //         backgroundColor: \"grey\",\n            //         position: \"relative\",\n            //         left: 0,\n            //         bottom: 0,\n            //         marginTop: \"auto\",\n            //         width: \"100%\",\n            //     }}\n            // >\n            //     This is footer\n            // </footer>\n            <div\n                style={{\n                    width: \"100%\",\n                    height: \"35x\",\n                    margin: 20,\n                    bottom: 0,\n                    marginBottom: 0,\n                    background: \"#28da8b\",\n                }}\n            >\n                <Typography variant=\"body1\" align=\"center\">Copyright © 2020 eQ.  All rights reserved</Typography>\n            </div>\n        );\n    }\n}\n\nclass ProfileMenu extends Component {\n    state = {\n        anchorEl: null,\n        menuOption: this.props.menuOption,\n    };\n\n    handleMenu = (event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handlePath = (path) => {\n        this.props.handlePath(path);\n        this.handleClose();\n    };\n\n    render() {\n        const { anchorEl, menuOption } = this.state;\n        const { handleClose, handleMenu } = this;\n        return (\n            <div>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                    onClick={handleMenu}\n                    color=\"inherit\"\n                >\n                    <AccountCircle style={{ fontSize: 45 }} />\n                </IconButton>\n                <Menu\n                    id=\"menu-appbar\"\n                    anchorEl={anchorEl}\n                    anchorOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"right\",\n                    }}\n                    keepMounted\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"right\",\n                    }}\n                    open={anchorEl ? true : false}\n                    onClose={handleClose}\n                >\n                    {menuOption.map((option, i) => (\n                        <MenuItem\n                            key={i}\n                            onClick={() => this.handlePath(option.path)}\n                        >\n                            {option.label}\n                        </MenuItem>\n                    ))}\n                </Menu>\n            </div>\n        );\n    }\n}\n\nexport const CustomAppBar = withRouter(CustomAppBarClass);\nexport const Footer = withRouter(CustomFooter);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        textAlign: \"center\",\n    },\n    hero: {\n        backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1)), url('https://storage.googleapis.com/shopsafe-ju/eQ-banner.png')`,\n        height: \"600px\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n        position: \"relative\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        color: \"#fff\",\n        fontSize: \"4rem\",\n        [theme.breakpoints.down(\"sm\")]: {\n            height: 300,\n            fontSize: \"3em\",\n        },\n    },\n    blogsContainer: {\n        paddingTop: theme.spacing(3),\n    },\n    promo: {\n        backgroundColor: \"#fff5ec\",\n        marginBottom: 20,\n    },\n    blogTitle: {\n        fontWeight: 800,\n        paddingBottom: theme.spacing(3),\n    },\n    card: {\n        maxWidth: \"100%\",\n        elevation: 0,\n    },\n    media: {\n        height: 350,\n        [theme.breakpoints.down(\"sm\")]: {\n            height: 100,\n        },\n    },\n    cardActions: {\n        display: \"flex\",\n        margin: \"0 10px\",\n        justifyContent: \"space-between\",\n    },\n    cardContent: {\n        alignItems: \"center\",\n    },\n    author: {\n        display: \"flex\",\n    },\n    paginationContainer: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n}));\n\nfunction Home() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Box className={classes.hero}>{/* <Box>Lala Boi</Box> */}</Box>\n            <Container maxWidth=\"xl\" className={classes.blogsContainer}>\n                <Box className={classes.promo}>\n                    <Typography variant=\"h4\" align=\"left\">\n                        Tired of Standing in Long Queue?\n                    </Typography>\n                    <Typography gutterbottom variant=\"h4\" align=\"right\">\n                        Afraid of getting infected?\n                    </Typography>\n                    <Typography variant=\"h4\" className={classes.blogTitle}>\n                        It's time to say Bye-Bye !!\n                    </Typography>\n                    <Typography variant=\"h5\" className={classes.blogTitle}>\n                        With eQ, have the oppurtunity to manage your position in\n                        an online Queue and save your time.\n                    </Typography>\n                </Box>\n                <Typography variant=\"h4\" className={classes.blogTitle}>\n                    Book your Slot in Four Easy steps:\n                </Typography>\n                <Grid container spacing={4} style={{ marginBottom: 20 }}>\n                    <Grid item xs={6} sm={3}>\n                        <Card className={classes.card}>\n                            <CardMedia\n                                className={classes.media}\n                                image=\"https://storage.googleapis.com/shopsafe-ju/selectLocation.png\"\n                                title=\"Contemplative Reptile\"\n                            />\n                            <CardContent className={classes.cardContent}>\n                                <Typography variant=\"h5\" component=\"h2\">\n                                    Set Location\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={6} sm={3}>\n                        <Card className={classes.card}>\n                            <CardMedia\n                                className={classes.media}\n                                image=\"https://storage.googleapis.com/shopsafe-ju/selectShop.png\"\n                                title=\"Contemplative Reptile\"\n                            />\n                            <CardContent>\n                                <Typography variant=\"h5\" component=\"h2\">\n                                    Select Shop\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={6} sm={3}>\n                        <Card className={classes.card}>\n                            <CardMedia\n                                className={classes.media}\n                                image=\"https://storage.googleapis.com/shopsafe-ju/selectSlot.png\"\n                                title=\"Contemplative Reptile\"\n                            />\n                            <CardContent>\n                                <Typography variant=\"h5\" component=\"h2\">\n                                    Choose Slot\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={6} sm={3}>\n                        <Card className={classes.card}>\n                            <CardMedia\n                                className={classes.media}\n                                image=\"https://storage.googleapis.com/shopsafe-ju/bookingDone.png\"\n                                title=\"Contemplative Reptile\"\n                            />\n                            <CardContent>\n                                <Typography variant=\"h5\" component=\"h2\">\n                                    <b>BOOK</b>\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n                <Grid\n                    container\n                    direction=\"row-reverse\"\n                    className={classes.promo}\n                    justify=\"space-between\"\n                >\n                    <Grid item xs={12} sm={6}>\n                        <img\n                            src=\"https://storage.googleapis.com/shopsafe-ju/new-normal.jpg\"\n                            style={{ width: \"100%\" }}\n                        />\n                    </Grid>\n                    <Grid\n                        item\n                        xs={12}\n                        sm={6}\n                        container\n                        direction=\"column\"\n                        justify=\"center\"\n                        spacing={5}\n                    >\n                        <Grid item>\n                            <Typography variant=\"h2\" component=\"h2\">\n                                Shopping cum Social Distancing\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"h6\" component=\"h6\">\n                                Our online-queueing algorithm is aimed at\n                                reducing overcrowding at shops and thus helps\n                                practise social distancing efficiently.\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <Grid\n                    container\n                    className={classes.promo}\n                    justify=\"space-between\"\n                >\n                    <Grid item xs={12} sm={6}>\n                        <img\n                            src=\"https://storage.googleapis.com/shopsafe-ju/manage-booking.jpg\"\n                            style={{ width: \"100%\" }}\n                        />\n                    </Grid>\n                    <Grid\n                        item\n                        xs={12}\n                        sm={6}\n                        container\n                        direction=\"column\"\n                        justify=\"center\"\n                        spacing={5}\n                    >\n                        <Grid item>\n                            <Typography variant=\"h2\" component=\"h2\">\n                                Manage your position in real-time\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"h6\" component=\"h6\">\n                                Our simple UI provides a seamless experience\n                                towards booking slots and managing them in\n                                real-time. It's just as if you are standing in a\n                                real queue.\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Container>\n        </div>\n    );\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { logout } from '../../../services/userService';\n\n\nclass Logout extends Component {\n    state = {}\n    async componentDidMount() {\n        try {\n            const response = await logout();\n            console.log(response);\n        } catch (ex) {\n            console.log(ex);\n        } finally {\n            localStorage.clear();\n            window.location = \"/\";\n        }\n    }\n    render() { \n        return ( null );\n    }\n}\n \nexport default withRouter(Logout);","import React, { Component } from \"react\";\nimport ApexCharts from \"react-apexcharts\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Box, Typography } from \"@material-ui/core\";\n\nconst useStyles = (theme) => ({\n    root: { margin: 5, height: \"50%\", width: \"95%\" },\n});\n\nclass ApexLineChart extends Component {\n    state = {\n        series: [\n            {\n                name: \"Customer Booked\",\n                data: [],\n            },\n            {\n                name: \"Turn Ups\",\n                data: [],\n            },\n        ],\n        options: {\n            chart: {\n                height: 350,\n                type: \"area\",\n            },\n            dataLabels: {\n                enabled: false,\n            },\n            stroke: {\n                curve: \"smooth\",\n            },\n            xaxis: {\n                type: \"string\",\n                categories: [],\n            },\n\n            // xaxis: {\n            //     type: \"datetime\",\n            //     categories: [],\n            // },\n            // tooltip: {\n            //     x: {\n            //         format: \"DD/MM/YYYY HH:mm\",\n            //     },\n            // },\n        },\n    };\n\n    getOptions = () => {\n        let options = { ...this.state.options };\n        const { data } = this.props;\n        let categories = [];\n        let d = new Date();\n\n        for (\n            let x = this.props.shopData.openingHour;\n            x <= this.props.shopData.closingHour;\n            x++\n        ) {\n            d.setHours(x);\n            d.setMinutes(0);\n            categories.push(\n                d.toLocaleTimeString(\"en-US\", {\n                    hour: \"numeric\",\n                    hour12: true,\n                })\n            );\n        }\n        options.xaxis.categories = categories;\n        return options;\n    };\n\n    getSeries = () => {\n        const { data } = this.props;\n\n        let bookedData = [];\n        let turnUpsData = [];\n        for (\n            let x = this.props.shopData.openingHour;\n            x <= this.props.shopData.closingHour;\n            x++\n        ) {\n            let count1 = 0,\n                count2 = 0;\n            for (const row of this.props.data) {\n                if (row.arrivalHour == x) count1++;\n                if (row.arrivalHour == x && row.status == 2) count2++;\n            }\n            bookedData.push(count1);\n            turnUpsData.push(count2);\n        }\n\n        let series = [...this.state.series];\n        let options = { ...this.state.options };\n        series[0].data = bookedData;\n        series[1].data = turnUpsData;\n        return series;\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Box\n                m={3}\n                p={1}\n                borderRadius={5}\n                boxShadow={5}\n                style={{ width: \"96%\" }}\n            >\n                <Typography variant=\"h4\" style={{ marginLeft: 5 }}>\n                    {this.props.shopData.shopName}\n                </Typography>\n                <ApexCharts\n                    className={classes.root}\n                    options={this.getOptions()}\n                    series={this.getSeries()}\n                    type=\"area\"\n                    height={370}\n                />\n            </Box>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(ApexLineChart);\n","import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport ApexCharts from \"react-apexcharts\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport { getShopDetailsAuthorized } from '../../../../services/userService';\n\n\n\nfunction timeString(h, m = 0) {\n    let d = new Date();\n    d.setHours(h);\n    d.setMinutes(m);\n    return d.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n    });\n}\n\nclass SimpleStatCard extends Component {\n    state = {\n        shopData: this.props.shopData,\n        CustomerServedToday: this.props.data.filter(c => c.status == 2).length,\n        UpcomingCustomer:this.props.data.filter(c => c.status == 1).length,\n    };\n\n    // componentDidMount() {\n    //     const CustomerServedToday = this.props.data.filter((c) => {\n    //         const d = new Date(c.createdAt);\n    //         const currentTime = new Date();\n    //         c.status == 2;\n    //     }).length;\n    // }\n\n    render() {\n        const { shopData } = this.state;\n        return (\n            <Box m={3} borderRadius={5} p={2} boxShadow={5}>\n                <Grid item container direction=\"row\" spacing={2}>\n                    <Grid item container direction=\"row\" xs={12} spacing={5}>\n                        <Grid item xs={8}>\n                            <Typography variant=\"h5\" color=\"textSecondary\">\n                                Customer Served Today\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"h5\">\n                                {this.state.CustomerServedToday}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid item container direction=\"row\" xs={12} spacing={5}>\n                        <Grid item xs={8}>\n                            <Typography variant=\"h5\" color=\"textSecondary\">\n                                Upcoming customer\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"h5\">\n                                {this.state.UpcomingCustomer}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid item container direction=\"row\" xs={12}>\n                        {/* <Grid item xs={12}>\n                            <Typography\n                                variant=\"h6\"\n                                color=\"textSecondary\"\n                                align=\"center\"\n                            >\n                                Working Hour\n                            </Typography>\n                        </Grid> */}\n                        <Grid item xs={6}>\n                            <Typography\n                                variant=\"h5\"\n                                align=\"center\"\n                                gutterBottom\n                                style={{\n                                    paddingLeft: 10,\n                                    margin: \"auto\",\n                                }}\n                            >\n                                <FiberManualRecordIcon\n                                    style={{\n                                        color: \"green\",\n                                        fontSize: 24,\n                                        marginRight: 5,\n                                    }}\n                                />\n                                {timeString(\n                                    shopData.openingHour,\n                                    shopData.openingMinute\n                                )}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography\n                                variant=\"h5\"\n                                align=\"center\"\n                                gutterBottom\n                                style={{\n                                    paddingLeft: 10,\n                                    margin: \"auto\",\n                                }}\n                            >\n                                <FiberManualRecordIcon\n                                    style={{\n                                        color: \"red\",\n                                        fontSize: 24,\n                                        marginLeft: 10,\n                                    }}\n                                />\n                                {timeString(\n                                    shopData.closingHour,\n                                    shopData.closingMinute\n                                )}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Box>\n        );\n    }\n}\n\nexport default (SimpleStatCard);\n\nexport class TodayChart extends Component {\n           state = {\n               series: [\n                   {\n                       name: \"Morning\",\n                       data: [\n                           this.props.data.filter((c) => c.arrivalHour < 12)\n                               .length,\n                       ],\n                   },\n                   {\n                       name: \"Afternoon\",\n                       data: [\n                           this.props.data.filter((c) => c.arrivalHour >= 12 && c.arrivalHour <18)\n                               .length,\n                       ],\n                   },\n                   {\n                       name: \"Evening\",\n                       data: [\n                           this.props.data.filter((c) => c.arrivalHour >= 18)\n                               .length,\n                       ],\n                   },\n               ],\n               options: {\n                   chart: {\n                       type: \"bar\",\n                       height: 180,\n                   },\n                   plotOptions: {\n                       bar: {\n                           horizontal: false,\n                           columnWidth: \"55%\",\n                           //endingShape: \"rounded\",\n                       },\n                   },\n                   dataLabels: {\n                       enabled: false,\n                   },\n                   stroke: {\n                       show: true,\n                       width: 2,\n                       colors: [\"transparent\"],\n                   },\n                   xaxis: {\n                       categories: [\"Today\"],\n                   },\n                   yaxis: {\n                       title: {\n                           text: \"Number of Customer\",\n                       },\n                   },\n                   fill: {\n                       opacity: 1,\n                   },\n               },\n           };\n           render() {\n               return (\n                   <Box m={3} borderRadius={5} p={5} boxShadow={5}>\n                       <Grid container direction=\"row\" spacing={2}>\n                           <Grid item xs={12}>\n                               <Typography variant=\"h5\" color=\"textSecondary\">\n                                   Current Statistics\n                               </Typography>\n                           </Grid>\n                           <Grid\n                               item\n                               container\n                               direction=\"row\"\n                               xs={12}\n                               spacing={3}\n                               justify=\"center\"\n                           >\n                               <Grid item xs={4}>\n                                   <Typography variant=\"subtitle1\">\n                                       Morning{\" \"}\n                                       {\n                                           this.props.data.filter(\n                                               (c) => c.arrivalHour < 12\n                                           ).length\n                                       }\n                                   </Typography>\n                               </Grid>\n                               <Grid item xs={4}>\n                                   <Typography variant=\"subtitle1\">\n                                       Afternoon{\" \"}\n                                       {\n                                           this.props.data.filter(\n                                               (c) =>\n                                                   c.arrivalHour >= 12 &&\n                                                   c.arrivalHour < 18\n                                           ).length\n                                       }\n                                   </Typography>\n                               </Grid>\n                               <Grid item xs={4}>\n                                   <Typography variant=\"subtitle1\">\n                                       Evening{\" \"}\n                                       {\n                                           this.props.data.filter(\n                                               (c) => c.arrivalHour >= 18\n                                           ).length\n                                       }\n                                   </Typography>\n                               </Grid>\n                           </Grid>\n                           <Grid item xs={12}>\n                               <ApexCharts\n                                   options={this.state.options}\n                                   series={this.state.series}\n                                   type=\"bar\"\n                                   height={200}\n                               />\n                           </Grid>\n                       </Grid>\n                   </Box>\n               );\n           }\n       }\n","import React, { Component } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Box,Grid, Typography } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { getShopBookings } from \"../../../../services/dataServices\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\n\n\n\nfunction timeString(h, m = 0) {\n    let d = new Date();\n    d.setHours(h);\n    d.setMinutes(m);\n    return d.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n    });\n}\n\nclass UpcomingBookingsTable extends Component {\n    state = {\n        isLoading: false,\n        errorMessage: \"\",\n        bookingsData: this.props.data,\n    };\n\n    \n\n    filteredList = () => {\n        const d = new Date();\n        return this.state.bookingsData.filter(c => {\n            let ct = new Date(c.createdAt);\n            ct.setHours(c.arrivalHour); ct.setMinutes(c.arrivalMinute);\n            return (d.getTime() < ct.getTime() && c.status==1);\n        });\n    };\n\n    render() {\n        // const { data } = this.state;\n        const data = this.filteredList();\n        return (\n            <Box m={3} borderRadius={5} boxShadow={5}>\n                {/*  */}\n                <Grid container direction=\"row\">\n                    <Typography\n                        variant=\"h5\"\n                        color=\"textSecondary\"\n                        style={{ margin: 10 }}\n                    >\n                        Upcoming Bookings\n                    </Typography>\n                    <TableContainer component={Paper}>\n                        <Table\n                            style={{\n                                width: \"100%\",\n                                margin: \"auto\",\n                            }}\n                            aria-label=\"simple table\"\n                        >\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell></TableCell>\n                                    <TableCell\n                                        align=\"center\"\n                                        style={{ fontSize: 20 }}\n                                    >\n                                        Name\n                                    </TableCell>\n                                    <TableCell\n                                        align=\"center\"\n                                        style={{ fontSize: 20 }}\n                                    >\n                                        Items\n                                    </TableCell>\n                                    <TableCell\n                                        align=\"center\"\n                                        style={{ fontSize: 20 }}\n                                    >\n                                        Slot\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {data.map((row, i) => (\n                                    <TableRow key={i}>\n                                        <TableCell\n                                            component=\"th\"\n                                            scope=\"row\"\n                                            align=\"center\"\n                                        >\n                                            {i + 1}\n                                            {/* <Avatar src={row.imgUrl} /> */}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 17 }}\n                                        >\n                                            {row.customerName}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 17 }}\n                                        >\n                                            {row.purchaseItems}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 17 }}\n                                        >{`${timeString(\n                                            row.arrivalHour,\n                                            row.arrivalMinute\n                                        )} - ${timeString(\n                                            row.deliveryHour,\n                                            row.deliveryMinute\n                                        )}`}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Grid>\n            </Box>\n        );\n    }\n}\n\nexport default UpcomingBookingsTable;\n","import React, { Component } from \"react\";\nimport ApexLineChart from \"./components/graph\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SimpleStatCard, { TodayChart } from \"./components/simpleStat\";\nimport UpcomingBookingsTable from \"./components/UpcomingBookingsTable\";\nimport { getShopBookings } from \"../../../services/dataServices\";\nimport { getShopDetailsAuthorized } from \"../../../services/userService\";\n\nclass ShopDashboard extends Component {\n    state = {\n        isLoading: false,\n        errorMessage: \"\",\n        bookingsData: [],\n        shopData: {},\n    };\n\n    async componentDidMount() {\n        this.setState({ isLoading: true });\n        try {\n            const response1 = await getShopBookings();\n            console.log(response1.data);\n            const data = response1.data.filter((c) => {\n                const creationTime = new Date(c.createdAt);\n                const d = new Date();\n                d.setHours(0);\n                d.setMinutes(0);\n                d.setSeconds(0);\n                return creationTime.getTime() > d.getTime();\n            });\n            this.setState({ bookingsData:data , errorMessage: \"\" });\n            const response2 = await getShopDetailsAuthorized();\n            this.setState({ shopData: response2.data.userCredentials });\n        } catch (ex) {\n            console.log(ex.response);\n            this.setState({\n                errorMessage:\n                    \"Firebase ID token has expired. Get a fresh ID token by RE SIGN IN.\",\n            });\n        }\n        this.setState({ isLoading: false });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Grid container xl spacing={0} style={{ marginTop: 80 }}>\n                    {this.state.isLoading ? (\n                        <CircularProgress\n                            style={{ marginLeft: window.innerWidth * 0.48 }}\n                        />\n                    ) : this.state.errorMessage ? (\n                        <h2 style={{ paddingTop: 60 }}>\n                            {this.state.errorMessage}\n                        </h2>\n                    ) : (\n                        <React.Fragment>\n                            <Grid item sm={4} md={4} lg={4} xl={4}>\n                                <TodayChart data={this.state.bookingsData} />\n                            </Grid>\n                            <Grid item sm={8} md={8} lg={8} xl={8}>\n                                <ApexLineChart shopData={this.state.shopData} data={this.state.bookingsData} />\n                            </Grid>\n                            <Grid item sm={4} md={4} lg={4} xl={4}>\n                                <SimpleStatCard\n                                    data={this.state.bookingsData}\n                                    shopData={this.state.shopData}\n                                />\n                            </Grid>\n                            <Grid item sm={8} md={8} lg={8} xl={8}>\n                                <UpcomingBookingsTable\n                                    data={this.state.bookingsData}\n                                />\n                            </Grid>\n                        </React.Fragment>\n                    )}\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ShopDashboard;\n","import React, { Component } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Box, Typography, Grid, TextField, Button } from \"@material-ui/core\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { getShopBookings } from \"../../../services/dataServices\";\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { validateSlotByOtp } from \"../../../services/userService\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nfunction timeString(h, m = 0) {\n    let d = new Date();\n    d.setHours(h);\n    d.setMinutes(m);\n    return d.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n    });\n}\n\nclass ViewBookings extends Component {\n    state = {\n        isLoading: false,\n        errorMessage: \"\",\n        bookingsData: [],\n        filter: { status: \"All\", period: [\"Morning\", \"Afternoon\", \"Evening\"], todayOnly:true },\n    };\n\n    async componentDidMount() {\n        this.setState({ isLoading: true });\n        try {\n            const response = await getShopBookings();\n            console.log(response.data);\n            this.setState({ bookingsData: response.data, errorMessage: \"\" });\n        } catch (ex) {\n            console.log(ex.response);\n            this.setState({\n                errorMessage:\n                    \"Firebase ID token has expired. Get a fresh ID token by RE SIGN IN.\",\n            });\n        }\n        this.setState({ isLoading: false });\n    }\n\n    updateFilter = (filter) => {\n        this.setState({ filter });\n        this.forceUpdate();\n    };\n\n    updateStatus = (data) => {\n        //data.status = 2;\n        let bookingsData = [...this.state.bookingsData];\n        const index = bookingsData.indexOf(data);\n        console.log(data, bookingsData, index);\n        bookingsData[index].status = 2;\n        this.setState({ bookingsData });\n    };\n\n    filterData = () => {\n        const { status, period,todayOnly } = this.state.filter;\n        let data = [...this.state.bookingsData];\n        console.log(period);\n        //filter by period\n        if (period.indexOf(\"Morning\") == -1) {\n            data = data.filter((c) => c.arrivalHour >= 12);\n        }\n        if (period.indexOf(\"Afternoon\") == -1) {\n            data = data.filter(\n                (c) => c.arrivalHour >= 18 || c.arrivalHour < 12\n            );\n        }\n        if (period.indexOf(\"Evening\") == -1) {\n            data = data.filter((c) => c.arrivalHour < 18);\n        }\n\n        if (todayOnly)\n            data = data.filter(c => {\n                const creationTime = new Date(c.createdAt);\n                const d = new Date(); d.setHours(0); d.setMinutes(0); d.setSeconds(0);\n                return creationTime.getTime() > d.getTime();\n            })\n\n        //filter according to status\n        if (status.localeCompare(\"All\") == 0) return data;\n        else if (status.localeCompare(\"Pending\") == 0)\n            return data.filter((c) => c.status == 1);\n        else if (status.localeCompare(\"Complete\") == 0)\n            return data.filter((c) => c.status == 2);\n        else if (status.localeCompare(\"Expired\") == 0)\n            return data.filter((c) => c.status == 0);\n    };\n\n    // arrivalHour: 3;\n    // arrivalMinute: 0;\n    // arrivalTimeIST: \"3 AM\";\n    // bookingId: \"kvalOpAcU4mj8ENy3Ovc\";\n    // createdAt: \"2020-07-28T18:47:04.441Z\";\n    // customerId: \"iS3rFzmTr6MPbySvMjaiBlR8MDO2\";\n    // deliveryHour: 3;\n    // deliveryMinute: 30;\n    // deliveryTimeIST: \"3:30 AM\";\n    // duration: 30;\n    // purchaseItems: \"tiktok,katbery,fsafas,Dettol\";\n    // shopId: \"25QLTdo85CRarWC0b3Rc4YG5Ozu2\";\n    // slotGroupBegins: 3;\n    // slotGroupEnds: 4;\n\n    render() {\n        const data = this.filterData();\n        return (\n            <Container maxWidth=\"xl\" style={{ marginTop: 90 }}>\n                {this.state.isLoading ? (\n                    <CircularProgress\n                        style={{ marginLeft: window.innerWidth * 0.48 }}\n                    />\n                ) : this.state.errorMessage ? (\n                    <h2 style={{ paddingTop: 60 }}>\n                        {this.state.errorMessage}\n                    </h2>\n                ) : (\n                    <React.Fragment>\n                        <Grid container direction=\"row\">\n                            <Grid\n                                item\n                                container\n                                direction=\"row\"\n                                spacing={2}\n                                xs={6}\n                            >\n                                <Grid item>\n                                    <Typography\n                                        variant=\"h5\"\n                                        color=\"textSecondary\"\n                                    >\n                                        All Bookings\n                                    </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Chip\n                                        color=\"primary\"\n                                        label={\n                                            \"Total: \" +\n                                            data.length\n                                        }\n                                        style={{\n                                            fontSize: 20,\n                                        }}\n                                    ></Chip>\n                                </Grid>\n                                <Grid item>\n                                    <Chip\n                                        color=\"secondary\"\n                                        label={\n                                            \"Pending: \" +\n                                            data.filter(\n                                                (c) => c.status == 1\n                                            ).length\n                                        }\n                                        style={{\n                                            color: \"black\",\n                                            backgroundColor: \"#ffbf00\",\n                                            fontSize: 20,\n                                        }}\n                                    ></Chip>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Filter setFilter={this.updateFilter} />\n                            </Grid>\n                        </Grid>\n                        <br />\n                        <br />\n                        <TableContainer component={Paper}>\n                            <Table\n                                style={{ width: \"100%\", margin: \"auto\" }}\n                                aria-label=\"simple table\"\n                            >\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell\n                                            size=\"small\"\n                                            align=\"right\"\n                                        ></TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 20 }}\n                                        >\n                                            <b>Name</b>\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 20 }}\n                                        >\n                                            <b>Items</b>\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 20 }}\n                                        >\n                                            <b>Slot</b>\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 20 }}\n                                        >\n                                            <b>Duration</b>\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 20 }}\n                                        >\n                                            <b>Status</b>\n                                        </TableCell>\n                                        <TableCell />\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {data.map((row, i) => (\n                                        <RowBody\n                                            key={i}\n                                            data={row}\n                                            index={i}\n                                            updateStatus={this.updateStatus}\n                                        />\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </React.Fragment>\n                )}\n            </Container>\n        );\n    }\n}\n\nexport default ViewBookings;\n\nclass RowBody extends Component {\n    state = {\n        data: this.props.data,\n    };\n\n    getChip = (status) => {\n        if (status == 1)\n            return (\n                <Chip\n                    style={{\n                        backgroundColor: \"#ffbf00\",\n                    }}\n                    icon={<ErrorOutlineIcon />}\n                    label=\"Pending\"\n                />\n            );\n        else if (status == 0)\n            return <Chip icon={<CancelOutlinedIcon />} label=\"Expired\" />;\n        else if (status == 2)\n            return (\n                <Chip\n                    style={{\n                        backgroundColor: \"#00f600\",\n                    }}\n                    icon={<CheckCircleOutlineOutlinedIcon />}\n                    label=\"Complete\"\n                />\n            );\n    };\n\n    handleOtp = async (otp) => {\n        try {\n            const response = await validateSlotByOtp(\n                this.props.data.bookingId,\n                otp\n            );\n            if (response.status == 200) {\n                this.props.updateStatus(this.props.data);\n            }\n            console.log(response);\n        } catch (ex) {\n            console.log(ex);\n            alert(\"Something went wrong\");\n        }\n        console.log(otp);\n    };\n\n    render() {\n        const { data: row, index } = this.props;\n        return (\n            <TableRow>\n                <TableCell align=\"right\" size=\"small\">\n                    {index + 1}\n                </TableCell>\n                <TableCell align=\"center\" style={{ fontSize: 17 }}>\n                    {row.customerName || \"DemoName Zunaid\"}\n                </TableCell>\n                <TableCell align=\"center\" style={{ fontSize: 17 }}>\n                    {row.purchaseItems}\n                </TableCell>\n                <TableCell\n                    align=\"center\"\n                    style={{ fontSize: 17 }}\n                >{`${row.arrivalTimeIST} ⟶ ${row.deliveryTimeIST}`}</TableCell>\n                <TableCell align=\"center\" style={{ fontSize: 17 }}>\n                    {row.duration}\n                </TableCell>\n                <TableCell align=\"center\" style={{ fontSize: 17 }}>\n                    {this.getChip(row.status)}\n                </TableCell>\n                <TableCell align=\"center\" style={{ fontSize: 17 }}>\n                    {row.status == 1 ? (\n                        <OTP submitOtp={this.handleOtp} />\n                    ) : null}\n                </TableCell>\n            </TableRow>\n        );\n    }\n}\n\nclass Filter extends Component {\n    state = {\n        period: [\"Morning\", \"Afternoon\", \"Evening\"],\n        status: \"All\",\n        todayOnly: true,\n    };\n\n    handleChange = (event) => {\n        let data = { ...this.state };\n        this.setState({ [event.target.name]: event.target.value });\n        data[event.target.name] = event.target.value;\n        this.props.setFilter(data);\n    };\n\n    handleCheck = (event) => {\n        let data = { ...this.state };\n        this.setState({ [event.target.name]: event.target.checked });\n        data[event.target.name] = event.target.checked;\n        this.props.setFilter(data);\n    };\n\n    render() {\n        const { period, status } = this.state;\n        const MenuProps = {\n            PaperProps: {\n                style: {\n                    maxHeight: 224,\n                    width: 160,\n                },\n            },\n        };\n\n        return (\n            <Paper elevation={0}>\n                <Grid container direction=\"row\" spacing={2} justify=\"flex-end\">\n                    <Grid item>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.todayOnly}\n                                    onChange={this.handleCheck}\n                                    name=\"todayOnly\"\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Only Today\"\n                        />\n                    </Grid>\n                    <Grid item>\n                        <FormControl style={{ minWidth: 150, maxWidth: 300 }}>\n                            <InputLabel id=\"demo-mutiple-checkbox-label\">\n                                Period\n                            </InputLabel>\n                            <Select\n                                labelId=\"demo-mutiple-checkbox-label\"\n                                id=\"demo-mutiple-checkbox\"\n                                multiple\n                                name=\"period\"\n                                value={period}\n                                onChange={this.handleChange}\n                                input={<Input />}\n                                renderValue={(selected) => selected.join(\", \")}\n                                MenuProps={MenuProps}\n                            >\n                                {[\"Morning\", \"Afternoon\", \"Evening\"].map(\n                                    (name) => (\n                                        <MenuItem key={name} value={name}>\n                                            <Checkbox\n                                                checked={\n                                                    period.indexOf(name) > -1\n                                                }\n                                            />\n                                            <ListItemText primary={name} />\n                                        </MenuItem>\n                                    )\n                                )}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item>\n                        <FormControl style={{ minWidth: 150, maxWidth: 300 }}>\n                            <InputLabel id=\"demo-simple-select-label\">\n                                Status\n                            </InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={status}\n                                name=\"status\"\n                                onChange={this.handleChange}\n                            >\n                                {[\"All\", \"Complete\", \"Pending\", \"Expired\"].map(\n                                    (name) => (\n                                        <MenuItem key={name} value={name}>\n                                            {name}\n                                        </MenuItem>\n                                    )\n                                )}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n            </Paper>\n        );\n    }\n}\n\nclass OTP extends Component {\n    state = {\n        showInputField: false,\n        otp: \"\",\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        this.setState({ [input.name]: input.value });\n    };\n\n    handleClick = () => {\n        if (this.state.showInputField) {\n            if (this.state.otp) this.props.submitOtp(parseInt(this.state.otp));\n        } else {\n            this.setState({ showInputField: true });\n        }\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.state.showInputField ? (\n                    <TextField\n                        name=\"otp\"\n                        size=\"small\"\n                        variant=\"outlined\"\n                        onChange={this.handleChange}\n                        label=\"OTP\"\n                        style={{ margin: 5 }}\n                    />\n                ) : null}\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={this.handleClick}\n                >\n                    {this.state.otp ? \"Submit\" : \"approve\"}\n                </Button>\n            </React.Fragment>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport {\n    getShopDetailsAuthorized,\n    updateShopDetails,\n    uploadShopPhoto,\n} from \"../../../services/userService\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport { Box } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Input from \"@material-ui/core/Input\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\n\nfunction timeString(h, m = 0) {\n    let d = new Date();\n    d.setHours(h);\n    d.setMinutes(m);\n    return d.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n    });\n}\nconst useStyles = (theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        width: \"90%\",\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginTop: 10,\n        //backgroundColor: \"#d96477\",\n    },\n    chips: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    chip: {\n        margin: 2,\n    },\n});\n\nclass ShopProfile extends Component {\n    state = {\n        isLoading: true,\n        errorMessage: \"\",\n        shopData: {},\n        data: {},\n        item: \"\",\n        label: (\n            <label\n                htmlFor=\"uploadFile\"\n                style={{\n                    cursor: \"pointer\",\n                }}\n            ></label>\n        ),\n    };\n\n    async componentDidMount() {\n        this.setState({ isLoading: true });\n        try {\n            const response = await getShopDetailsAuthorized();\n            console.log(response.data);\n            const { userCredentials } = response.data;\n            let data = {\n                payment_modes: userCredentials.payment_modes,\n                closingHour: userCredentials.closingHour,\n                closingMinute: userCredentials.closingMinute,\n                openingHour: userCredentials.openingHour,\n                openingMinute: userCredentials.openingMinute,\n                maxConcurrent: userCredentials.maxConcurrent,\n                tags: userCredentials.tags,\n                phoneNumber: userCredentials.phoneNumber,\n            };\n            this.setState({\n                shopData: response.data.userCredentials,\n                errorMessage: \"\",\n                data,\n            });\n        } catch (ex) {\n            console.log(ex.response);\n            this.setState({\n                errorMessage:\n                    \"Firebase ID token has expired. Get a fresh ID token by RE SIGN IN.\",\n            });\n        }\n        this.setState({ isLoading: false });\n    }\n\n    handleNumberChange = ({ currentTarget: input }) => {\n        let data = { ...this.state.data };\n        data[input.name] = parseInt(input.value);\n        this.setState({ data });\n    };\n\n    handleSelect = ({ target: { name, value } }) => {\n        let data = { ...this.state.data };\n        data[name] = value;\n        this.setState({ data });\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        this.setState({ [input.name]: input.value });\n    };\n\n    handleAddItem = () => {\n        const data = { ...this.state.data };\n        if (this.state.item) data.tags.push(this.state.item);\n        this.setState({ data, item: \"\" });\n    };\n\n    handleDelete = (item) => {\n        const data = { ...this.state.data };\n        const index = data.tags.indexOf(item);\n        data.tags.splice(index, 1);\n        this.setState({ data });\n    };\n\n    handleSubmit = async () => {\n        console.log(\"Data\", this.state.data);\n        try {\n            const response = await updateShopDetails(this.state.data);\n            console.log(response);\n            alert(response.data.message);\n        } catch (ex) {\n            console.log(ex.response);\n        }\n    };\n\n    handleClickFile = () => {\n        document.getElementById(\"uploadFile\").click();\n        console.log(\"button click\");\n    };\n\n    updateImageFile = async (event) => {\n        console.log(\"input change triggered\");\n        const file = event.target.files[0];\n        const formData = new FormData();\n        formData.append(\"Image\", file);\n        const shopData2 = { ...this.state.shopData };\n\n        try {\n            const url = URL.createObjectURL(file);\n            const shopData = { ...this.state.shopData };\n            shopData.imgURL = url;\n            this.setState({ shopData });\n            this.forceUpdate();\n            const response = await uploadShopPhoto(formData);\n            console.log(response);\n            alert(response.data.message);\n        } catch (ex) {\n            console.log(ex.response);\n            this.setState({ shopData:shopData2 });\n        }\n    };\n\n    //     address: \"Sealdah Railway Station No 1 & 2, Sealdah, Raja Bazar, Calcutta, West Bengal, India\"\n    // bookingTimeUnit: 24\n    // closingHour: 23\n    // closingMinute: 59\n    // createdAt: \"2020-07-26T20:53:17.534Z\"\n    // discount: 11\n    // email: \"zunaidubeh@gmail.com\"\n    // maxConcurrent: 60\n    // openingHour: 2\n    // openingMinute: 0\n    // ownerName: \"Andrew Mizerati\"\n    // payment_modes: (4) [\"Cards\", \"Cash\", \"Gpay\", \"UPI\"]\n    // phoneNumber: 9123574185\n    // shopName: \"My Own Shit Electronics\"\n    // shopRating: (2) [\"4.0\", 1]\n    // tags: (5) [\"Electronics\", \"Oil & Fat\", \"Grains and Bread\", \"Grocery\", \"Dairy & Eggs\"]\n    //     userId: \"25QLTdo85CRarWC0b3Rc4YG5Ozu2\"\n\n    render() {\n        const { shopData: data, data: info, item } = this.state;\n        const imageUrl =\n            \"https://img.etimg.com/thumb/width-640,height-480,imgsize-789754,resizemode-1,msid-73320353/small-biz/sme-sector/the-kirana-is-a-technology-shop-too/kirana-bccl.jpg\";\n        const { classes, themes } = this.props;\n        return (\n            <React.Fragment>\n                <Container maxWidth=\"xl\" style={{ marginTop: 80 }}>\n                    {this.state.isLoading ? (\n                        <CircularProgress\n                            style={{ marginLeft: window.innerWidth * 0.48 }}\n                        />\n                    ) : this.state.errorMessage ? (\n                        <h2 style={{ paddingTop: 60 }}>\n                            {this.state.errorMessage}\n                        </h2>\n                    ) : (\n                        <Grid container direction=\"row\" spacing={0}>\n                            <Grid\n                                item\n                                container\n                                sm={4}\n                                md={4}\n                                lg={4}\n                                spacing={1}\n                                direction=\"column\"\n                                alignItems=\"center\"\n                            >\n                                <Grid item style={{ width: \"100%\" }}>\n                                    <Box\n                                        borderRadius={16}\n                                        boxShadow={3}\n                                        style={{\n                                            backgroundImage: `url(${\n                                                data.imgURL || imageUrl\n                                            })`,\n                                            height: 450,\n                                            backgroundSize: \"cover\",\n                                            width: \"100%\",\n                                        }}\n                                    >\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justify=\"flex-end\"\n                                            alignItems=\"flex-end\"\n                                            style={{ height: \"100%\" }}\n                                        >\n                                            <Grid xs={12} item>\n                                                <Button\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    style={{ width: \"100%\" }}\n                                                    onClick={\n                                                        this.handleClickFile\n                                                    }\n                                                >\n                                                    upload\n                                                </Button>\n\n                                                <input\n                                                    type=\"file\"\n                                                    id=\"uploadFile\"\n                                                    multiple=\"multiple\"\n                                                    onChange={\n                                                        this.updateImageFile\n                                                    }\n                                                    style={{ display: \"none\" }}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                    </Box>\n                                </Grid>\n                                <Grid container item direction=\"row\">\n                                    <Grid\n                                        item\n                                        container\n                                        direction=\"column\"\n                                        xs={12}\n                                        justify=\"flex-start\"\n                                        alignItems=\"flex-start\"\n                                    >\n                                        <Grid item>\n                                            <Typography\n                                                variant=\"h4\"\n                                                style={{\n                                                    marginBottom: 10,\n                                                }}\n                                            >\n                                                <b>{data.shopName}</b>\n                                            </Typography>\n                                            <Typography variant=\"body1\">\n                                                <FiberManualRecordIcon\n                                                    style={{\n                                                        color: \"green\",\n                                                        fontSize: 13,\n                                                        marginRight: 5,\n                                                    }}\n                                                />\n                                                {timeString(\n                                                    data.openingHour,\n                                                    data.openingMinute\n                                                )}\n                                                <FiberManualRecordIcon\n                                                    style={{\n                                                        color: \"red\",\n                                                        fontSize: 13,\n                                                    }}\n                                                />\n                                                {timeString(\n                                                    data.closingHour,\n                                                    data.closingMinute\n                                                )}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        container\n                                        xs={12}\n                                        justify=\"flex-start\"\n                                        alignItems=\"flex-start\"\n                                        direction=\"column\"\n                                    >\n                                        <Grid\n                                            item\n                                            container\n                                            direction=\"row\"\n                                            justify=\"flex-start\"\n                                            style={{ marginBottom: 10 }}\n                                        >\n                                            <Rating\n                                                name=\"ratings\"\n                                                defaultValue={\n                                                    data.shopRating[0]\n                                                }\n                                                precision={0.1}\n                                                readOnly\n                                                style={{\n                                                    fontSize: 40,\n                                                    color: \"red\",\n                                                }}\n                                            />\n                                            <Typography\n                                                variant=\"h5\"\n                                                style={{\n                                                    marginTop: 5,\n                                                    marginLeft: 5,\n                                                }}\n                                            >\n                                                <b>{data.shopRating[0]}</b>\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid\n                                    item\n                                    container\n                                    spacing={2}\n                                    alignItems=\"center\"\n                                    justify=\"flex-start\"\n                                    direction=\"column\"\n                                >\n                                    <Grid item style={{ width: \"100%\" }}>\n                                        <Box\n                                            borderRadius={5}\n                                            boxShadow={3}\n                                            padding={2}\n                                            style={{ backgroundColor: \"white\" }}\n                                        >\n                                            <Typography\n                                                variant=\"body1\"\n                                                style={{\n                                                    fontSize: 18,\n                                                    borderRadius: 5,\n                                                }}\n                                            >\n                                                <b>{data.ownerName}</b>\n                                                <br />\n                                                {data.address}\n                                                <br />\n                                                {/* Contact: {phoneNumber} */}\n                                            </Typography>\n                                        </Box>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid\n                                item\n                                container\n                                sm={8}\n                                md={8}\n                                lg={8}\n                                style={{ width: \"100%\" }}\n                                spacing={2}\n                                direction=\"column\"\n                                alignItems=\"center\"\n                            >\n                                <form style={{ width: \"95%\", marginTop: 20 }}>\n                                    <Box\n                                        borderRadius=\"borderRadius\"\n                                        boxShadow={5}\n                                        m={1}\n                                        p={2}\n                                        style={{ width: \"95%\" }}\n                                    >\n                                        <Typography\n                                            variant=\"h5\"\n                                            display=\"block\"\n                                            align=\"center\"\n                                            style={{ margin: 5 }}\n                                        >\n                                            Edit Info\n                                        </Typography>\n                                        <Grid item container spacing={2}>\n                                            <Grid item xs={12}>\n                                                <Typography\n                                                    variant=\"caption\"\n                                                    display=\"block\"\n                                                >\n                                                    Opening Time And Closing\n                                                    Time(Please use 24Hr format)\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={6} sm={3}>\n                                                <TextField\n                                                    name=\"openingHour\"\n                                                    value={info.openingHour}\n                                                    variant=\"filled\"\n                                                    type=\"number\"\n                                                    InputProps={{\n                                                        inputProps: {\n                                                            max: 24,\n                                                            min: 0,\n                                                        },\n                                                    }}\n                                                    fullWidth\n                                                    id=\"openingHour\"\n                                                    label=\"Opening Hour\"\n                                                    onChange={\n                                                        this.handleNumberChange\n                                                    }\n                                                />\n                                            </Grid>\n                                            <Grid item xs={6} sm={3}>\n                                                <TextField\n                                                    name=\"openingMinute\"\n                                                    value={info.openingMinute}\n                                                    variant=\"filled\"\n                                                    type=\"number\"\n                                                    InputProps={{\n                                                        inputProps: {\n                                                            max: 60,\n                                                            min: 0,\n                                                        },\n                                                    }}\n                                                    fullWidth\n                                                    id=\"openingMinute\"\n                                                    label=\"Opening Minute\"\n                                                    onChange={\n                                                        this.handleNumberChange\n                                                    }\n                                                />\n                                            </Grid>\n                                            <Grid item xs={6} sm={3}>\n                                                <TextField\n                                                    name=\"closingHour\"\n                                                    value={info.closingHour}\n                                                    variant=\"filled\"\n                                                    type=\"number\"\n                                                    InputProps={{\n                                                        inputProps: {\n                                                            max: 24,\n                                                            min: 0,\n                                                        },\n                                                    }}\n                                                    fullWidth\n                                                    id=\"closingHour\"\n                                                    label=\"Closing Hour\"\n                                                    onChange={\n                                                        this.handleNumberChange\n                                                    }\n                                                />\n                                            </Grid>\n                                            <Grid item xs={6} sm={3}>\n                                                <TextField\n                                                    name=\"closingMinute\"\n                                                    value={info.closingMinute}\n                                                    variant=\"filled\"\n                                                    type=\"number\"\n                                                    InputProps={{\n                                                        inputProps: {\n                                                            max: 60,\n                                                            min: 0,\n                                                        },\n                                                    }}\n                                                    fullWidth\n                                                    id=\"closingMinute\"\n                                                    label=\"Cloosing Minute\"\n                                                    onChange={\n                                                        this.handleNumberChange\n                                                    }\n                                                />\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <Typography\n                                                    variant=\"caption\"\n                                                    display=\"block\"\n                                                >\n                                                    Available Transaction\n                                                    Options\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <MultipleSelect\n                                                    selectedItems={\n                                                        info.payment_modes\n                                                    }\n                                                    handleChange={\n                                                        this.handleSelect\n                                                    }\n                                                    classes={this.props.classes}\n                                                    name=\"payment_modes\"\n                                                    label=\"Accepted Payment Modes\"\n                                                    theme={this.props.theme}\n                                                    items={[\n                                                        \"Cards\",\n                                                        \"PayTm\",\n                                                        \"PayPal\",\n                                                        \"Credit Card\",\n                                                        \"ATM Card\",\n                                                        \"Cash\",\n                                                        \"Gpay\",\n                                                        \"Digital Wallets\",\n                                                        \"UPI\",\n                                                        \"Other Methods\",\n                                                    ]}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <Typography\n                                                    variant=\"caption\"\n                                                    display=\"block\"\n                                                >\n                                                    Available Items (Tags)\n                                                </Typography>\n                                                <Grid item container xs={12}>\n                                                    <Grid item xs={12} md={8}>\n                                                        <TextField\n                                                            id=\"standard-basic\"\n                                                            name=\"item\"\n                                                            value={item}\n                                                            onChange={\n                                                                this\n                                                                    .handleChange\n                                                            }\n                                                            label=\"Item\"\n                                                            className={\n                                                                classes.formControl\n                                                            }\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} md={4}>\n                                                        <Button\n                                                            variant=\"contained\"\n                                                            color=\"secondary\"\n                                                            size=\"large\"\n                                                            onClick={\n                                                                this\n                                                                    .handleAddItem\n                                                            }\n                                                            className={\n                                                                classes.button\n                                                            }\n                                                            startIcon={\n                                                                <AddIcon />\n                                                            }\n                                                        >\n                                                            add\n                                                        </Button>\n                                                    </Grid>\n                                                    <Grid item xs={12}>\n                                                        <Box>\n                                                            {info.tags.map(\n                                                                (value, i) => (\n                                                                    <Chip\n                                                                        key={i}\n                                                                        label={\n                                                                            value\n                                                                        }\n                                                                        color=\"secondary\"\n                                                                        onDelete={() =>\n                                                                            this.handleDelete(\n                                                                                value\n                                                                            )\n                                                                        }\n                                                                        className={\n                                                                            classes.chip\n                                                                        }\n                                                                    />\n                                                                )\n                                                            )}\n                                                        </Box>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                            <Grid item sm={6} md={6} lg={6}>\n                                                <TextField\n                                                    name=\"phoneNumber\"\n                                                    value={info.phoneNumber}\n                                                    variant=\"filled\"\n                                                    type=\"number\"\n                                                    fullWidth\n                                                    id=\"phoneNumber\"\n                                                    label=\"Phone Number\"\n                                                    onChange={\n                                                        this.handleNumberChange\n                                                    }\n                                                    style={{ margin: 2 }}\n                                                />\n                                            </Grid>\n                                            <Grid item sm={6} md={6} lg={6}>\n                                                <TextField\n                                                    name=\"maxConcurrent\"\n                                                    value={info.maxConcurrent}\n                                                    variant=\"filled\"\n                                                    type=\"number\"\n                                                    fullWidth\n                                                    id=\"maxConcurrent\"\n                                                    label=\"Max Customer Allowed\"\n                                                    onChange={\n                                                        this.handleNumberChange\n                                                    }\n                                                    style={{ margin: 2 }}\n                                                />\n                                            </Grid>\n                                            <Grid\n                                                item\n                                                xs={12}\n                                                container\n                                                direction=\"row\"\n                                                justify=\"center\"\n                                            >\n                                                <Button\n                                                    color=\"primary\"\n                                                    variant=\"contained\"\n                                                    onClick={this.handleSubmit}\n                                                >\n                                                    Submit\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Box>\n                                </form>\n                            </Grid>\n                        </Grid>\n                    )}\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(ShopProfile);\n\nclass MultipleSelect extends Component {\n    state = {\n        items: this.props.items,\n    };\n\n    getStyles = (item, selectedItems, theme) => {\n        return {\n            fontWeight:\n                selectedItems.indexOf(item) === -1\n                    ? theme.typography.fontWeightRegular\n                    : theme.typography.fontWeightMedium,\n        };\n    };\n\n    MenuProps = {\n        PaperProps: {\n            style: {\n                maxHeight: 224,\n                width: 250,\n            },\n        },\n    };\n\n    render() {\n        const {\n            selectedItems,\n            handleChange,\n            classes,\n            theme,\n            name,\n            label,\n            handleDelete,\n        } = this.props;\n\n        return (\n            <FormControl className={classes.formControl} variant=\"filled\">\n                <InputLabel id=\"demo-mutiple-chip-label\">{label}</InputLabel>\n                <Select\n                    labelId=\"demo-mutiple-chip-label\"\n                    id=\"demo-mutiple-chip\"\n                    multiple\n                    name={name}\n                    value={selectedItems}\n                    onChange={handleChange}\n                    input={<Input id=\"select-multiple-chip\" />}\n                    renderValue={(selected) => (\n                        <div className={classes.chips}>\n                            {selected.map((value) => (\n                                <Chip\n                                    key={value}\n                                    label={value}\n                                    color=\"primary\"\n                                    className={classes.chip}\n                                />\n                            ))}\n                        </div>\n                    )}\n                    MenuProps={this.MenuProps}\n                >\n                    {this.props.items.map((item, i) => (\n                        <MenuItem\n                            key={item}\n                            value={item}\n                            style={this.getStyles(item, selectedItems, theme)}\n                        >\n                            {item}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport ShopDashboard from \"./dashBoard\";\nimport Logout from \"./shopLogout\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ViewBookings from './viewBookings';\nimport ShopProfile from './ShopProfile';\n\nclass ShopMainPage extends Component {\n    state = {};\n\n    \n    render() {\n        return (\n            <main style={{ display: \"flex\", width: \"100%\" }}>\n                {this.state.isLoading ? (\n                    <CircularProgress />\n                ) : this.state.errorMessage ? (\n                    <h2 style={{ paddingTop: 60 }}>\n                        {this.state.errorMessage}\n                    </h2>\n                ) : (\n                    <Switch>\n                        {/* <Route\n                        path=\"/shopowner/profile\"\n                        component={() => (\n                            <MyProfile />\n                        )}\n                    /> */}\n                        <Route\n                            path=\"/shopowner/dashboard\"\n                            component={() => <ShopDashboard />}\n                        />\n                        <Route\n                            path=\"/shopowner/bookings/\"\n                            component={ViewBookings}\n                        />\n                        <Route\n                            path=\"/shopowner/shopprofile/\"\n                            component={ShopProfile}\n                        />\n                        <Route path=\"/shopowner/logout/\" component={Logout} />\n                        {/* <Route\n                            path=\"/shopowner\"\n                            component={() => <ShopProfile />}\n                        /> */}\n                        <Route\n                            path=\"/shopowner\"\n                            component={() => <ShopDashboard />}\n                        />\n                    </Switch>\n                )}\n            </main>\n        );\n    }\n}\n\nexport default ShopMainPage;\n","import React, { Component } from \"react\";\nimport api from \"../configApi.json\";\nimport { Link } from \"react-router-dom\";\nimport { Grid } from '@material-ui/core';\n\nclass NotFound extends Component {\n    getStyles = () => {\n        let st = {};\n        const { innerWidth: w, innerHeight: h } = window;\n        if (w > h) st.height = h * 0.8;\n        else st.width = w * 0.95;\n        st.margin = \"auto\";\n        st.marginTop = 60;\n        return st;\n    }\n    render() {\n        return (\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid Item>\n                    <img\n                        src={api.errorPageImage}\n                        style={this.getStyles()}\n                        // style={{\n                        //     height: window.innerHeight * 0.8,\n                        //     margin: \"auto\",\n                        //     marginTop: 60,\n                        // }}\n                    ></img>\n                </Grid>\n                <Grid item>\n                    <Link to=\"/\">HOME</Link>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport SignIn from \"./components/pages/signin\";\nimport SignUp from \"./components/pages/registration\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport MainPage from \"./components/pages/customer/mainPage\";\nimport { CustomAppBar, Footer } from \"./components/AppComponent\";\nimport Home from \"./components/home\";\nimport Logout from \"./components/pages/shopowner/shopLogout\";\nimport { withRouter } from \"react-router-dom\";\nimport ShopMainPage from \"./components/pages/shopowner/shopMainPage\";\nimport NotFound from \"./components/notFound\";\n\nclass App extends Component {\n    state = {\n        auth: {\n            customerLogged: false,\n            //localStorage.getItem(\"userLogged\") && !localStorage.getItem(\"isShop\"),\n            shopOwnerLogged: false,\n            //localStorage.getItem(\"userLogged\") && localStorage.getItem(\"isShop\"),\n        },\n        customerMenu: [\n            {\n                path: \"/customer/profile\",\n                label: \"Profile\",\n                //icon: <AccountBoxIcon />,\n            },\n            {\n                path: \"/customer/dashboard\",\n                label: \"Dashboard\",\n                //icon: <DashboardIcon />,\n            },\n            {\n                path: \"/customer/booking\",\n                label: \"Bookings\",\n                //icon: <BookmarksRoundedIcon />,\n            },\n            {\n                path: \"/customer/logout\",\n                label: \"Logout\",\n                //icon: <PowerSettingsNewRoundedIcon />,\n            },\n        ],\n        shopOwnerMenu: [\n            {\n                path: \"/shopowner/shopprofile\",\n                label: \"Shop Profile\",\n            },\n            {\n                path: \"/shopowner/dashboard\",\n                label: \"Dashboard\",\n            },\n            {\n                path: \"/shopowner/bookings\",\n                label: \"View Bookings\",\n            },\n            {\n                path: \"/logout\",\n                label: \"Logout\",\n            },\n        ],\n    };\n\n    componentDidMount() {\n        try {\n            if (localStorage.getItem(\"userLogged\")) {\n                const check = localStorage.getItem(\"isShop\");\n                console.log(\"cdm\", check);\n                if (check) {\n                    console.log(\"cdm shopOwnerLogged\", check);\n                    this.setState({ auth: { shopOwnerLogged: true } });\n                    this.props.history.push(\"/shopowner\");\n                } else {\n                    console.log(\"cdm customerLogged\", check);\n                    this.setState({ auth: { customerLogged: true } });\n                    this.props.history.push(\"/customer\");\n                }\n            }\n        } catch (ex) {}\n    }\n\n    handleAuth = (authname) => {\n        this.setState({ auth: { [authname]: true } });\n    };\n\n    darkTheme = createMuiTheme({\n        palette: {\n            type: \"light\",\n            //   primary: {\n            //     main: orange[500],\n            //   },\n            //   secondary: {\n            //     main: deepOrange[900],\n            //   },\n        },\n    });\n\n    render() {\n        const {\n            customerMenu,\n            shopOwnerMenu,\n            auth: { customerLogged, shopOwnerLogged },\n            userLoggedIn,\n        } = this.state;\n        // return (\n        //     <ThemeProvider theme={this.darkTheme}>\n        //         <div style={{flexGrow:1,marginTop:40}}>\n        //             <Grid\n        //                 container\n        //                 direction=\"row\"\n        //                 justify=\"center\"\n        //                 alignItems=\"baseline\"\n        //             >\n        //                 <Switch>\n        //                     <Route path=\"/signup\" component={SignUp}/>\n        //                     <Route path=\"/signin\" component={SignIn}/>\n        //                     <Route path=\"/\" component={() => <Sidebar userData={this.state.data}/>}/>\n        //                 </Switch>\n        //             </Grid>\n        //         </div>\n        //     </ThemeProvider>\n        //  );\n\n        const menuOption =\n            (shopOwnerLogged || customerLogged) &&\n            (customerLogged ? customerMenu : shopOwnerMenu);\n        return (\n            <React.Fragment>\n                <div style={{ flexGrow: 1, backgroundColor: \"#ffffff\" }}>\n                    <CustomAppBar\n                        menuOption={menuOption}\n                        auth={shopOwnerLogged || customerLogged}\n                        handleAuth={this.handleAuth}\n                    />\n                    {/* <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    style={{ marginTop: 20, width: \"100%\", margin: \"auto\" }}\n                > */}\n                    <Switch>\n                        {/* <Route\n                            path=\"/signin\"\n                            component={() => (\n                                <SignIn handleAuth={this.handleAuth} />\n                            )}\n                        /> */}\n                        <Route path=\"/logout\" component={() => <Logout />} />\n                        <Route\n                            path=\"/signup\"\n                            component={() => (\n                                <SignUp handleAuth={this.handleAuth} />\n                            )}\n                        />\n                        {shopOwnerLogged && (\n                            <Route\n                                path=\"/shopowner\"\n                                component={() => <ShopMainPage />}\n                            />\n                        )}\n                        {customerLogged && (\n                            <Route\n                                path=\"/customer\"\n                                component={() => <MainPage />}\n                            />\n                        )}\n                        <Route path=\"/404\" component={NotFound} />\n                        <Route path=\"/\" exact component={Home} />\n                        <Redirect to=\"/404\"></Redirect>\n                    </Switch>\n                    {/* </Grid> */}\n                </div>\n                <div style={{ flexGrow: 1,direction:\"column\" }} />\n                <Footer />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}