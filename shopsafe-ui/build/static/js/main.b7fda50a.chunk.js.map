{"version":3,"sources":["services/authService.js","services/httpServices.js","services/userService.js","components/pages/signin.jsx","utils/auth.jsx","components/pages/CustomerRegistration.jsx","components/pages/ShopOwnerRegistration.jsx","components/pages/registration.jsx","components/pages/customer/components/shop.jsx","services/dataServices.js","components/pages/customer/shopPage/getLocation.jsx","components/pages/customer/components/filter.jsx","components/pages/customer/shops.jsx","components/pages/customer/bookSlot/AddressForm.jsx","components/pages/customer/bookSlot/PaymentForm.jsx","components/pages/customer/bookSlot/Review.jsx","components/pages/customer/bookSlot/BookSlot.jsx","components/pages/customer/components/editBookings.jsx","components/pages/customer/components/slotCard.jsx","components/pages/customer/myBookings.jsx","components/pages/customer/profile.jsx","components/pages/customer/Logout.js","components/pages/customer/shopPage/Adress.jsx","components/pages/customer/shopPage/Overview.jsx","components/pages/customer/shopPage/Order.jsx","components/pages/customer/shopPage/Image.jsx","components/pages/customer/shopPage/Reviews.jsx","components/pages/customer/shopPage/giveReview.jsx","components/pages/customer/shopPage/shopPage.jsx","components/pages/customer/mainPage.jsx","components/AppComponent.jsx","components/home.jsx","components/pages/shopowner/shopLogout.js","components/pages/shopowner/components/graph.jsx","components/pages/shopowner/components/simpleStat.jsx","components/pages/shopowner/components/UpcomingBookingsTable.jsx","components/pages/shopowner/dashBoard.jsx","components/pages/shopowner/viewBookings.jsx","components/pages/shopowner/ShopProfile.jsx","components/pages/shopowner/shopMainPage.jsx","App.js","serviceWorker.js","index.js"],"names":["token","jwt","localStorage","getItem","alert","window","location","Axios","require","interceptors","response","use","error","status","console","log","Promise","reject","get","api","params","headers","post","put","delete","protectedGet","Authorization","protectedPost","body","protectedPut","protectedDelete","data","Hash","customerRegister","firstName","lastName","email","password","confirmPassword","phoneNumber","address","streetname","cityName","stateName","country","userData","gender","http","customerSignup","ShopRegister","shopName","openingHour","openingMinute","closingHour","closingMinute","tags","bookingTimeUnit","maxConcurrent","payment_modes","discount","ownerName","parseInt","shopSignup","login","logout","bookNewSlot","id","itemList","period","slot","slotName","toLowerCase","purchaseItems","join","isShop","shopId","otp","Math","round","random","slotGroupBegins","start","slotGroupEnds","end","customerName","bookSlot","updateBookings","editBooking","userDetails","deleteSlots","giveReview","rating","text","giveRating","review","validateSlotByOtp","bookingId","validateSlot","qrdata","Joi","SignIn","state","errors","schema","string","min","max","required","label","checked","validateProperty","name","value","Obj","rules","object","validate","details","message","handleChange","input","currentTarget","setState","handleSwitch","event","result","abortEarly","item","path","handleSubmit","e","preventDefault","doSubmit","handleSignup","props","history","push","a","setItem","handleAuth","this","classes","Container","component","maxWidth","CssBaseline","className","paper","Avatar","avatar","Typography","variant","form","onSubmit","TextField","margin","fullWidth","type","autoComplete","autoFocus","onChange","helperText","Button","color","submit","Grid","container","xs","Link","href","onClick","style","cursor","Component","withRouter","withStyles","theme","marginTop","spacing","display","flexDirection","alignItems","backgroundColor","palette","secondary","main","width","ShopsList","uid","shopList","shopSchedule","openingTime","hour","minute","closingTime","imgUrl","itemsAvailable","ratings","filter","getStateWiseCity","sname","cityList","c","localeCompare","CustomerRegistration","streetName","zipCode","formData","states","handleSelect","target","handleState","handleHidden","tabValue","index","handleSignin","onSuccess","statesList","noValidate","hidden","Box","borderColor","border","borderRadius","m","p","sm","FormControl","formControl","InputLabel","Select","labelId","MenuItem","map","i","key","city","defaultValue","InputProps","readOnly","FormControlLabel","control","Checkbox","justify","borderStyles","ShopOwnerRegistration","handleNumberChange","updateLocation","addr","description","handleMultipleSelect","Paper","root","IconButton","iconButton","aria-label","onSelect","inputProps","selectedItems","items","chips","flexWrap","chip","padding","marginLeft","flex","divider","height","withTheme","MultipleSelect","getStyles","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MenuProps","PaperProps","maxHeight","multiple","Input","renderValue","selected","Chip","SignUp","handlePath","auth","square","Tabs","indicatorColor","textColor","Tab","Shop","imWidth","handleClick","openedNow","d","Date","currentOffset","getTimezoneOffset","ISTTime","getTime","setHours","setMinutes","currentTime","getHours","getMinutes","time","t","setSeconds","toLocaleTimeString","innerWidth","imageUrl","distancemetric","openingTimeIST","closingTimeIST","shopRating","travelDuration","distance","boxShadow","cover","direction","bim","backg","marginBottom","backgroundImage","background","fontSize","align","gutterBottom","paddingLeft","marginRight","icon","paddingBottom","Divider","endIcon","content","controls","playIcon","backgroundSize","backgroundPosition","getShopList","r","rad","userLocation","radius","getShopDetails","shopData","getShopBookings","myBookings","CurrentLocation","coordinate","openDialogue","handleAddress","handleClose","getLocation","xl","lg","Dialog","open","onClose","DialogContent","orientation","FilterCard","openClose","showAll","isOpen","distanceRating","slotTypes","Morning","Afternoon","Evening","customerRatings","slotType","customerRating","handleCheck","handleDR","ascOrder","handleSlot","handleRating","md","Shops","isLoading","updateShopList","newValue","Slider","aria-labelledby","step","marks","valueLabelDisplay","CircularProgress","GridList","cellHeight","cols","GridListTile","userAddress","flexGrow","AddressForm","userInfo","shopInfo","Fragment","fieldValue","duration","SelectSlotAndItem","getSlotTimes","slotTimeArr","stime","setTime","handlePeriod","setPeriod","setSlotTime","handleDuration","setDuration","handleSlotTime","slotTime","handleSelectItems","minWidth","position","overflow","listSection","ul","Review","products","user","List","disablePadding","product","ListItem","listItem","ListItemText","primary","title","total","steps","BookNewSlot","activeStep","match","checkConfirmation","getStepContent","onCheck","Error","handleNext","confirmSlotSubmit","handleBack","_valueTracker","getValue","layout","Stepper","stepper","Step","StepLabel","length","src","buttons","button","disabled","appBar","breakpoints","up","justifyContent","timeString","h","hour12","EditBookings","bookingDetails","split","arrivalHour","slotLabel","noticeBody","submitted","success","interval","handleBooking","find","SuccessNoticeBody","arrivalMinute","deliveryHour","deliveryMinute","QRCode","SlotCard","expanded","handleSlotChange","newData","handleExpandClick","isEditable","isExpired","handleEdit","Card","activeRoot","onMouseOver","onMouseOut","CardHeader","media","CardContent","CardActions","disableSpacing","startIcon","handleDelete","clsx","expand","expandOpen","aria-expanded","Collapse","in","timeout","unmountOnExit","expiredRoot","transform","transition","transitions","create","shortest","MyBookings","slotData","showPastSlot","editDialogue","errorMessage","ctime","slotStartTme","createdAt","copy","forceUpdate","numberOfActiveBookngs","count","size","cards","MyProfile","edit","toDateString","userCredentials","largeAvatar","EditForm","Logout","clear","Address","Order","openModal","dialogueData","periodData","splice","handleAddItem","paddingTop","onDelete","Object","keys","aria-describedby","ModalNoticeBody","customerId","Image","tileData","img","author","tile","alt","sortType","sorting","reviews","val","ratingId","customIcons","1","2","3","4","5","IconContainer","other","ReviewCard","liked","handleLike","date","str","toLocaleDateString","year","month","day","Rating","getLabelText","IconContainerComponent","paragraph","GiveReview","write","reviewText","multiline","rows","tabs","ShopPage","tabPageNumber","getTabPage","handleTabs","handleDirection","destination","precision","scrollButtons","tab","noWrap","toolbarLink","toolbarSecondary","overflowX","flexShrink","MainPage","toolbar","drawer","menuButton","mixins","drawerPaper","CustomAppBarClass","handleSignIn","handleSignUp","HideOnScroll","children","trigger","useScrollTrigger","undefined","Slide","appear","menuOption","AppBar","Toolbar","CustomFooter","left","bottom","ProfileMenu","anchorEl","handleMenu","aria-controls","aria-haspopup","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","option","CustomAppBar","Footer","Home","ApexLineChart","series","options","chart","dataLabels","enabled","stroke","curve","xaxis","categories","tooltip","x","format","SimpleStatCard","CustomerServedToday","UpcomingCustomer","TodayChart","plotOptions","bar","columnWidth","show","colors","yaxis","fill","opacity","UpcomingBookingsTable","bookingsData","filteredList","ct","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","row","scope","ShopDashboard","response1","response2","ViewBookings","updateFilter","updateStatus","filterData","setFilter","RowBody","getChip","handleOtp","arrivalTimeIST","deliveryTimeIST","submitOtp","Filter","elevation","OTP","showInputField","ShopProfile","ShopMainPage","App","customerLogged","shopOwnerLogged","customerMenu","shopOwnerMenu","authname","darkTheme","createMuiTheme","check","ex","userLoggedIn","exact","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b7fda50a.chunk.js","sourcesContent":["const token = () => {\n    const jwt = localStorage.getItem(\"token\");\n\n    if (jwt) return jwt;\n    else {\n        alert(\"Please Sign In first\");\n        window.location = \"/signin\";\n        return null;\n    }\n}\n \nexport default token;","// import { Axios } from \"axios\";\nimport token from \"./authService\";\n\nconst Axios = require(\"axios\");\n\nAxios.interceptors.response.use(null, (error) => {\n    const expectedError =\n        error.response &&\n        error.response.status >= 400 &&\n        error.response.status < 500;\n    if (!expectedError) {\n        console.log(\"Logging the error from axios interceptors\", error.response);\n        alert(\"An unexpected error occured\");\n    }\n    console.log(error.response);\n    return Promise.reject(error);\n});\n\nconst protectedGet = (api, params) => {\n    const jwt = token();\n    const response = Axios.get(api, {\n        params,\n        headers: {\n            Authorization: `Bearer ${jwt}`,\n        },\n    });\n    return response;\n};\n\nconst protectedDelete = (api,body) => {\n    const jwt = token();\n    const response = Axios.delete(api, {\n        headers: {\n            Authorization: `Bearer ${jwt}`,\n        },\n        data:body,\n    });\n    return response;\n};\n\nconst protectedPost = (api, body) => {\n    const jwt = token();\n    const response = Axios.post(api, body, {\n        headers: {\n            'Authorization': `Bearer ${jwt}`,\n        },\n    });\n    return response;\n};\n\nconst protectedPut = (api, body) => {\n    const jwt = token();\n    const response = Axios.put(api, body, {\n        headers: {\n            'Authorization': `Bearer ${jwt}`,\n        },\n    });\n    return response;\n};\n\nconst get = (api, params, headers) => {\n    return Axios.get(api, { params, headers });\n}\n\nexport default {\n    get,\n    post: Axios.post,\n    put: Axios.put,\n    delete: Axios.delete,\n    protectedGet,\n    protectedPost,\n    protectedPut,\n    protectedDelete,\n};\n","import http from \"./httpServices\";\nimport api from \"../configApi.json\";\n\nvar Hash = require(\"sha256\");\n\nexport const customerRegister = (data) => {\n    const {\n        firstName,\n        lastName,\n        email,\n        password,\n        confirmPassword,\n        phoneNumber,\n    } = data;\n    const address =\n        data.streetname +\n        \", \" +\n        data.cityName +\n        \", \" +\n        data.stateName +\n        \", \" +\n        data.country;\n    const userData = {\n        firstName,\n        lastName,\n        email,\n        password: Hash(password),\n        confirmPassword: Hash(confirmPassword),\n        phoneNumber,\n        address,\n        gender: \"Male\",\n    };\n    const response = http.post(api.customerSignup, userData);\n\n    return response;\n};\n\nexport const ShopRegister = (data) => {\n    const {\n        firstName,\n        lastName,\n        shopName,\n        email,\n        phoneNumber,\n        password,\n        confirmPassword,\n        openingHour,\n        openingMinute,\n        closingHour,\n        closingMinute,\n        tags,\n        bookingTimeUnit,\n        maxConcurrent,\n        payment_modes,\n        discount,\n        address,\n    } = data;\n    const userData = {\n        shopName,\n        ownerName: firstName + \" \" + lastName,\n        email,\n        password: Hash(password),\n        confirmPassword: Hash(confirmPassword),\n        phoneNumber: parseInt(phoneNumber),\n        address,\n        openingHour,\n        openingMinute,\n        closingHour,\n        closingMinute,\n        tags,\n        bookingTimeUnit,\n        maxConcurrent,\n        payment_modes,\n        discount,\n    };\n    const response = http.post(api.shopSignup, userData);\n\n    return response;\n};\n\nexport const login = (email, password) => {\n    const response = http.post(api.login, {\n        email,\n        password: Hash(password),\n    });\n    return response;\n};\n\nexport const logout = () => {\n    const response = http.protectedGet(api.logout);\n    return response;\n};\n\nexport const bookNewSlot = (data, id) => {\n    const { itemList, period, slot } = data;\n    const slotName = period.toLowerCase();\n    const body = {\n        purchaseItems: itemList.join(),\n        slotName: slotName,\n        isShop: false,\n        shopId: id,\n        otp: Math.round(Math.random(0, 1) * 777777 + 222222),\n        slotGroupBegins: slot.start,\n        slotGroupEnds: slot.end,\n        customerName: localStorage.getItem(\"userName\"),\n    };\n    console.log(body);\n    return http.protectedPost(api.bookSlot, body);\n};\n\n// export const updateRadius = (r) => {\n//     const rad = r * 1000;\n//     console.log(\"radius\", r);\n//     return http.post(api.shopList, {\n//         userLocation: localStorage.getItem(\"userAddress\"),\n//         radius: rad,\n//     });\n// };\n\nexport const updateBookings = (data, id) => {\n    return http.protectedPut(api.editBooking + id, {\n        slotName: data.period.toLowerCase(),\n        slotGroupBegins: data.slot.start,\n        slotGroupEnds: data.slot.end,\n        isShop: false,\n    });\n};\n\nexport const userDetails = () => {\n    return http.protectedPost(api.userData, { isShop: false });\n}\n\nexport const deleteSlots = (id) => {\n    return http.protectedDelete(api.editBooking + id, { isShop: false });\n};\n\nexport const giveReview = (rating, shopId, text = \"\") => {\n    if (text)\n        return http.protectedPost(api.giveRating, {\n            shopId,\n            rating,\n            review: text,\n            isShop: false,\n        });\n    else\n        return http.protectedPost(api.giveRating, {\n            shopId,\n            rating,\n            isShop: false,\n        });\n};\n\nexport const getShopDetailsAuthorized = () => {\n    return http.protectedPost(api.shopData, {\n        isShop: true,\n    });\n}\n\nexport const validateSlotByOtp = (bookingId, otp) => {\n    console.log(\"validate\", bookingId + \"@@##$$\" + otp);\n    return http.protectedPost(api.validateSlot, {\n        isShop: true,\n        qrdata: bookingId + \"@@##$$\" + otp,\n    });\n}","import React, { Component } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { login } from \"../../services/userService\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { withRouter } from \"react-router-dom\";\n\nconst Joi = require(\"@hapi/joi\");\n\nconst useStyles = (theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\nclass SignIn extends Component {\n    state = {\n        data: {\n            email: \"\",\n            password: \"\",\n        },\n        errors: {},\n        schema: {\n            email: Joi.string().min(3).max(30).required().label(\"Email\"),\n            password: Joi.string().label(\"Password\").required(),\n        },\n        checked: true,\n    };\n\n    validateProperty = ({ name, value }) => {\n        const Obj = { [name]: value };\n        const rules = { [name]: this.state.schema[name] };\n        // console.log(name,value,rules,Obj);\n        const { error } = Joi.object(rules).validate(Obj);\n\n        return error ? error.details[0].message : null;\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        const data = { ...this.state.data };\n        // const errorMessage = this.validateProperty(input);\n        // if(errorMessage){\n        //     this.setState({errors:{[input.name]:errorMessage}});\n        // }else this.setState({errors:{[input.name]:\"\"}});\n        data[input.name] = input.value;\n        this.setState({ data });\n        //console.log(this.state.errors);\n    };\n\n    handleSwitch = (event) => {\n        // this.setState({checked: })\n    };\n\n    validate = () => {\n        const errors = {};\n        const { data } = this.state;\n        const result = Joi.object(this.state.schema).validate(data, {\n            abortEarly: false,\n        });\n        if (!result.error) return null;\n        for (let item of result.error.details)\n            errors[item.path[0]] = item.message;\n        return errors;\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        const errors = this.validate();\n        this.setState({ errors: errors ? errors : {} });\n        console.log(errors);\n        if (errors) return;\n        this.doSubmit();\n    };\n\n    handleSignup = () => {\n        this.props.history.push(\"/signup\");\n    };\n\n    doSubmit = async () => {\n        try {\n            const response = await login(\n                this.state.data.email,\n                this.state.data.password\n            );\n            localStorage.setItem(\"token\", response.data.token);\n            localStorage.setItem(\"isShop\", response.data.isShop ? \"shop\" : \"\");\n            localStorage.setItem(\"userLogged\", true);\n            console.log(response);\n            this.props.handleAuth(\n                response.data.isShop ? \"shopOwnerLogged\" : \"customerLogged\"\n            );\n            this.props.history.push(\n                response.data.isShop ? \"/shopowner\" : \"/customer\"\n            );\n        } catch (ex) {\n            console.log(ex);\n            if (ex.response.data.message) alert(ex.response.data.message);\n            else {\n                const errors = { ...ex.response.data };\n                console.log(\"error\", ex.response);\n                this.setState({ errors });\n            }\n        }\n        console.log(\"Submitted\", this.state.data);\n    };\n\n    render() {\n        console.log(\"props\", this.props);\n        const { classes } = this.props;\n        const { errors } = this.state;\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign in\n                    </Typography>\n                    <form className={classes.form} onSubmit={this.handleSubmit}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id=\"email\"\n                            type=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            onChange={this.handleChange}\n                            error={errors && errors.email}\n                            helperText={errors && errors.email && errors.email}\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            onChange={this.handleChange}\n                            autoComplete=\"current-password\"\n                            error={errors && errors.password}\n                            helperText={\n                                errors && errors.password && errors.password\n                            }\n                        />\n                        {/* <FormControlLabel\n              control={\n                <Switch\n                  checked={true}\n                  onChange={this.handleSwitch}\n                  name=\"checkedB\"\n                  color=\"primary\"\n                />\n              }\n              label=\"Primary\"\n            /> */}\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign In\n                        </Button>\n                        <Grid container>\n                            <Grid item xs>\n                                <Link href=\"#\" variant=\"body2\">\n                                    Forgot password?\n                                </Link>\n                            </Grid>\n                            <Grid item>\n                                <Link\n                                    onClick={this.handleSignup}\n                                    variant=\"body2\"\n                                    style={{ cursor: \"pointer\" }}\n                                >\n                                    {\"Don't have an account? Sign Up\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </Container>\n        );\n    }\n}\n\nexport default withRouter(withStyles(useStyles)(SignIn));\n","\n\nexport const getUserDetails = () => {\n    const data={\n        name:\"John Doe\",\n        email:\"abcdjohn@yahoo.com\",\n        phoneNumber:\"+91 9452656726\",\n        imageUrl:\"https://picsum.photos/554\",\n        address:\"1600 Amphitheatre Parkway in Mountain View, California, United States\",\n    };\n    return data;\n};\n\nexport const ShopsList = (uid=\"-1\") => {\n    const shopList = [\n        {\n            uid:\"123\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/355\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:4.1,\n            \n        },\n        {\n            uid:\"124\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/340\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:3.1,\n            \n        },\n        {\n            uid:\"125\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/348\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:3.6,\n            \n        },\n        {\n            uid:\"126\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/320\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:2.3,\n            \n        },\n        {\n            uid:\"127\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/389\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:3.7,\n            \n        },\n        {\n            uid:\"128\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/337\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:4.6,\n            \n        },\n        {\n            uid:\"129\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/350\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:1.8,\n            \n        },\n        {\n            uid:\"130\",\n            email:\"abcdjohn@vmart.com\",\n            phoneNumber:\"+91 8752756676\",\n            shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:20,minute:30}},\n            name:\"New VMart Shopping Mall\",\n            address:\"325, Sarat Chatterjee Road, Shibpur, Howrah-711102\",\n            imgUrl:\"https://picsum.photos/350\",\n            itemsAvailable:[\"Electronics\",\"Grocery\"],\n            ratings:1.8,\n            \n        }\n    ];\n    if(uid===\"-1\") return shopList;\n    else return shopList.filter(item => item.uid===uid)[0];\n}\n\nexport const getItemList = () => {\n    const items = [\n        {\n            label:\"Meat & Fish\",\n            value:[\n                \"Skinless white meat\",\"Lean cuts of red meat\",\"Oily fish\",\n                \"Luncheon meat\"\n            ]\n        },\n        {\n            label:\"Condiments\",\n            value:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ]\n        },\n        {\n            label:\"Grains and Bread\",\n            value:[\n                \"Pasta\",\"Rice\",\"Bread\",\"All-purpose flour\",\n                \"Breakfast cereal\"\n            ]\n        },\n        {\n            label:\"Dairy & Eggs\",\n            value:[\n                \"Milk\",\"Eggs\",\"Cheese\",\"Yogurt\"\n            ]\n        },\n        {\n            label:\"Oil & Fat\",\n            value:[\n                \"Cooking oil\",\"Butter\"\n            ]\n        },\n        {\n            label:\"Tinned & Dried Produce\",\n            value:[\n                \"Red kidney beans\",\"White beans\",\"Green lentils\",\n                \"Chopped tomatoes\",\"Soup\",\"Fruit, nuts, and seeds\"\n            ]\n        },\n        \n    ];\n    return items;\n}\n\nexport const getBookedSlotCustomer = () => {\n    const slots = [\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:true,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:true,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:true,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            active:true,\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:true,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:true,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:false,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:false,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:false,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:false,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:false,\n        },\n        {\n            shopId:\"4k32h5kl2l\",\n            shopName:\"Bishhal New Market\",\n            bookingId:\"5g46dsg46d4\",\n            qrCode:\"https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg\",\n            duration:\"6:30 PM -> 7:30 PM\",\n            bookedItems:[\n                \"Salt\",\"Pepper\",\"Herbs & Spices\",\n                \"Stock cubes\",\"Honey\",\"Vinegar\",\n                \"Sugar\"\n            ],\n            active:false,\n        },\n    ];\n\n    return slots;\n}\n\n\n//https://sites.google.com/site/ashishright/collections/Statewise-Cities-In-India#TOC-Andaman-Nicobar-AN-\nexport const getStateName = () => {\n    const states = [         \n        \"Andaman & Nicobar [AN]\",\n        \"Andhra Pradesh [AP]\",\n        \"Arunachal Pradesh [AR]\",\n        \"Assam [AS]\",\n        \"Bihar [BH]\",\n        \"Chandigarh [CH]\",\n        \"Chhattisgarh [CG]\",\n        \"Dadra & Nagar Haveli [DN]\",\n        \"Daman & Diu [DD]\",\n        \"Delhi [DL]\",\n        \"Goa [GO]\",\n        \"Gujarat [GU]\",\n        \"Haryana [HR]\",\n        \"Himachal Pradesh [HP]\",\n        \"Jammu & Kashmir [JK]\",\n        \"Jharkhand [JH]\",\n        \"Karnataka [KR]\",\n        \"Kerala [KL]\",\n        \"Lakshadweep [LD]\",\n        \"Madhya Pradesh [MP]\",\n        \"Maharashtra [MH]\",\n        \"Manipur [MN]\",\n        \"Meghalaya [ML]\",\n        \"Mizoram [MM]\",\n        \"Nagaland [NL]\",\n        \"Orissa [OR]\",\n        \"Pondicherry [PC]\",\n        \"Punjab [PJ]\",\n        \"Rajasthan [RJ]\",\n        \"Sikkim [SK]\",\n        \"Tamil Nadu [TN]\",\n        \"Tripura [TR]\",\n        \"Uttar Pradesh [UP]\",\n        \"Uttaranchal [UT]\",\n        \"West Bengal [WB]\",\n\n    ];\n    return states;\n}\n\n\nexport const getStateWiseCity = sname => {\n    const statelist = [\n        {\n            name:\"Andaman & Nicobar [AN]\",\n            cityList:[\n                \"Alipur\", \"Andaman Island\", \"Anderson Island\", \"Arainj-Laka-Punga\", \"Austinabad\", \"Bamboo Flat\", \"Barren Island\", \"Beadonabad\", \"Betapur\", \"Bindraban\", \"Bonington\", \"Brookesabad\", \"Cadell Point\", \"Calicut\", \"Chetamale\", \"Cinque Islands\", \"Defence Island\", \"Digilpur\", \"Dolyganj\", \"Flat Island\", \"Geinyale\", \"Great Coco Island\", \"Haddo\", \"Havelock Island\", \"Henry Lawrence Island\", \"Herbertabad\", \"Hobdaypur\", \"Ilichar\", \"Ingoie\", \"Inteview Island\", \"Jangli Ghat\", \"Jhon Lawrence Island\", \"Karen\", \"Kartara\", \"KYD Islannd\", \"Landfall Island\", \"Little Andmand\", \"Little Coco Island\", \"Long Island\", \"Maimyo\", \"Malappuram\", \"Manglutan\", \"Manpur\", \"Mitha Khari\", \"Neill Island\", \"Nicobar Island\", \"North Brother Island\", \"North Passage Island\", \"North Sentinel Island\", \"Nothen Reef Island\", \"Outram Island\", \"Pahlagaon\", \"Palalankwe\", \"Passage Island\", \"Phaiapong\", \"Phoenix Island\", \"Port Blair\", \"Preparis Island\", \"Protheroepur\", \"Rangachang\", \"Rongat\", \"Rutland Island\", \"Sabari\", \"Saddle Peak\", \"Shadipur\", \"Smith Island\", \"Sound Island\", \"South Sentinel Island\", \"Spike Island\", \"Tarmugli Island\", \"Taylerabad\", \"Titaije\", \"Toibalawe\", \"Tusonabad\", \"West Island\", \"Wimberleyganj\", \"Yadita\", \n            ]\n        },\n        {\n            name:\"Andhra Pradesh [AP]\",\n            cityList:[\n                \"Achampet\", \"Adilabad\", \"Adoni\", \"Alampur\", \"Allagadda\", \"Alur\", \"Amalapuram\", \"Amangallu\", \"Anakapalle\", \"Anantapur\", \"Andole\", \"Araku\", \"Armoor\", \"Asifabad\", \"Aswaraopet\", \"Atmakur\", \"B. Kothakota\", \"Badvel\", \"Banaganapalle\", \"Bandar\", \"Bangarupalem\", \"Banswada\", \"Bapatla\", \"Bellampalli\", \"Bhadrachalam\", \"Bhainsa\", \"Bheemunipatnam\", \"Bhimadole\", \"Bhimavaram\", \"Bhongir\", \"Bhooragamphad\", \"Boath\", \"Bobbili\", \"Bodhan\", \"Chandoor\", \"Chavitidibbalu\", \"Chejerla\", \"Chepurupalli\", \"Cherial\", \"Chevella\", \"Chinnor\", \"Chintalapudi\", \"Chintapalle\", \"Chirala\", \"Chittoor\", \"Chodavaram\", \"Cuddapah\", \"Cumbum\", \"Darsi\", \"Devarakonda\", \"Dharmavaram\", \"Dichpalli\", \"Divi\", \"Donakonda\", \"Dronachalam\", \"East Godavari\", \"Eluru\", \"Eturnagaram\", \"Gadwal\", \"Gajapathinagaram\", \"Gajwel\", \"Garladinne\", \"Giddalur\", \"Godavari\", \"Gooty\", \"Gudivada\", \"Gudur\", \"Guntur\", \"Hindupur\", \"Hunsabad\", \"Huzurabad\", \"Huzurnagar\", \"Hyderabad\", \"Ibrahimpatnam\", \"Jaggayyapet\", \"Jagtial\", \"Jammalamadugu\", \"Jangaon\", \"Jangareddygudem\", \"Jannaram\", \"Kadiri\", \"Kaikaluru\", \"Kakinada\", \"Kalwakurthy\", \"Kalyandurg\", \"Kamalapuram\", \"Kamareddy\", \"Kambadur\", \"Kanaganapalle\", \"Kandukuru\", \"Kanigiri\", \"Karimnagar\", \"Kavali\", \"Khammam\", \"Khanapur (AP)\", \"Kodangal\", \"Koduru\", \"Koilkuntla\", \"Kollapur\", \"Kothagudem\", \"Kovvur\", \"Krishna\", \"Krosuru\", \"Kuppam\", \"Kurnool\", \"Lakkireddipalli\", \"Madakasira\", \"Madanapalli\", \"Madhira\", \"Madnur\", \"Mahabubabad\", \"Mahabubnagar\", \"Mahadevapur\", \"Makthal\", \"Mancherial\", \"Mandapeta\", \"Mangalagiri\", \"Manthani\", \"Markapur\", \"Marturu\", \"Medachal\", \"Medak\", \"Medarmetla\", \"Metpalli\", \"Mriyalguda\", \"Mulug\", \"Mylavaram\", \"Nagarkurnool\", \"Nalgonda\", \"Nallacheruvu\", \"Nampalle\", \"Nandigama\", \"Nandikotkur\", \"Nandyal\", \"Narasampet\", \"Narasaraopet\", \"Narayanakhed\", \"Narayanpet\", \"Narsapur\", \"Narsipatnam\", \"Nazvidu\", \"Nelloe\", \"Nellore\", \"Nidamanur\", \"Nirmal\", \"Nizamabad\", \"Nuguru\", \"Ongole\", \"Outsarangapalle\", \"Paderu\", \"Pakala\", \"Palakonda\", \"Paland\", \"Palmaneru\", \"Pamuru\", \"Pargi\", \"Parkal\", \"Parvathipuram\", \"Pathapatnam\", \"Pattikonda\", \"Peapalle\", \"Peddapalli\", \"Peddapuram\", \"Penukonda\", \"Piduguralla\", \"Piler\", \"Pithapuram\", \"Podili\", \"Polavaram\", \"Prakasam\", \"Proddatur\", \"Pulivendla\", \"Punganur\", \"Putturu\", \"Rajahmundri\", \"Rajampeta\", \"Ramachandrapuram\", \"Ramannapet\", \"Rampachodavaram\", \"Rangareddy\", \"Rapur\", \"Rayachoti\", \"Rayadurg\", \"Razole\", \"Repalle\", \"Saluru\", \"Sangareddy\", \"Sathupalli\", \"Sattenapalle\", \"Satyavedu\", \"Shadnagar\", \"Siddavattam\", \"Siddipet\", \"Sileru\", \"Sircilla\", \"Sirpur Kagaznagar\", \"Sodam\", \"Sompeta\", \"Srikakulam\", \"Srikalahasthi\", \"Srisailam\", \"Srungavarapukota\", \"Sudhimalla\", \"Sullarpet\", \"Tadepalligudem\", \"Tadipatri\", \"Tanduru\", \"Tanuku\", \"Tekkali\", \"Tenali\", \"Thungaturthy\", \"Tirivuru\", \"Tirupathi\", \"Tuni\", \"Udaygiri\", \"Ulvapadu\", \"Uravakonda\", \"Utnor\", \"V.R. Puram\", \"Vaimpalli\", \"Vayalpad\", \"Venkatgiri\", \"Venkatgirikota\", \"Vijayawada\", \"Vikrabad\", \"Vinjamuru\", \"Vinukonda\", \"Visakhapatnam\", \"Vizayanagaram\", \"Vizianagaram\", \"Vuyyuru\", \"Wanaparthy\", \"Warangal\", \"Wardhannapet\", \"Yelamanchili\", \"Yelavaram\", \"Yeleswaram\", \"Yellandu\", \"Yellanuru\", \"Yellareddy\", \"Yerragondapalem\", \"Zahirabad\", \n            ]\n        },\n        {\n            name:\"Arunachal Pradesh [AR]\",\n            cityList:[\n                \"Along\", \"Anini\", \"Anjaw\", \"Bameng\", \"Basar\", \"Changlang\", \"Chowkhem\", \"Daporizo\", \"Dibang Valley\", \"Dirang\", \"Hayuliang\", \"Huri\", \"Itanagar\", \"Jairampur\", \"Kalaktung\", \"Kameng\", \"Khonsa\", \"Kolaring\", \"Kurung Kumey\", \"Lohit\", \"Lower Dibang Valley\", \"Lower Subansiri\", \"Mariyang\", \"Mechuka\", \"Miao\", \"Nefra\", \"Pakkekesang\", \"Pangin\", \"Papum Pare\", \"Passighat\", \"Roing\", \"Sagalee\", \"Seppa\", \"Siang\", \"Tali\", \"Taliha\", \"Tawang\", \"Tezu\", \"Tirap\", \"Tuting\", \"Upper Siang\", \"Upper Subansiri\", \"Yiang Kiag\",\n            ]\n        },\n        {\n            name:\"Assam [AS]\",\n            cityList:[\n                \"Abhayapuri\", \"Baithalangshu\", \"Barama\", \"Barpeta Road\", \"Bihupuria\", \"Bijni\", \"Bilasipara\", \"Bokajan\", \"Bokakhat\", \"Boko\", \"Bongaigaon\", \"Cachar\", \"Cachar Hills\", \"Darrang\", \"Dhakuakhana\", \"Dhemaji\", \"Dhubri\", \"Dibrugarh\", \"Digboi\", \"Diphu\", \"Goalpara\", \"Gohpur\", \"Golaghat\", \"Guwahati\", \"Hailakandi\", \"Hajo\", \"Halflong\", \"Hojai\", \"Howraghat\", \"Jorhat\", \"Kamrup\", \"Karbi Anglong\", \"Karimganj\", \"Kokarajhar\", \"Kokrajhar\", \"Lakhimpur\", \"Maibong\", \"Majuli\", \"Mangaldoi\", \"Mariani\", \"Marigaon\", \"Moranhat\", \"Morigaon\", \"Nagaon\", \"Nalbari\", \"Rangapara\", \"Sadiya\", \"Sibsagar\", \"Silchar\", \"Sivasagar\", \"Sonitpur\", \"Tarabarihat\", \"Tezpur\", \"Tinsukia\", \"Udalgiri\", \"Udalguri\", \"UdarbondhBarpeta\", \n            ]\n        },\n        {\n            name:\"Bihar [BH]\",\n            cityList:[\n                \"Adhaura\", \"Amarpur\", \"Araria\", \"Areraj\", \"Arrah\", \"Arwal\", \"Aurangabad\", \"Bagaha\", \"Banka\", \"Banmankhi\", \"Barachakia\", \"Barauni\", \"Barh\", \"Barosi\", \"Begusarai\", \"Benipatti\", \"Benipur\", \"Bettiah\", \"Bhabhua\", \"Bhagalpur\", \"Bhojpur\", \"Bidupur\", \"Biharsharif\", \"Bikram\", \"Bikramganj\", \"Birpur\", \"Buxar\", \"Chakai\", \"Champaran\", \"Chapara\", \"Dalsinghsarai\", \"Danapur\", \"Darbhanga\", \"Daudnagar\", \"Dhaka\", \"Dhamdaha\", \"Dumraon\", \"Ekma\", \"Forbesganj\", \"Gaya\", \"Gogri\", \"Gopalganj\", \"H.Kharagpur\", \"Hajipur\", \"Hathua\", \"Hilsa\", \"Imamganj\", \"Jahanabad\", \"Jainagar\", \"Jamshedpur\", \"Jamui\", \"Jehanabad\", \"Jhajha\", \"Jhanjharpur\", \"Kahalgaon\", \"Kaimur (Bhabua)\", \"Katihar\", \"Katoria\", \"Khagaria\", \"Kishanganj\", \"Korha\", \"Lakhisarai\", \"Madhepura\", \"Madhubani\", \"Maharajganj\", \"Mahua\", \"Mairwa\", \"Mallehpur\", \"Masrakh\", \"Mohania\", \"Monghyr\", \"Motihari\", \"Motipur\", \"Munger\", \"Muzaffarpur\", \"Nabinagar\", \"Nalanda\", \"Narkatiaganj\", \"Naugachia\", \"Nawada\", \"Pakribarwan\", \"Pakridayal\", \"Patna\", \"Phulparas\", \"Piro\", \"Pupri\", \"Purena\", \"Purnia\", \"Rafiganj\", \"Rajauli\", \"Ramnagar\", \"Raniganj\", \"Raxaul\", \"Rohtas\", \"Rosera\", \"S.Bakhtiarpur\", \"Saharsa\", \"Samastipur\", \"Saran\", \"Sasaram\", \"Seikhpura\", \"Sheikhpura\", \"Sheohar\", \"Sherghati\", \"Sidhawalia\", \"Singhwara\", \"Sitamarhi\", \"Siwan\", \"Sonepur\", \"Supaul\", \"Thakurganj\", \"Triveniganj\", \"Udakishanganj\", \"Vaishali\", \"Wazirganj\",     \n            ]\n        },\n        {\n            name:\"Chandigarh [CH]\",\n            cityList:[\n                \"Chandigarh\", \"Mani Marja\", \n            ]\n        },\n        {\n            name:\"Chhattisgarh [CG]\",\n            cityList:[\n                \"Ambikapur\", \"Antagarh\", \"Arang\", \"Bacheli\", \"Bagbahera\", \"Bagicha\", \"Baikunthpur\", \"Balod\", \"Balodabazar\", \"Balrampur\", \"Barpalli\", \"Basana\", \"Bastanar\", \"Bastar\", \"Bderajpur\", \"Bemetara\", \"Berla\", \"Bhairongarh\", \"Bhanupratappur\", \"Bharathpur\", \"Bhatapara\", \"Bhilai\", \"Bhilaigarh\", \"Bhopalpatnam\", \"Bijapur\", \"Bilaspur\", \"Bodla\", \"Bokaband\", \"Chandipara\", \"Chhinagarh\", \"Chhuriakala\", \"Chingmut\", \"Chuikhadan\", \"Dabhara\", \"Dallirajhara\", \"Dantewada\", \"Deobhog\", \"Dhamda\", \"Dhamtari\", \"Dharamjaigarh\", \"Dongargarh\", \"Durg\", \"Durgakondal\", \"Fingeshwar\", \"Gariaband\", \"Garpa\", \"Gharghoda\", \"Gogunda\", \"Ilamidi\", \"Jagdalpur\", \"Janjgir\", \"Janjgir-Champa\", \"Jarwa\", \"Jashpur\", \"Jashpurnagar\", \"Kabirdham-Kawardha\", \"Kanker\", \"Kasdol\", \"Kathdol\", \"Kathghora\", \"Kawardha\", \"Keskal\", \"Khairgarh\", \"Kondagaon\", \"Konta\", \"Korba\", \"Korea\", \"Kota\", \"Koyelibeda\", \"Kuakunda\", \"Kunkuri\", \"Kurud\", \"Lohadigundah\", \"Lormi\", \"Luckwada\", \"Mahasamund\", \"Makodi\", \"Manendragarh\", \"Manpur\", \"Marwahi\", \"Mohla\", \"Mungeli\", \"Nagri\", \"Narainpur\", \"Narayanpur\", \"Neora\", \"Netanar\", \"Odgi\", \"Padamkot\", \"Pakhanjur\", \"Pali\", \"Pandaria\", \"Pandishankar\", \"Parasgaon\", \"Pasan\", \"Patan\", \"Pathalgaon\", \"Pendra\", \"Pratappur\", \"Premnagar\", \"Raigarh\", \"Raipur\", \"Rajnandgaon\", \"Rajpur\", \"Ramchandrapur\", \"Saraipali\", \"Saranggarh\", \"Sarona\", \"Semaria\", \"Shakti\", \"Sitapur\", \"Sukma\", \"Surajpur\", \"Surguja\", \"Tapkara\", \"Toynar\", \"Udaipur\", \"Uproda\", \"Wadrainagar\", \n            ]\n        },\n        {\n            name:\"Dadra & Nagar Haveli [DN]\",\n            cityList:[\n                \"Amal\", \"Amli\", \"Bedpa\", \"Chikhli\", \"Dadra & Nagar Haveli\", \"Dahikhed\", \"Dolara\", \"Galonda\", \"Kanadi\", \"Karchond\", \"Khadoli\", \"Kharadpada\", \"Kherabari\", \"Kherdi\", \"Kothar\", \"Luari\", \"Mashat\", \"Rakholi\", \"Rudana\", \"Saili\", \"Sili\", \"Silvassa\", \"Sindavni\", \"Udva\", \"Umbarkoi\", \"Vansda\", \"Vasona\", \"Velugam\", \n            ]\n        },\n        {\n            name:\"Daman & Diu [DD]\",\n            cityList:[\n                \"Brancavare\", \"Dagasi\", \"Daman\", \"Diu\", \"Magarvara\", \"Nagwa\", \"Pariali\", \"Passo Covo\",\n            ]\n        },\n        {\n            name:\"Delhi [DL]\",\n            cityList:[\n                \"Central Delhi\", \"East Delhi\", \"New Delhi\", \"North Delhi\", \"North East Delhi\", \"North West Delhi\", \"South Delhi\", \"South West Delhi\", \"West Delhi\", \n            ]\n        },\n        {\n            name:\"Goa [GO]\",\n            cityList:[\n                \"Canacona\", \"Candolim\", \"Chinchinim\", \"Cortalim\", \"Goa\", \"Jua\", \"Madgaon\", \"Mahem\", \"Mapuca\", \"Marmagao\", \"Panji\", \"Ponda\", \"Sanvordem\", \"Terekhol\", \n            ]\n        },\n        {\n            name:\"Gujarat [GU]\",\n            cityList:[\n                \"Ahmedabad\", \"Ahwa\", \"Amod\", \"Amreli\", \"Anand\", \"Anjar\", \"Ankaleshwar\", \"Babra\", \"Balasinor\", \"Banaskantha\", \"Bansada\", \"Bardoli\", \"Bareja\", \"Baroda\", \"Barwala\", \"Bayad\", \"Bhachav\", \"Bhanvad\", \"Bharuch\", \"Bhavnagar\", \"Bhiloda\", \"Bhuj\", \"Billimora\", \"Borsad\", \"Botad\", \"Chanasma\", \"Chhota Udaipur\", \"Chotila\", \"Dabhoi\", \"Dahod\", \"Damnagar\", \"Dang\", \"Danta\", \"Dasada\", \"Dediapada\", \"Deesa\", \"Dehgam\", \"Deodar\", \"Devgadhbaria\", \"Dhandhuka\", \"Dhanera\", \"Dharampur\", \"Dhari\", \"Dholka\", \"Dhoraji\", \"Dhrangadhra\", \"Dhrol\", \"Dwarka\", \"Fortsongadh\", \"Gadhada\", \"Gandhi Nagar\", \"Gariadhar\", \"Godhra\", \"Gogodar\", \"Gondal\", \"Halol\", \"Halvad\", \"Harij\", \"Himatnagar\", \"Idar\", \"Jambusar\", \"Jamjodhpur\", \"Jamkalyanpur\", \"Jamnagar\", \"Jasdan\", \"Jetpur\", \"Jhagadia\", \"Jhalod\", \"Jodia\", \"Junagadh\", \"Junagarh\", \"Kalawad\", \"Kalol\", \"Kapad Wanj\", \"Keshod\", \"Khambat\", \"Khambhalia\", \"Khavda\", \"Kheda\", \"Khedbrahma\", \"Kheralu\", \"Kodinar\", \"Kotdasanghani\", \"Kunkawav\", \"Kutch\", \"Kutchmandvi\", \"Kutiyana\", \"Lakhpat\", \"Lakhtar\", \"Lalpur\", \"Limbdi\", \"Limkheda\", \"Lunavada\", \"M.M.Mangrol\", \"Mahuva\", \"Malia-Hatina\", \"Maliya\", \"Malpur\", \"Manavadar\", \"Mandvi\", \"Mangrol\", \"Mehmedabad\", \"Mehsana\", \"Miyagam\", \"Modasa\", \"Morvi\", \"Muli\", \"Mundra\", \"Nadiad\", \"Nakhatrana\", \"Nalia\", \"Narmada\", \"Naswadi\", \"Navasari\", \"Nizar\", \"Okha\", \"Paddhari\", \"Padra\", \"Palanpur\", \"Palitana\", \"Panchmahals\", \"Patan\", \"Pavijetpur\", \"Porbandar\", \"Prantij\", \"Radhanpur\", \"Rahpar\", \"Rajaula\", \"Rajkot\", \"Rajpipla\", \"Ranavav\", \"Sabarkantha\", \"Sanand\", \"Sankheda\", \"Santalpur\", \"Santrampur\", \"Savarkundla\", \"Savli\", \"Sayan\", \"Sayla\", \"Shehra\", \"Sidhpur\", \"Sihor\", \"Sojitra\", \"Sumrasar\", \"Surat\", \"Surendranagar\", \"Talaja\", \"Thara\", \"Tharad\", \"Thasra\", \"Una-Diu\", \"Upleta\", \"Vadgam\", \"Vadodara\", \"Valia\", \"Vallabhipur\", \"Valod\", \"Valsad\", \"Vanthali\", \"Vapi\", \"Vav\", \"Veraval\", \"Vijapur\", \"Viramgam\", \"Visavadar\", \"Visnagar\", \"Vyara\", \"Waghodia\", \"Wankaner\", \n            ]\n        },\n        {\n            name:\"Haryana [HR]\",\n            cityList:[\n                \"Adampur Mandi\", \"Ambala\", \"Assandh\", \"Bahadurgarh\", \"Barara\", \"Barwala\", \"Bawal\", \"Bawanikhera\", \"Bhiwani\", \"Charkhidadri\", \"Cheeka\", \"Chhachrauli\", \"Dabwali\", \"Ellenabad\", \"Faridabad\", \"Fatehabad\", \"Ferojpur Jhirka\", \"Gharaunda\", \"Gohana\", \"Gurgaon\", \"Hansi\", \"Hisar\", \"Jagadhari\", \"Jatusana\", \"Jhajjar\", \"Jind\", \"Julana\", \"Kaithal\", \"Kalanaur\", \"Kalanwali\", \"Kalka\", \"Karnal\", \"Kosli\", \"Kurukshetra\", \"Loharu\", \"Mahendragarh\", \"Meham\", \"Mewat\", \"Mohindergarh\", \"Naraingarh\", \"Narnaul\", \"Narwana\", \"Nilokheri\", \"Nuh\", \"Palwal\", \"Panchkula\", \"Panipat\", \"Pehowa\", \"Ratia\", \"Rewari\", \"Rohtak\", \"Safidon\", \"Sirsa\", \"Siwani\", \"Sonipat\", \"Tohana\", \"Tohsam\", \"Yamunanagar\", \n            ]\n        },\n        {\n            name:\"Himachal Pradesh [HP]\",\n            cityList:[\n                \"Amb\", \"Arki\", \"Banjar\", \"Bharmour\", \"Bilaspur\", \"Chamba\", \"Churah\", \"Dalhousie\", \"Dehra Gopipur\", \"Hamirpur\", \"Jogindernagar\", \"Kalpa\", \"Kangra\", \"Kinnaur\", \"Kullu\", \"Lahaul\", \"Mandi\", \"Nahan\", \"Nalagarh\", \"Nirmand\", \"Nurpur\", \"Palampur\", \"Pangi\", \"Paonta\", \"Pooh\", \"Rajgarh\", \"Rampur Bushahar\", \"Rohru\", \"Shimla\", \"Sirmaur\", \"Solan\", \"Spiti\", \"Sundernagar\", \"Theog\", \"Udaipur\", \"Una\", \n            ]\n        },\n        {\n            name:\"Jammu & Kashmir [JK]\",\n            cityList:[\n                \"Akhnoor\", \"Anantnag\", \"Badgam\", \"Bandipur\", \"Baramulla\", \"Basholi\", \"Bedarwah\", \"Budgam\", \"Doda\", \"Gulmarg\", \"Jammu\", \"Kalakot\", \"Kargil\", \"Karnah\", \"Kathua\", \"Kishtwar\", \"Kulgam\", \"Kupwara\", \"Leh\", \"Mahore\", \"Nagrota\", \"Nobra\", \"Nowshera\", \"Nyoma\", \"Padam\", \"Pahalgam\", \"Patnitop\", \"Poonch\", \"Pulwama\", \"Rajouri\", \"Ramban\", \"Ramnagar\", \"Reasi\", \"Samba\", \"Srinagar\", \"Udhampur\", \"Vaishno Devi\", \n            ]\n        },\n        {\n            name:\"Jharkhand [JH]\",\n            cityList:[\n                \"Bagodar\", \"Baharagora\", \"Balumath\", \"Barhi\", \"Barkagaon\", \"Barwadih\", \"Basia\", \"Bermo\", \"Bhandaria\", \"Bhawanathpur\", \"Bishrampur\", \"Bokaro\", \"Bolwa\", \"Bundu\", \"Chaibasa\", \"Chainpur\", \"Chakardharpur\", \"Chandil\", \"Chatra\", \"Chavparan\", \"Daltonganj\", \"Deoghar\", \"Dhanbad\", \"Dumka\", \"Dumri\", \"Garhwa\", \"Garu\", \"Ghaghra\", \"Ghatsila\", \"Giridih\", \"Godda\", \"Gomia\", \"Govindpur\", \"Gumla\", \"Hazaribagh\", \"Hunterganj\", \"Ichak\", \"Itki\", \"Jagarnathpur\", \"Jamshedpur\", \"Jamtara\", \"Japla\", \"Jharmundi\", \"Jhinkpani\", \"Jhumaritalaiya\", \"Kathikund\", \"Kharsawa\", \"Khunti\", \"Koderma\", \"Kolebira\", \"Latehar\", \"Lohardaga\", \"Madhupur\", \"Mahagama\", \"Maheshpur Raj\", \"Mandar\", \"Mandu\", \"Manoharpur\", \"Muri\", \"Nagarutatri\", \"Nala\", \"Noamundi\", \"Pakur\", \"Palamu\", \"Palkot\", \"Patan\", \"Rajdhanwar\", \"Rajmahal\", \"Ramgarh\", \"Ranchi\", \"Sahibganj\", \"Saraikela\", \"Simaria\", \"Simdega\", \"Singhbhum\", \"Tisri\", \"Torpa\", \n            ]\n        },\n        {\n            name:\"Karnataka [KR]\",\n            cityList:[\n                \"Afzalpur\", \"Ainapur\", \"Aland\", \"Alur\", \"Anekal\", \"Ankola\", \"Arsikere\", \"Athani\", \"Aurad\", \"Bableshwar\", \"Badami\", \"Bagalkot\", \"Bagepalli\", \"Bailhongal\", \"Bangalore\", \"Bangalore Rural\", \"Bangarpet\", \"Bantwal\", \"Basavakalyan\", \"Basavanabagewadi\", \"Basavapatna\", \"Belgaum\", \"Bellary\", \"Belthangady\", \"Belur\", \"Bhadravati\", \"Bhalki\", \"Bhatkal\", \"Bidar\", \"Bijapur\", \"Biligi\", \"Chadchan\", \"Challakere\", \"Chamrajnagar\", \"Channagiri\", \"Channapatna\", \"Channarayapatna\", \"Chickmagalur\", \"Chikballapur\", \"Chikkaballapur\", \"Chikkanayakanahalli\", \"Chikkodi\", \"Chikmagalur\", \"Chincholi\", \"Chintamani\", \"Chitradurga\", \"Chittapur\", \"Cowdahalli\", \"Davanagere\", \"Deodurga\", \"Devangere\", \"Devarahippargi\", \"Dharwad\", \"Doddaballapur\", \"Gadag\", \"Gangavathi\", \"Gokak\", \"Gowribdanpur\", \"Gubbi\", \"Gulbarga\", \"Gundlupet\", \"H.B.Halli\", \"H.D. Kote\", \"Haliyal\", \"Hampi\", \"Hangal\", \"Harapanahalli\", \"Hassan\", \"Haveri\", \"Hebri\", \"Hirekerur\", \"Hiriyur\", \"Holalkere\", \"Holenarsipur\", \"Honnali\", \"Honnavar\", \"Hosadurga\", \"Hosakote\", \"Hosanagara\", \"Hospet\", \"Hubli\", \"Hukkeri\", \"Humnabad\", \"Hungund\", \"Hunsagi\", \"Hunsur\", \"Huvinahadagali\", \"Indi\", \"Jagalur\", \"Jamkhandi\", \"Jewargi\", \"Joida\", \"K.R. Nagar\", \"Kadur\", \"Kalghatagi\", \"Kamalapur\", \"Kanakapura\", \"Kannada\", \"Kargal\", \"Karkala\", \"Karwar\", \"Khanapur\", \"Kodagu\", \"Kolar\", \"Kollegal\", \"Koppa\", \"Koppal\", \"Koratageri\", \"Krishnarajapet\", \"Kudligi\", \"Kumta\", \"Kundapur\", \"Kundgol\", \"Kunigal\", \"Kurugodu\", \"Kustagi\", \"Lingsugur\", \"Madikeri\", \"Madugiri\", \"Malavalli\", \"Malur\", \"Mandya\", \"Mangalore\", \"Manipal\", \"Manvi\", \"Mashal\", \"Molkalmuru\", \"Mudalgi\", \"Muddebihal\", \"Mudhol\", \"Mudigere\", \"Mulbagal\", \"Mundagod\", \"Mundargi\", \"Murugod\", \"Mysore\", \"Nagamangala\", \"Nanjangud\", \"Nargund\", \"Narsimrajapur\", \"Navalgund\", \"Nelamangala\", \"Nimburga\", \"Pandavapura\", \"Pavagada\", \"Puttur\", \"Raibag\", \"Raichur\", \"Ramdurg\", \"Ranebennur\", \"Ron\", \"Sagar\", \"Sakleshpur\", \"Salkani\", \"Sandur\", \"Saundatti\", \"Savanur\", \"Sedam\", \"Shahapur\", \"Shankarnarayana\", \"Shikaripura\", \"Shimoga\", \"Shirahatti\", \"Shorapur\", \"Siddapur\", \"Sidlaghatta\", \"Sindagi\", \"Sindhanur\", \"Sira\", \"Sirsi\", \"Siruguppa\", \"Somwarpet\", \"Sorab\", \"Sringeri\", \"Sriniwaspur\", \"Srirangapatna\", \"Sullia\", \"T. Narsipur\", \"Tallak\", \"Tarikere\", \"Telgi\", \"Thirthahalli\", \"Tiptur\", \"Tumkur\", \"Turuvekere\", \"Udupi\", \"Virajpet\", \"Wadi\", \"Yadgiri\", \"Yelburga\", \"Yellapur\", \n            ]\n        },\n        {\n            name:\"Kerala [KL]\",\n            cityList:[\n                \"Adimaly\", \"Adoor\", \"Agathy\", \"Alappuzha\", \"Alathur\", \"Alleppey\", \"Alwaye\", \"Amini\", \"Androth\", \"Attingal\", \"Badagara\", \"Bitra\", \"Calicut\", \"Cannanore\", \"Chetlet\", \"Ernakulam\", \"Idukki\", \"Irinjalakuda\", \"Kadamath\", \"Kalpeni\", \"Kalpetta\", \"Kanhangad\", \"Kanjirapally\", \"Kannur\", \"Karungapally\", \"Kasargode\", \"Kavarathy\", \"Kiltan\", \"Kochi\", \"Koduvayur\", \"Kollam\", \"Kottayam\", \"Kovalam\", \"Kozhikode\", \"Kunnamkulam\", \"Malappuram\", \"Mananthodi\", \"Manjeri\", \"Mannarghat\", \"Mavelikkara\", \"Minicoy\", \"Munnar\", \"Muvattupuzha\", \"Nedumandad\", \"Nedumgandam\", \"Nilambur\", \"Palai\", \"Palakkad\", \"Palghat\", \"Pathaanamthitta\", \"Pathanamthitta\", \"Payyanur\", \"Peermedu\", \"Perinthalmanna\", \"Perumbavoor\", \"Punalur\", \"Quilon\", \"Ranni\", \"Shertallai\", \"Shoranur\", \"Taliparamba\", \"Tellicherry\", \"Thiruvananthapuram\", \"Thodupuzha\", \"Thrissur\", \"Tirur\", \"Tiruvalla\", \"Trichur\", \"Trivandrum\", \"Uppala\", \"Vadakkanchery\", \"Vikom\", \"Wayanad\", \n            ]\n        },\n        {\n            name:\"Lakshadweep [LD]\",\n            cityList:[\n                \"Agatti Island\", \"Bingaram Island\", \"Bitra Island\", \"Chetlat Island\", \"Kadmat Island\", \"Kalpeni Island\", \"Kavaratti Island\", \"Kiltan Island\", \"Lakshadweep Sea\", \"Minicoy Island\", \"North Island\", \"South Island\", \n            ]\n        },\n        {\n            name:\"Madhya Pradesh [MP]\",\n            cityList:[\n                \"Agar\", \"Ajaigarh\", \"Alirajpur\", \"Amarpatan\", \"Amarwada\", \"Ambah\", \"Anuppur\", \"Arone\", \"Ashoknagar\", \"Ashta\", \"Atner\", \"Babaichichli\", \"Badamalhera\", \"Badarwsas\", \"Badnagar\", \"Badnawar\", \"Badwani\", \"Bagli\", \"Baihar\", \"Balaghat\", \"Baldeogarh\", \"Baldi\", \"Bamori\", \"Banda\", \"Bandhavgarh\", \"Bareli\", \"Baroda\", \"Barwaha\", \"Barwani\", \"Batkakhapa\", \"Begamganj\", \"Beohari\", \"Berasia\", \"Berchha\", \"Betul\", \"Bhainsdehi\", \"Bhander\", \"Bhanpura\", \"Bhikangaon\", \"Bhimpur\", \"Bhind\", \"Bhitarwar\", \"Bhopal\", \"Biaora\", \"Bijadandi\", \"Bijawar\", \"Bijaypur\", \"Bina\", \"Birsa\", \"Birsinghpur\", \"Budhni\", \"Burhanpur\", \"Buxwaha\", \"Chachaura\", \"Chanderi\", \"Chaurai\", \"Chhapara\", \"Chhatarpur\", \"Chhindwara\", \"Chicholi\", \"Chitrangi\", \"Churhat\", \"Dabra\", \"Damoh\", \"Datia\", \"Deori\", \"Deosar\", \"Depalpur\", \"Dewas\", \"Dhar\", \"Dharampuri\", \"Dindori\", \"Gadarwara\", \"Gairatganj\", \"Ganjbasoda\", \"Garoth\", \"Ghansour\", \"Ghatia\", \"Ghatigaon\", \"Ghorandogri\", \"Ghughari\", \"Gogaon\", \"Gohad\", \"Goharganj\", \"Gopalganj\", \"Gotegaon\", \"Gourihar\", \"Guna\", \"Gunnore\", \"Gwalior\", \"Gyraspur\", \"Hanumana\", \"Harda\", \"Harrai\", \"Harsud\", \"Hatta\", \"Hoshangabad\", \"Ichhawar\", \"Indore\", \"Isagarh\", \"Itarsi\", \"Jabalpur\", \"Jabera\", \"Jagdalpur\", \"Jaisinghnagar\", \"Jaithari\", \"Jaitpur\", \"Jaitwara\", \"Jamai\", \"Jaora\", \"Jatara\", \"Jawad\", \"Jhabua\", \"Jobat\", \"Jora\", \"Kakaiya\", \"Kannod\", \"Kannodi\", \"Karanjia\", \"Kareli\", \"Karera\", \"Karhal\", \"Karpa\", \"Kasrawad\", \"Katangi\", \"Katni\", \"Keolari\", \"Khachrod\", \"Khajuraho\", \"Khakner\", \"Khalwa\", \"Khandwa\", \"Khaniadhana\", \"Khargone\", \"Khategaon\", \"Khetia\", \"Khilchipur\", \"Khirkiya\", \"Khurai\", \"Kolaras\", \"Kotma\", \"Kukshi\", \"Kundam\", \"Kurwai\", \"Kusmi\", \"Laher\", \"Lakhnadon\", \"Lamta\", \"Lanji\", \"Lateri\", \"Laundi\", \"Maheshwar\", \"Mahidpurcity\", \"Maihar\", \"Majhagwan\", \"Majholi\", \"Malhargarh\", \"Manasa\", \"Manawar\", \"Mandla\", \"Mandsaur\", \"Manpur\", \"Mauganj\", \"Mawai\", \"Mehgaon\", \"Mhow\", \"Morena\", \"Multai\", \"Mungaoli\", \"Nagod\", \"Nainpur\", \"Narsingarh\", \"Narsinghpur\", \"Narwar\", \"Nasrullaganj\", \"Nateran\", \"Neemuch\", \"Niwari\", \"Niwas\", \"Nowgaon\", \"Pachmarhi\", \"Pandhana\", \"Pandhurna\", \"Panna\", \"Parasia\", \"Patan\", \"Patera\", \"Patharia\", \"Pawai\", \"Petlawad\", \"Pichhore\", \"Piparia\", \"Pohari\", \"Prabhapattan\", \"Punasa\", \"Pushprajgarh\", \"Raghogarh\", \"Raghunathpur\", \"Rahatgarh\", \"Raisen\", \"Rajgarh\", \"Rajpur\", \"Ratlam\", \"Rehli\", \"Rewa\", \"Sabalgarh\", \"Sagar\", \"Sailana\", \"Sanwer\", \"Sarangpur\", \"Sardarpur\", \"Satna\", \"Saunsar\", \"Sehore\", \"Sendhwa\", \"Seondha\", \"Seoni\", \"Seonimalwa\", \"Shahdol\", \"Shahnagar\", \"Shahpur\", \"Shajapur\", \"Sheopur\", \"Sheopurkalan\", \"Shivpuri\", \"Shujalpur\", \"Sidhi\", \"Sihora\", \"Silwani\", \"Singrauli\", \"Sirmour\", \"Sironj\", \"Sitamau\", \"Sohagpur\", \"Sondhwa\", \"Sonkatch\", \"Susner\", \"Tamia\", \"Tarana\", \"Tendukheda\", \"Teonthar\", \"Thandla\", \"Tikamgarh\", \"Timarani\", \"Udaipura\", \"Ujjain\", \"Umaria\", \"Umariapan\", \"Vidisha\", \"Vijayraghogarh\", \"Waraseoni\", \"Zhirnia\", \n            ]\n        },\n        {\n            name:\"Maharashtra [MH]\",\n            cityList:[\n                \"Achalpur\", \"Aheri\", \"Ahmednagar\", \"Ahmedpur\", \"Ajara\", \"Akkalkot\", \"Akola\", \"Akole\", \"Akot\", \"Alibagh\", \"Amagaon\", \"Amalner\", \"Ambad\", \"Ambejogai\", \"Amravati\", \"Arjuni Merogaon\", \"Arvi\", \"Ashti\", \"Atpadi\", \"Aurangabad\", \"Ausa\", \"Babhulgaon\", \"Balapur\", \"Baramati\", \"Barshi Takli\", \"Barsi\", \"Basmatnagar\", \"Bassein\", \"Beed\", \"Bhadrawati\", \"Bhamregadh\", \"Bhandara\", \"Bhir\", \"Bhiwandi\", \"Bhiwapur\", \"Bhokar\", \"Bhokardan\", \"Bhoom\", \"Bhor\", \"Bhudargad\", \"Bhusawal\", \"Billoli\", \"Brahmapuri\", \"Buldhana\", \"Butibori\", \"Chalisgaon\", \"Chamorshi\", \"Chandgad\", \"Chandrapur\", \"Chandur\", \"Chanwad\", \"Chhikaldara\", \"Chikhali\", \"Chinchwad\", \"Chiplun\", \"Chopda\", \"Chumur\", \"Dahanu\", \"Dapoli\", \"Darwaha\", \"Daryapur\", \"Daund\", \"Degloor\", \"Delhi Tanda\", \"Deogad\", \"Deolgaonraja\", \"Deori\", \"Desaiganj\", \"Dhadgaon\", \"Dhanora\", \"Dharani\", \"Dhiwadi\", \"Dhule\", \"Dhulia\", \"Digras\", \"Dindori\", \"Edalabad\", \"Erandul\", \"Etapalli\", \"Gadhchiroli\", \"Gadhinglaj\", \"Gaganbavada\", \"Gangakhed\", \"Gangapur\", \"Gevrai\", \"Ghatanji\", \"Golegaon\", \"Gondia\", \"Gondpipri\", \"Goregaon\", \"Guhagar\", \"Hadgaon\", \"Hatkangale\", \"Hinganghat\", \"Hingoli\", \"Hingua\", \"Igatpuri\", \"Indapur\", \"Islampur\", \"Jalgaon\", \"Jalna\", \"Jamkhed\", \"Jamner\", \"Jath\", \"Jawahar\", \"Jintdor\", \"Junnar\", \"Kagal\", \"Kaij\", \"Kalamb\", \"Kalamnuri\", \"Kallam\", \"Kalmeshwar\", \"Kalwan\", \"Kalyan\", \"Kamptee\", \"Kandhar\", \"Kankavali\", \"Kannad\", \"Karad\", \"Karjat\", \"Karmala\", \"Katol\", \"Kavathemankal\", \"Kedgaon\", \"Khadakwasala\", \"Khamgaon\", \"Khed\", \"Khopoli\", \"Khultabad\", \"Kinwat\", \"Kolhapur\", \"Kopargaon\", \"Koregaon\", \"Kudal\", \"Kuhi\", \"Kurkheda\", \"Kusumba\", \"Lakhandur\", \"Langa\", \"Latur\", \"Lonar\", \"Lonavala\", \"Madangad\", \"Madha\", \"Mahabaleshwar\", \"Mahad\", \"Mahagaon\", \"Mahasala\", \"Mahaswad\", \"Malegaon\", \"Malgaon\", \"Malgund\", \"Malkapur\", \"Malsuras\", \"Malwan\", \"Mancher\", \"Mangalwedha\", \"Mangaon\", \"Mangrulpur\", \"Manjalegaon\", \"Manmad\", \"Maregaon\", \"Mehda\", \"Mekhar\", \"Mohadi\", \"Mohol\", \"Mokhada\", \"Morshi\", \"Mouda\", \"Mukhed\", \"Mul\", \"Mumbai\", \"Murbad\", \"Murtizapur\", \"Murud\", \"Nagbhir\", \"Nagpur\", \"Nahavara\", \"Nanded\", \"Nandgaon\", \"Nandnva\", \"Nandurbar\", \"Narkhed\", \"Nashik\", \"Navapur\", \"Ner\", \"Newasa\", \"Nilanga\", \"Niphad\", \"Omerga\", \"Osmanabad\", \"Pachora\", \"Paithan\", \"Palghar\", \"Pali\", \"Pandharkawada\", \"Pandharpur\", \"Panhala\", \"Paranda\", \"Parbhani\", \"Parner\", \"Parola\", \"Parseoni\", \"Partur\", \"Patan\", \"Pathardi\", \"Pathari\", \"Patoda\", \"Pauni\", \"Peint\", \"Pen\", \"Phaltan\", \"Pimpalner\", \"Pirangut\", \"Poladpur\", \"Pune\", \"Pusad\", \"Pusegaon\", \"Radhanagar\", \"Rahuri\", \"Raigad\", \"Rajapur\", \"Rajgurunagar\", \"Rajura\", \"Ralegaon\", \"Ramtek\", \"Ratnagiri\", \"Raver\", \"Risod\", \"Roha\", \"Sakarwadi\", \"Sakoli\", \"Sakri\", \"Salekasa\", \"Samudrapur\", \"Sangamner\", \"Sanganeshwar\", \"Sangli\", \"Sangola\", \"Sanguem\", \"Saoner\", \"Saswad\", \"Satana\", \"Satara\", \"Sawantwadi\", \"Seloo\", \"Shahada\", \"Shahapur\", \"Shahuwadi\", \"Shevgaon\", \"Shirala\", \"Shirol\", \"Shirpur\", \"Shirur\", \"Shirwal\", \"Sholapur\", \"Shri Rampur\", \"Shrigonda\", \"Shrivardhan\", \"Sillod\", \"Sinderwahi\", \"Sindhudurg\", \"Sindkheda\", \"Sindkhedaraja\", \"Sinnar\", \"Sironcha\", \"Soyegaon\", \"Surgena\", \"Talasari\", \"Talegaon S.Ji Pant\", \"Taloda\", \"Tasgaon\", \"Thane\", \"Tirora\", \"Tiwasa\", \"Trimbak\", \"Tuljapur\", \"Tumsar\", \"Udgir\", \"Umarkhed\", \"Umrane\", \"Umrer\", \"Urlikanchan\", \"Vaduj\", \"Velhe\", \"Vengurla\", \"Vijapur\", \"Vita\", \"Wada\", \"Wai\", \"Walchandnagar\", \"Wani\", \"Wardha\", \"Warlydwarud\", \"Warora\", \"Washim\", \"Wathar\", \"Yavatmal\", \"Yawal\", \"Yeola\", \"Yeotmal\", \n            ]\n        },\n        {\n            name:\"Manipur [MN]\",\n            cityList:[\n                \"Bishnupur\", \"Chakpikarong\", \"Chandel\", \"Chattrik\", \"Churachandpur\", \"Imphal\", \"Jiribam\", \"Kakching\", \"Kalapahar\", \"Mao\", \"Mulam\", \"Parbung\", \"Sadarhills\", \"Saibom\", \"Sempang\", \"Senapati\", \"Sochumer\", \"Taloulong\", \"Tamenglong\", \"Thinghat\", \"Thoubal\", \"Ukhrul\", \n            ]\n        },\n        {\n            name:\"Meghalaya [ML]\",\n            cityList:[\n                \"Amlaren\", \"Baghmara\", \"Cherrapunjee\", \"Dadengiri\", \"Garo Hills\", \"Jaintia Hills\", \"Jowai\", \"Khasi Hills\", \"Khliehriat\", \"Mariang\", \"Mawkyrwat\", \"Nongpoh\", \"Nongstoin\", \"Resubelpara\", \"Ri Bhoi\", \"Shillong\", \"Tura\", \"Williamnagar\", \n            ]\n        },\n        {\n            name:\"Mizoram [MM]\",\n            cityList:[\n                \"Aizawl\", \"Champhai\", \"Demagiri\", \"Kolasib\", \"Lawngtlai\", \"Lunglei\", \"Mamit\", \"Saiha\", \"Serchhip\",\n            ]\n        },\n        {\n            name:\"Nagaland [NL]\",\n            cityList:[\n                \"Dimapur\", \"Jalukie\", \"Kiphire\", \"Kohima\", \"Mokokchung\", \"Mon\", \"Phek\", \"Tuensang\", \"Wokha\", \"Zunheboto\",\n            ]\n        },\n        {\n            name:\"Orissa [OR]\",\n            cityList:[\n                \"Anandapur\", \"Angul\", \"Anugul\", \"Aska\", \"Athgarh\", \"Athmallik\", \"Attabira\", \"Bagdihi\", \"Balangir\", \"Balasore\", \"Baleswar\", \"Baliguda\", \"Balugaon\", \"Banaigarh\", \"Bangiriposi\", \"Barbil\", \"Bargarh\", \"Baripada\", \"Barkot\", \"Basta\", \"Berhampur\", \"Betanati\", \"Bhadrak\", \"Bhanjanagar\", \"Bhawanipatna\", \"Bhubaneswar\", \"Birmaharajpur\", \"Bisam Cuttack\", \"Boriguma\", \"Boudh\", \"Buguda\", \"Chandbali\", \"Chhatrapur\", \"Chhendipada\", \"Cuttack\", \"Daringbadi\", \"Daspalla\", \"Deodgarh\", \"Deogarh\", \"Dhanmandal\", \"Dharamgarh\", \"Dhenkanal\", \"Digapahandi\", \"Dunguripali\", \"G. Udayagiri\", \"Gajapati\", \"Ganjam\", \"Ghatgaon\", \"Gudari\", \"Gunupur\", \"Hemgiri\", \"Hindol\", \"Jagatsinghapur\", \"Jajpur\", \"Jamankira\", \"Jashipur\", \"Jayapatna\", \"Jeypur\", \"Jharigan\", \"Jharsuguda\", \"Jujumura\", \"Kalahandi\", \"Kalimela\", \"Kamakhyanagar\", \"Kandhamal\", \"Kantabhanji\", \"Kantamal\", \"Karanjia\", \"Kashipur\", \"Kendrapara\", \"Kendujhar\", \"Keonjhar\", \"Khalikote\", \"Khordha\", \"Khurda\", \"Komana\", \"Koraput\", \"Kotagarh\", \"Kuchinda\", \"Lahunipara\", \"Laxmipur\", \"M. Rampur\", \"Malkangiri\", \"Mathili\", \"Mayurbhanj\", \"Mohana\", \"Motu\", \"Nabarangapur\", \"Naktideul\", \"Nandapur\", \"Narlaroad\", \"Narsinghpur\", \"Nayagarh\", \"Nimapara\", \"Nowparatan\", \"Nowrangapur\", \"Nuapada\", \"Padampur\", \"Paikamal\", \"Palla Hara\", \"Papadhandi\", \"Parajang\", \"Pardip\", \"Parlakhemundi\", \"Patnagarh\", \"Pattamundai\", \"Phiringia\", \"Phulbani\", \"Puri\", \"Puruna Katak\", \"R. Udayigiri\", \"Rairakhol\", \"Rairangpur\", \"Rajgangpur\", \"Rajkhariar\", \"Rayagada\", \"Rourkela\", \"Sambalpur\", \"Sohela\", \"Sonapur\", \"Soro\", \"Subarnapur\", \"Sunabeda\", \"Sundergarh\", \"Surada\", \"T. Rampur\", \"Talcher\", \"Telkoi\", \"Titlagarh\", \"Tumudibandha\", \"Udala\", \"Umerkote\",\n            ]\n        },\n        {\n            name:\"Pondicherry [PC]\",\n            cityList:[\n                \"Bahur\", \"Karaikal\", \"Mahe\", \"Pondicherry\", \"Purnankuppam\", \"Valudavur\", \"Villianur\", \"Yanam\", \n            ]\n        },\n        {\n            name:\"Punjab [PJ]\",\n            cityList:[\n                \"Abohar\", \"Ajnala\", \"Amritsar\", \"Balachaur\", \"Barnala\", \"Batala\", \"Bathinda\", \"Chandigarh\", \"Dasua\", \"Dinanagar\", \"Faridkot\", \"Fatehgarh Sahib\", \"Fazilka\", \"Ferozepur\", \"Garhashanker\", \"Goindwal\", \"Gurdaspur\", \"Guruharsahai\", \"Hoshiarpur\", \"Jagraon\", \"Jalandhar\", \"Jugial\", \"Kapurthala\", \"Kharar\", \"Kotkapura\", \"Ludhiana\", \"Malaut\", \"Malerkotla\", \"Mansa\", \"Moga\", \"Muktasar\", \"Nabha\", \"Nakodar\", \"Nangal\", \"Nawanshahar\", \"Nawanshahr\", \"Pathankot\", \"Patiala\", \"Patti\", \"Phagwara\", \"Phillaur\", \"Phulmandi\", \"Quadian\", \"Rajpura\", \"Raman\", \"Rayya\", \"Ropar\", \"Rupnagar\", \"Samana\", \"Samrala\", \"Sangrur\", \"Sardulgarh\", \"Sarhind\", \"SAS Nagar\", \"Sultanpur Lodhi\", \"Sunam\", \"Tanda Urmar\", \"Taran Taran\", \"Zira\", \n            ]\n        },\n        {\n            name:\"Rajasthan [RJ]\",\n            cityList:[\n                \"Abu Road\", \"Ahore\", \"Ajmer\", \"Aklera\", \"Alwar\", \"Amber\", \"Amet\", \"Anupgarh\", \"Asind\", \"Aspur\", \"Atru\", \"Bagidora\", \"Bali\", \"Bamanwas\", \"Banera\", \"Bansur\", \"Banswara\", \"Baran\", \"Bari\", \"Barisadri\", \"Barmer\", \"Baseri\", \"Bassi\", \"Baswa\", \"Bayana\", \"Beawar\", \"Begun\", \"Behror\", \"Bhadra\", \"Bharatpur\", \"Bhilwara\", \"Bhim\", \"Bhinmal\", \"Bikaner\", \"Bilara\", \"Bundi\", \"Chhabra\", \"Chhipaborad\", \"Chirawa\", \"Chittorgarh\", \"Chohtan\", \"Churu\", \"Dantaramgarh\", \"Dausa\", \"Deedwana\", \"Deeg\", \"Degana\", \"Deogarh\", \"Deoli\", \"Desuri\", \"Dhariawad\", \"Dholpur\", \"Digod\", \"Dudu\", \"Dungarpur\", \"Dungla\", \"Fatehpur\", \"Gangapur\", \"Gangdhar\", \"Gerhi\", \"Ghatol\", \"Girwa\", \"Gogunda\", \"Hanumangarh\", \"Hindaun\", \"Hindoli\", \"Hurda\", \"Jahazpur\", \"Jaipur\", \"Jaisalmer\", \"Jalore\", \"Jhalawar\", \"Jhunjhunu\", \"Jodhpur\", \"Kaman\", \"Kapasan\", \"Karauli\", \"Kekri\", \"Keshoraipatan\", \"Khandar\", \"Kherwara\", \"Khetri\", \"Kishanganj\", \"Kishangarh\", \"Kishangarhbas\", \"Kolayat\", \"Kota\", \"Kotputli\", \"Kotra\", \"Kotri\", \"Kumbalgarh\", \"Kushalgarh\", \"Ladnun\", \"Ladpura\", \"Lalsot\", \"Laxmangarh\", \"Lunkaransar\", \"Mahuwa\", \"Malpura\", \"Malvi\", \"Mandal\", \"Mandalgarh\", \"Mandawar\", \"Mangrol\", \"Marwar-Jn\", \"Merta\", \"Nadbai\", \"Nagaur\", \"Nainwa\", \"Nasirabad\", \"Nathdwara\", \"Nawa\", \"Neem Ka Thana\", \"Newai\", \"Nimbahera\", \"Nohar\", \"Nokha\", \"Onli\", \"Osian\", \"Pachpadara\", \"Pachpahar\", \"Padampur\", \"Pali\", \"Parbatsar\", \"Phagi\", \"Phalodi\", \"Pilani\", \"Pindwara\", \"Pipalda\", \"Pirawa\", \"Pokaran\", \"Pratapgarh\", \"Raipur\", \"Raisinghnagar\", \"Rajgarh\", \"Rajsamand\", \"Ramganj Mandi\", \"Ramgarh\", \"Rashmi\", \"Ratangarh\", \"Reodar\", \"Rupbas\", \"Sadulshahar\", \"Sagwara\", \"Sahabad\", \"Salumber\", \"Sanchore\", \"Sangaria\", \"Sangod\", \"Sapotra\", \"Sarada\", \"Sardarshahar\", \"Sarwar\", \"Sawai Madhopur\", \"Shahapura\", \"Sheo\", \"Sheoganj\", \"Shergarh\", \"Sikar\", \"Sirohi\", \"Siwana\", \"Sojat\", \"Sri Dungargarh\", \"Sri Ganganagar\", \"Sri Karanpur\", \"Sri Madhopur\", \"Sujangarh\", \"Taranagar\", \"Thanaghazi\", \"Tibbi\", \"Tijara\", \"Todaraisingh\", \"Tonk\", \"Udaipur\", \"Udaipurwati\", \"Uniayara\", \"Vallabhnagar\", \"Viratnagar\", \n            ]\n        },\n        {\n            name:\"Sikkim [SK]\",\n            cityList:[\n                \"Barmiak\", \"Be\", \"Bhurtuk\", \"Chhubakha\", \"Chidam\", \"Chubha\", \"Chumikteng\", \"Dentam\", \"Dikchu\", \"Dzongri\", \"Gangtok\", \"Gauzing\", \"Gyalshing\", \"Hema\", \"Kerung\", \"Lachen\", \"Lachung\", \"Lema\", \"Lingtam\", \"Lungthu\", \"Mangan\", \"Namchi\", \"Namthang\", \"Nanga\", \"Nantang\", \"Naya Bazar\", \"Padamachen\", \"Pakhyong\", \"Pemayangtse\", \"Phensang\", \"Rangli\", \"Rinchingpong\", \"Sakyong\", \"Samdong\", \"Singtam\", \"Siniolchu\", \"Sombari\", \"Soreng\", \"Sosing\", \"Tekhug\", \"Temi\", \"Tsetang\", \"Tsomgo\", \"Tumlong\", \"Yangang\", \"Yumtang\", \n            ]\n        },\n        {\n            name:\"Tamil Nadu [TN]\",\n            cityList:[\n                \"Ambasamudram\", \"Anamali\", \"Arakandanallur\", \"Arantangi\", \"Aravakurichi\", \"Ariyalur\", \"Arkonam\", \"Arni\", \"Aruppukottai\", \"Attur\", \"Avanashi\", \"Batlagundu\", \"Bhavani\", \"Chengalpattu\", \"Chengam\", \"Chennai\", \"Chidambaram\", \"Chingleput\", \"Coimbatore\", \"Courtallam\", \"Cuddalore\", \"Cumbum\", \"Denkanikoitah\", \"Devakottai\", \"Dharampuram\", \"Dharmapuri\", \"Dindigul\", \"Erode\", \"Gingee\", \"Gobichettipalayam\", \"Gudalur\", \"Gudiyatham\", \"Harur\", \"Hosur\", \"Jayamkondan\", \"Kallkurichi\", \"Kanchipuram\", \"Kangayam\", \"Kanyakumari\", \"Karaikal\", \"Karaikudi\", \"Karur\", \"Keeranur\", \"Kodaikanal\", \"Kodumudi\", \"Kotagiri\", \"Kovilpatti\", \"Krishnagiri\", \"Kulithalai\", \"Kumbakonam\", \"Kuzhithurai\", \"Madurai\", \"Madurantgam\", \"Manamadurai\", \"Manaparai\", \"Mannargudi\", \"Mayiladuthurai\", \"Mayiladutjurai\", \"Mettupalayam\", \"Metturdam\", \"Mudukulathur\", \"Mulanur\", \"Musiri\", \"Nagapattinam\", \"Nagarcoil\", \"Namakkal\", \"Nanguneri\", \"Natham\", \"Neyveli\", \"Nilgiris\", \"Oddanchatram\", \"Omalpur\", \"Ootacamund\", \"Ooty\", \"Orathanad\", \"Palacode\", \"Palani\", \"Palladum\", \"Papanasam\", \"Paramakudi\", \"Pattukottai\", \"Perambalur\", \"Perundurai\", \"Pollachi\", \"Polur\", \"Pondicherry\", \"Ponnamaravathi\", \"Ponneri\", \"Pudukkottai\", \"Rajapalayam\", \"Ramanathapuram\", \"Rameshwaram\", \"Ranipet\", \"Rasipuram\", \"Salem\", \"Sankagiri\", \"Sankaran\", \"Sathiyamangalam\", \"Sivaganga\", \"Sivakasi\", \"Sriperumpudur\", \"Srivaikundam\", \"Tenkasi\", \"Thanjavur\", \"Theni\", \"Thirumanglam\", \"Thiruraipoondi\", \"Thoothukudi\", \"Thuraiyure\", \"Tindivanam\", \"Tiruchendur\", \"Tiruchengode\", \"Tiruchirappalli\", \"Tirunelvelli\", \"Tirupathur\", \"Tirupur\", \"Tiruttani\", \"Tiruvallur\", \"Tiruvannamalai\", \"Tiruvarur\", \"Tiruvellore\", \"Tiruvettipuram\", \"Trichy\", \"Tuticorin\", \"Udumalpet\", \"Ulundurpet\", \"Usiliampatti\", \"Uthangarai\", \"Valapady\", \"Valliyoor\", \"Vaniyambadi\", \"Vedasandur\", \"Vellore\", \"Velur\", \"Vilathikulam\", \"Villupuram\", \"Virudhachalam\", \"Virudhunagar\", \"Wandiwash\", \"Yercaud\", \n            ]\n        },\n        {\n            name:\"Tripura [TR]\",\n            cityList:[\n                \"Agartala\", \"Ambasa\", \"Bampurbari\", \"Belonia\", \"Dhalai\", \"Dharam Nagar\", \"Kailashahar\", \"Kamal Krishnabari\", \"Khopaiyapara\", \"Khowai\", \"Phuldungsei\", \"Radha Kishore Pur\", \"Tripura\", \n            ]\n        },\n        {\n            name:\"Uttar Pradesh [UP]\",\n            cityList:[\n                \"Achhnera\", \"Agra\", \"Akbarpur\", \"Aliganj\", \"Aligarh\", \"Allahabad\", \"Ambedkar Nagar\", \"Amethi\", \"Amiliya\", \"Amroha\", \"Anola\", \"Atrauli\", \"Auraiya\", \"Azamgarh\", \"Baberu\", \"Badaun\", \"Baghpat\", \"Bagpat\", \"Baheri\", \"Bahraich\", \"Ballia\", \"Balrampur\", \"Banda\", \"Bansdeeh\", \"Bansgaon\", \"Bansi\", \"Barabanki\", \"Bareilly\", \"Basti\", \"Bhadohi\", \"Bharthana\", \"Bharwari\", \"Bhogaon\", \"Bhognipur\", \"Bidhuna\", \"Bijnore\", \"Bikapur\", \"Bilari\", \"Bilgram\", \"Bilhaur\", \"Bindki\", \"Bisalpur\", \"Bisauli\", \"Biswan\", \"Budaun\", \"Budhana\", \"Bulandshahar\", \"Bulandshahr\", \"Capianganj\", \"Chakia\", \"Chandauli\", \"Charkhari\", \"Chhata\", \"Chhibramau\", \"Chirgaon\", \"Chitrakoot\", \"Chunur\", \"Dadri\", \"Dalmau\", \"Dataganj\", \"Debai\", \"Deoband\", \"Deoria\", \"Derapur\", \"Dhampur\", \"Domariyaganj\", \"Dudhi\", \"Etah\", \"Etawah\", \"Faizabad\", \"Farrukhabad\", \"Fatehpur\", \"Firozabad\", \"Garauth\", \"Garhmukteshwar\", \"Gautam Buddha Nagar\", \"Ghatampur\", \"Ghaziabad\", \"Ghazipur\", \"Ghosi\", \"Gonda\", \"Gorakhpur\", \"Gunnaur\", \"Haidergarh\", \"Hamirpur\", \"Hapur\", \"Hardoi\", \"Harraiya\", \"Hasanganj\", \"Hasanpur\", \"Hathras\", \"Jalalabad\", \"Jalaun\", \"Jalesar\", \"Jansath\", \"Jarar\", \"Jasrana\", \"Jaunpur\", \"Jhansi\", \"Jyotiba Phule Nagar\", \"Kadipur\", \"Kaimganj\", \"Kairana\", \"Kaisarganj\", \"Kalpi\", \"Kannauj\", \"Kanpur\", \"Karchhana\", \"Karhal\", \"Karvi\", \"Kasganj\", \"Kaushambi\", \"Kerakat\", \"Khaga\", \"Khair\", \"Khalilabad\", \"Kheri\", \"Konch\", \"Kumaon\", \"Kunda\", \"Kushinagar\", \"Lalganj\", \"Lalitpur\", \"Lucknow\", \"Machlishahar\", \"Maharajganj\", \"Mahoba\", \"Mainpuri\", \"Malihabad\", \"Mariyahu\", \"Math\", \"Mathura\", \"Mau\", \"Maudaha\", \"Maunathbhanjan\", \"Mauranipur\", \"Mawana\", \"Meerut\", \"Mehraun\", \"Meja\", \"Mirzapur\", \"Misrikh\", \"Modinagar\", \"Mohamdabad\", \"Mohamdi\", \"Moradabad\", \"Musafirkhana\", \"Muzaffarnagar\", \"Nagina\", \"Najibabad\", \"Nakur\", \"Nanpara\", \"Naraini\", \"Naugarh\", \"Nawabganj\", \"Nighasan\", \"Noida\", \"Orai\", \"Padrauna\", \"Pahasu\", \"Patti\", \"Pharenda\", \"Phoolpur\", \"Phulpur\", \"Pilibhit\", \"Pitamberpur\", \"Powayan\", \"Pratapgarh\", \"Puranpur\", \"Purwa\", \"Raibareli\", \"Rampur\", \"Ramsanehi Ghat\", \"Rasara\", \"Rath\", \"Robertsganj\", \"Sadabad\", \"Safipur\", \"Sagri\", \"Saharanpur\", \"Sahaswan\", \"Sahjahanpur\", \"Saidpur\", \"Salempur\", \"Salon\", \"Sambhal\", \"Sandila\", \"Sant Kabir Nagar\", \"Sant Ravidas Nagar\", \"Sardhana\", \"Shahabad\", \"Shahganj\", \"Shahjahanpur\", \"Shikohabad\", \"Shravasti\", \"Siddharthnagar\", \"Sidhauli\", \"Sikandra Rao\", \"Sikandrabad\", \"Sitapur\", \"Siyana\", \"Sonbhadra\", \"Soraon\", \"Sultanpur\", \"Tanda\", \"Tarabganj\", \"Tilhar\", \"Unnao\", \"Utraula\", \"Varanasi\", \"Zamania\", \n            ]\n        },\n        {\n            name:\"Uttaranchal [UT]\",\n            cityList:[\n                \"Almora\", \"Bageshwar\", \"Bhatwari\", \"Chakrata\", \"Chamoli\", \"Champawat\", \"Dehradun\", \"Deoprayag\", \"Dharchula\", \"Dunda\", \"Haldwani\", \"Haridwar\", \"Joshimath\", \"Karan Prayag\", \"Kashipur\", \"Khatima\", \"Kichha\", \"Lansdown\", \"Munsiari\", \"Mussoorie\", \"Nainital\", \"Pantnagar\", \"Partapnagar\", \"Pauri Garhwal\", \"Pithoragarh\", \"Purola\", \"Rajgarh\", \"Ranikhet\", \"Roorkee\", \"Rudraprayag\", \"Tehri Garhwal\", \"Udham Singh Nagar\", \"Ukhimath\", \"Uttarkashi\", \n            ]\n        },\n        {\n            name:\"West Bengal [WB]\",\n            cityList:[\n                \"Adra\", \"Alipurduar\", \"Amlagora\", \"Arambagh\", \"Asansol\", \"Balurghat\", \"Bankura\", \"Bardhaman\", \"Basirhat\", \"Berhampur\", \"Bethuadahari\", \"Birbhum\", \"Birpara\", \"Bishanpur\", \"Bolpur\", \"Bongoan\", \"Bulbulchandi\", \"Burdwan\", \"Calcutta\", \"Canning\", \"Champadanga\", \"Contai\", \"Cooch Behar\", \"Daimond Harbour\", \"Dalkhola\", \"Dantan\", \"Darjeeling\", \"Dhaniakhali\", \"Dhuliyan\", \"Dinajpur\", \"Dinhata\", \"Durgapur\", \"Gangajalghati\", \"Gangarampur\", \"Ghatal\", \"Guskara\", \"Habra\", \"Haldia\", \"Harirampur\", \"Harishchandrapur\", \"Hooghly\", \"Howrah\", \"Islampur\", \"Jagatballavpur\", \"Jalpaiguri\", \"Jhalda\", \"Jhargram\", \"Kakdwip\", \"Kalchini\", \"Kalimpong\", \"Kalna\", \"Kandi\", \"Karimpur\", \"Katwa\", \"Kharagpur\", \"Khatra\", \"Krishnanagar\", \"Mal Bazar\", \"Malda\", \"Manbazar\", \"Mathabhanga\", \"Medinipur\", \"Mekhliganj\", \"Mirzapur\", \"Murshidabad\", \"Nadia\", \"Nagarakata\", \"Nalhati\", \"Nayagarh\", \"Parganas\", \"Purulia\", \"Raiganj\", \"Rampur Hat\", \"Ranaghat\", \"Seharabazar\", \"Siliguri\", \"Suri\", \"Takipur\", \"Tamluk\", \n            ]\n        },\n        // {\n        //     name:\"\",\n        //     cityList:[\n\n        //     ]\n        // },\n        \n    ];\n    if(!sname) return [];\n    console.log(sname);\n    //return statelist[0].cityList;\n    return statelist.filter(c => !c.name.localeCompare(sname))[0].cityList;\n}\n","import React, { Component } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { getStateName, getStateWiseCity } from \"../../utils/auth\";\nimport { customerRegister } from \"../../services/userService\";\n\nconst useStyles = (theme) => ({\n    paper: {\n        marginTop: theme.spacing(3),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        borderStyles: \"solid\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\nclass CustomerRegistration extends Component {\n    state = {\n        data: {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            phoneNumber: \"\",\n            streetName: \"\",\n            cityName: \"\",\n            zipCode: \"\",\n            country: \"India\",\n            stateName: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n        },\n        error: {},\n    };\n\n    formData = {\n        states: getStateName(),\n        cityList: getStateWiseCity(this.state.stateName),\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        let data = { ...this.state.data };\n        data[input.name] = input.value;\n        this.setState({ data });\n    };\n\n    handleSelect = ({ target: { name, value } }) => {\n        let data = { ...this.state.data };\n        data[name] = value;\n        this.setState({ data });\n    };\n\n    handleState = ({ target: { name, value } }) => {\n        let data = { ...this.state.data };\n        data[name] = value;\n        data.cityName = \"\";\n        this.setState({ data });\n    };\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(\"Registered\", this.state);\n\n        // this.props.auth(\"customerLogged\");\n        // this.props.onSuccess(\"/customer\");\n\n        try {\n            const response = await customerRegister(this.state.data);\n            console.log(response);\n            alert(\n                \"SignedUp Successfully. Check your email to verify and Signin .\"\n            );\n            window.location = \"/\";\n        } catch (ex) {\n            if (ex.response) {\n                const error = { ...ex.response.data };\n                console.log(\"error\", ex.response);\n                this.setState({ error });\n            }\n        }\n    };\n\n    handleHidden = () => {\n        return this.props.tabValue !== this.props.index;\n    };\n\n    handleSignin = () => {\n        this.props.onSuccess(\"/signin\");\n    };\n\n    render() {\n        console.log(this.state.data);\n        const { classes } = this.props;\n        const { states: statesList, cityList } = this.formData;\n        const { error } = this.state;\n        return (\n            <form\n                className={classes.form}\n                noValidate\n                onSubmit={this.handleSubmit}\n                hidden={this.props.tabValue !== this.props.index}\n            >\n                <Grid container spacing={2}>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Name and Contact Details\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name=\"firstName\"\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"firstName\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                    error={error && error.firstName}\n                                    helperText={error && error.firstName}\n                                    onChange={this.handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"lastName\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    onChange={this.handleChange}\n                                    error={error && error.lastName}\n                                    helperText={error && error.lastName}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name=\"email\"\n                                    variant=\"filled\"\n                                    type=\"email\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Complete Email Address\"\n                                    onChange={this.handleChange}\n                                    error={error && error.email}\n                                    helperText={error && error.email}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"phoneNumber\"\n                                    label=\"Contact Number\"\n                                    name=\"phoneNumber\"\n                                    onChange={this.handleChange}\n                                    error={error && error.phoneNumber}\n                                    helperText={error && error.phoneNumber}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Address\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={4}>\n                                <FormControl\n                                    variant=\"filled\"\n                                    fullWidth\n                                    className={classes.formControl}\n                                >\n                                    <InputLabel id=\"demo-simple-select-filled-label\">\n                                        State\n                                    </InputLabel>\n                                    <Select\n                                        name=\"stateName\"\n                                        labelId=\"demo-simple-select-filled-label\"\n                                        id=\"demo-simple-select-filled\"\n                                        value={this.state.data.stateName}\n                                        onChange={this.handleState}\n                                    >\n                                        <MenuItem value=\"\">\n                                            <em>Choose...</em>\n                                        </MenuItem>\n                                        {statesList.map((state, i) => (\n                                            <MenuItem key={i} value={state}>\n                                                {state}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} sm={4}>\n                                <FormControl\n                                    variant=\"filled\"\n                                    fullWidth\n                                    className={classes.formControl}\n                                >\n                                    <InputLabel id=\"demo-simple-select-filled-label\">\n                                        City\n                                    </InputLabel>\n                                    <Select\n                                        name=\"cityName\"\n                                        labelId=\"demo-simple-select-filled-label\"\n                                        id=\"demo-simple-select-filled\"\n                                        value={this.state.data.cityName}\n                                        onChange={this.handleSelect}\n                                    >\n                                        <MenuItem value=\"\">\n                                            <em>Choose...</em>\n                                        </MenuItem>\n                                        {getStateWiseCity(\n                                            this.state.data.stateName\n                                        ).map((city, i) => (\n                                            <MenuItem key={i} value={city}>\n                                                {city}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} sm={4}>\n                                <TextField\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"country\"\n                                    label=\"Country\"\n                                    name=\"country\"\n                                    defaultValue=\"India\"\n                                    //onChange={this.handleChange}\n                                    InputProps={{\n                                        readOnly: true,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"zipCode\"\n                                    label=\"Zip Code\"\n                                    name=\"zipCode\"\n                                    onChange={this.handleChange}\n                                    error={error && error.address}\n                                    helperText={error && error.address}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"streetName\"\n                                    label=\"Street Name\"\n                                    name=\"streetName\"\n                                    onChange={this.handleChange}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Password\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    onChange={this.handleChange}\n                                    error={error && error.password}\n                                    helperText={error && error.password}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"confirmPassword\"\n                                    label=\"Confirm Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    onChange={this.handleChange}\n                                    error={error && error.confirmPassword}\n                                    helperText={error && error.confirmPassword}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    value=\"allowExtraEmails\"\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                        />\n                    </Grid>\n                </Grid>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                >\n                    Sign Up\n                </Button>\n                <Grid container justify=\"flex-end\">\n                    <Grid item onClick={this.handleSignin}>\n                        <Link style={{ cursor: \"pointer\" }} variant=\"body2\">\n                            Already have an account? Sign in\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(CustomerRegistration);\n","import React, { Component } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { getStateName, getStateWiseCity } from \"../../utils/auth\";\nimport { ShopRegister } from \"../../services/userService\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Input from \"@material-ui/core/Input\";\n\nconst useStyles = (theme) => ({\n    paper: {\n        marginTop: theme.spacing(3),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        borderStyles: \"solid\",\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        width: \"100%\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    chips: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    chip: {\n        margin: 2,\n    },\n    root: {\n        padding: \"2px 4px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        width: \"100%\",\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n});\n\nclass ShopOwnerRegistration extends Component {\n    state = {\n        data: {\n            firstName: \"\",\n            lastName: \"\",\n            shopName: \"\",\n            email: \"\",\n            phoneNumber: \"\",\n            address:\"\",\n            password: \"\",\n            confirmPassword: \"\",\n            openingHour: 0,\n            openingMinute: 0,\n            closingHour: 0,\n            closingMinute: 0,\n            tags: [],\n            bookingTimeUnit: \"\",\n            maxConcurrent: 0,\n            payment_modes: [],\n            discount: 0,\n        },\n        error: {},\n    };\n\n    formData = {\n        states: getStateName(),\n        cityList: getStateWiseCity(this.state.stateName),\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        let data = { ...this.state.data };\n        data[input.name] = input.value;\n        this.setState({ data });\n    };\n\n    handleNumberChange = ({ currentTarget: input }) => {\n        let data = { ...this.state.data };\n        data[input.name] = parseInt(input.value);\n        this.setState({ data });\n    };\n\n    handleSelect = ({ target: { name, value } }) => {\n        let data = { ...this.state.data };\n        data[name] = value;\n        this.setState({ data });\n    };\n\n    updateLocation = (addr) => {\n        let data = { ...this.state.data };\n        data[\"address\"] = addr.description;\n        this.setState({ data });\n        localStorage.setItem(\"userAddress\", addr.description);\n    };\n\n    handleMultipleSelect = (event) => {};\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(\"Registered\", this.state);\n\n        try {\n            const response = await ShopRegister(this.state.data);\n            console.log(response);\n            alert(\n                \"SignedUp Successfully. Check your email to verify and Signin .\"\n            );\n            window.location = \"/\";\n        } catch (ex) {\n            if (ex.response) {\n                if (ex.response.status == 500) {\n                    alert(ex.response.data);\n                } else {\n                    const error = { ...ex.response.data };\n                    this.setState({ error });\n                }\n                console.log(\"error\", ex.response);\n            }\n        }\n    };\n\n    // handleSubmit = (e) => {\n    //   e.preventDefault();\n    //   console.log(\"Registered\", this.state);\n    //   this.props.onSuccess(\"/shopowner\");\n    //   this.props.auth(\"shopOwnerLogged\");\n    // };\n\n    handleHidden = () => {\n        return this.props.tabValue !== this.props.index;\n    };\n\n    handleSignin = () => {\n        this.props.onSuccess(\"/signin\");\n    };\n\n    render() {\n        console.log(this.state.data);\n\n        const { classes } = this.props;\n        const { states: statesList, cityList } = this.formData;\n        const { error } = this.state;\n        return (\n            <form\n                className={classes.form}\n                noValidate\n                onSubmit={this.handleSubmit}\n                hidden={this.props.tabValue !== this.props.index}\n            >\n                <Grid container spacing={2}>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <TextField\n                            name=\"shopName\"\n                            variant=\"filled\"\n                            required\n                            fullWidth\n                            id=\"shopName\"\n                            label=\"Shop Name\"\n                            autoFocus\n                            error={error && error.shopName}\n                            helperText={error && error.shopName}\n                            onChange={this.handleChange}\n                        />\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Name and Contact Details\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name=\"firstName\"\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"firstName\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                    error={error && error.ownerName}\n                                    helperText={error && error.ownerName}\n                                    onChange={this.handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"lastName\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    onChange={this.handleChange}\n                                    error={error && error.ownerName}\n                                    helperText={error && error.ownerName}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name=\"email\"\n                                    variant=\"filled\"\n                                    type=\"email\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Complete Email Address\"\n                                    onChange={this.handleChange}\n                                    error={error && error.email}\n                                    helperText={error && error.email}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                    id=\"phoneNumber\"\n                                    label=\"Contact Number\"\n                                    name=\"phoneNumber\"\n                                    onChange={this.handleChange}\n                                    error={error && error.phoneNumber}\n                                    helperText={error && error.phoneNumber}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Address\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <Paper\n                                    component=\"form\"\n                                    className={classes.root}\n                                >\n                                    <IconButton\n                                        type=\"submit\"\n                                        className={classes.iconButton}\n                                        aria-label=\"search\"\n                                    >\n                                        <SearchIcon />\n                                    </IconButton>\n                                    <GooglePlacesAutocomplete\n                                        onSelect={this.updateLocation}\n                                    />\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Opening Time And Closing Time(Please use 24Hr\n                            format)\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={6} sm={3}>\n                                <TextField\n                                    name=\"openingHour\"\n                                    variant=\"filled\"\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            max: 24,\n                                            min: 0,\n                                        },\n                                    }}\n                                    fullWidth\n                                    id=\"openingHour\"\n                                    label=\"Opening Hour\"\n                                    error={error && error.openingHour}\n                                    helperText={error && error.openingHour}\n                                    onChange={this.handleNumberChange}\n                                />\n                            </Grid>\n                            <Grid item xs={6} sm={3}>\n                                <TextField\n                                    name=\"openingMinute\"\n                                    variant=\"filled\"\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            max: 60,\n                                            min: 0,\n                                        },\n                                    }}\n                                    fullWidth\n                                    id=\"openingMinute\"\n                                    label=\"Opening Minute\"\n                                    error={error && error.openingMinute}\n                                    helperText={error && error.openingMinute}\n                                    onChange={this.handleNumberChange}\n                                />\n                            </Grid>\n                            <Grid item xs={6} sm={3}>\n                                <TextField\n                                    name=\"closingHour\"\n                                    variant=\"filled\"\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            max: 24,\n                                            min: 0,\n                                        },\n                                    }}\n                                    fullWidth\n                                    id=\"closingHour\"\n                                    label=\"Closing Hour\"\n                                    error={error && error.closingHour}\n                                    helperText={error && error.closingHour}\n                                    onChange={this.handleNumberChange}\n                                />\n                            </Grid>\n                            <Grid item xs={6} sm={3}>\n                                <TextField\n                                    name=\"closingMinute\"\n                                    variant=\"filled\"\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            max: 60,\n                                            min: 0,\n                                        },\n                                    }}\n                                    fullWidth\n                                    id=\"closingMinute\"\n                                    label=\"Cloosing Minute\"\n                                    error={error && error.closingMinute}\n                                    helperText={error && error.closingMinute}\n                                    onChange={this.handleNumberChange}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Discount And Times given to Customer per each Item\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name=\"bookingTimeUnit\"\n                                    variant=\"filled\"\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            min: 0,\n                                        },\n                                    }}\n                                    fullWidth\n                                    id=\"bookingTimeUnit\"\n                                    label=\"Average Times given for Five items(In Minutes)\"\n                                    error={error && error.bookingTimeUnit}\n                                    helperText={error && error.bookingTimeUnit}\n                                    onChange={this.handleNumberChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name=\"discount\"\n                                    variant=\"filled\"\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            min: 0,\n                                        },\n                                    }}\n                                    fullWidth\n                                    id=\"discount\"\n                                    label=\"Discount\"\n                                    error={error && error.discount}\n                                    helperText={error && error.discount}\n                                    onChange={this.handleNumberChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    name=\"maxConcurrent\"\n                                    variant=\"filled\"\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            min: 0,\n                                        },\n                                    }}\n                                    fullWidth\n                                    id=\"maxConcurrent\"\n                                    label=\"Max Customer Accomodetion\"\n                                    error={error && error.maxConcurrent}\n                                    helperText={error && error.maxConcurrent}\n                                    onChange={this.handleNumberChange}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Items Type And Payments Method Avaialable\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={6}>\n                                <MultipleSelect\n                                    selectedItems={\n                                        this.state.data.payment_modes\n                                    }\n                                    handleChange={this.handleSelect}\n                                    classes={classes}\n                                    name=\"payment_modes\"\n                                    label=\"Accepted Payment Modes\"\n                                    theme={this.props.theme}\n                                    items={[\n                                        \"Cards\",\n                                        \"Cash\",\n                                        \"Gpay\",\n                                        \"Digital Wallets\",\n                                        \"UPI\",\n                                        \"Other Methods\",\n                                    ]}\n                                />\n                                <Typography\n                                    variant=\"caption\"\n                                    display=\"block\"\n                                    style={{ color: \"red\" }}\n                                >\n                                    {error && error.payment_modes}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <MultipleSelect\n                                    selectedItems={this.state.data.tags}\n                                    handleChange={this.handleSelect}\n                                    classes={classes}\n                                    name=\"tags\"\n                                    label=\"Type of Items Available\"\n                                    theme={this.props.theme}\n                                    items={[\n                                        \"Meat & Fish\",\n                                        \"Grocery\",\n                                        \"Condiments(Spices)\",\n                                        \"Grains and Bread\",\n                                        \"Dairy & Eggs\",\n                                        \"Oil & Fat\",\n                                        \"Tinned & Dried Produce\",\n                                        \"Electronics\",\n                                    ]}\n                                />\n                                <Typography\n                                    variant=\"caption\"\n                                    display=\"block\"\n                                    style={{ color: \"red\" }}\n                                >\n                                    {error && error.tags}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderColor=\"primary.main\"\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        m={1}\n                        p={2}\n                        style={{ width: \"100%\" }}\n                    >\n                        <Typography variant=\"caption\" display=\"block\">\n                            Password\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    onChange={this.handleChange}\n                                    error={error && error.password}\n                                    helperText={error && error.password}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"confirmPassword\"\n                                    label=\"Confirm Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    onChange={this.handleChange}\n                                    error={error && error.confirmPassword}\n                                    helperText={error && error.confirmPassword}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    value=\"allowExtraEmails\"\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                        />\n                    </Grid>\n                </Grid>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                >\n                    Sign Up\n                </Button>\n                <Grid container justify=\"flex-end\">\n                    <Grid item onClick={this.handleSignin}>\n                        <Link style={{ cursor: \"pointer\" }} variant=\"body2\">\n                            Already have an account? Sign in\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        );\n    }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(\n    ShopOwnerRegistration\n);\n\nclass MultipleSelect extends Component {\n    state = {\n        items: this.props.items,\n    };\n\n    getStyles = (item, selectedItems, theme) => {\n        return {\n            fontWeight:\n                selectedItems.indexOf(item) === -1\n                    ? theme.typography.fontWeightRegular\n                    : theme.typography.fontWeightMedium,\n        };\n    };\n\n    MenuProps = {\n        PaperProps: {\n            style: {\n                maxHeight: 224,\n                width: 250,\n            },\n        },\n    };\n\n    render() {\n        const {\n            selectedItems,\n            handleChange,\n            classes,\n            theme,\n            name,\n            label,\n        } = this.props;\n\n        return (\n            <FormControl className={classes.formControl} variant=\"filled\">\n                <InputLabel id=\"demo-mutiple-chip-label\">{label}</InputLabel>\n                <Select\n                    labelId=\"demo-mutiple-chip-label\"\n                    id=\"demo-mutiple-chip\"\n                    multiple\n                    name={name}\n                    value={selectedItems}\n                    onChange={handleChange}\n                    input={<Input id=\"select-multiple-chip\" />}\n                    renderValue={(selected) => (\n                        <div className={classes.chips}>\n                            {selected.map((value) => (\n                                <Chip\n                                    key={value}\n                                    label={value}\n                                    color=\"primary\"\n                                    className={classes.chip}\n                                />\n                            ))}\n                        </div>\n                    )}\n                    MenuProps={this.MenuProps}\n                >\n                    {this.props.items.map((item, i) => (\n                        <MenuItem\n                            key={item}\n                            value={item}\n                            style={this.getStyles(item, selectedItems, theme)}\n                        >\n                            {item}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n        );\n    }\n}\n","import React,{Component} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport CustomerRegistration from './CustomerRegistration';\nimport ShopOwnerRegistration from './ShopOwnerRegistration';\nimport { withRouter } from 'react-router-dom';\n\n\nconst useStyles =(theme) => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    borderStyles:\"solid\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n});\n\n\nclass SignUp extends Component {\n  state = {\n    value: 0,\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n    console.log(\"value\", this.state.value);\n  };\n\n  handlePath = (path) => {\n    this.props.history.push(path);\n  };\n\n  handleAuth = auth => {\n    this.props.handleAuth(auth);\n  };\n  \n  render() {\n    const { classes } = this.props;\n    const { value } = this.state;\n    return (\n      <Container component=\"main\" maxWidth=\"md\" >\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Paper square>\n            <Tabs\n              value={value}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              onChange={this.handleChange}\n            >\n              <Tab label=\"Customer\" />\n              <Tab label=\"Shop Owner\" />\n            </Tabs>\n          </Paper>\n          <CustomerRegistration\n            tabValue={value}\n            onSuccess={this.handlePath}\n            auth={this.handleAuth}\n            index={0}\n          />\n          <ShopOwnerRegistration\n            tabValue={value}\n            onSuccess={this.handlePath}\n            auth={this.handleAuth}\n            index={1}\n          />\n        </div>\n      </Container>\n    );\n  }\n}\n \nexport default withRouter(withStyles(useStyles)(SignUp));","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport { Divider, Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport PaymentIcon from \"@material-ui/icons/Payment\";\nimport DirectionsBikeIcon from \"@material-ui/icons/DirectionsBike\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport StarRateOutlinedIcon from \"@material-ui/icons/StarRateOutlined\";\n\nconst useStyles = (theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        background: \"#ffffff\",\n        width: \"100%\",\n        //width: window.innerWidth<500 ? (window.innerWidth*0.96) : 600,\n    },\n    details: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        //padding: 10,\n        marginLeft: 8,\n        marginTop: 10,\n    },\n    content: {\n        flex: \"1 0 auto\",\n    },\n    cover: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        // marginBottom:20,\n    },\n    controls: {\n        display: \"flex\",\n        alignItems: \"center\",\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n    bim: {\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n    },\n});\n\nclass Shop extends Component {\n    state = {\n        imWidth: \"90%\",\n    };\n\n    handleClick = () => {\n        //this.props.history.push(`/customer/shop/`);\n        this.props.history.push(`/customer/shop/${this.props.data.shopId}`);\n        console.log(\"Loved\");\n    };\n\n    openedNow = () => {\n        let d = new Date();\n        let currentOffset = d.getTimezoneOffset();\n        let ISTOffset = 330;\n        let ISTTime = new Date(\n            d.getTime() + (ISTOffset + currentOffset) * 60000\n        );\n        const openingTime = new Date();\n        const closingTime = new Date();\n        const {\n            openingHour,\n            openingMinute,\n            closingHour,\n            closingMinute,\n        } = this.props.data;\n        openingTime.setHours(openingHour);\n        openingTime.setMinutes(openingMinute);\n        closingTime.setHours(closingHour);\n        closingTime.setMinutes(closingTime);\n\n        // return (\n        //   ISTTime.getTime() > openingTime.getTime() &&\n        //   ISTTime.getTime() < closingTime.getTime()\n        // );\n\n        const currentTime =\n            ISTTime.getHours() * 3600 + ISTTime.getMinutes() * 60;\n\n        return (\n            currentTime >= openingHour * 3600 + openingMinute * 60 &&\n            currentTime <= closingHour * 3600 + closingMinute * 60\n        );\n    };\n\n    time = (t) => {\n        let d = new Date();\n        d.setHours(t.hour);\n        d.setMinutes(t.minute);\n        d.setSeconds(0);\n        return d.toLocaleTimeString();\n    };\n\n    render() {\n        console.log(\"Shop Card\", this.props.data);\n        this.state.imWidth = window.innerWidth < 800 ? \"90%\" : \"100%\";\n        const { classes, theme } = this.props;\n        const {\n            shopName: name,\n            address,\n            imageUrl,\n            discount,\n            distancemetric,\n            openingTimeIST,\n            closingTimeIST,\n            tags: itemsAvailable,\n            shopRating: ratings,\n            payment_modes,\n            travelDuration,\n        } = this.props.data;\n        const distance = distancemetric || -1;\n        const imgUrl =\n            imageUrl ||\n            \"https://img.freepik.com/free-photo/two-beautiful-women-shopping-town_1303-16426.jpg?size=626&ext=jpg\";\n        // \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 1000);\n        //const { openingTime, closingTime } = shopSchedule;\n        return (\n            <Grid item>\n                <Box\n                    className={classes.root}\n                    boxShadow={8}\n                    style={{ width: \"95%\" }}\n                    borderRadius=\"borderRadius\"\n                    borderRadius={15}\n                    borderColor=\"primary.main\"\n                    m={2}\n                >\n                    <Box className={classes.cover}>\n                        <Grid item container xs={12} direction=\"column\">\n                            <Grid\n                                container\n                                spacing={2}\n                                xs={12}\n                                justify=\"center\"\n                            >\n                                <Grid item xs={12} sm={5} justify=\"center\">\n                                    <Box\n                                        className={classes.bim}\n                                        boxShadow={5}\n                                        style={{\n                                            backg: 0.5,\n                                            height: \"200px\",\n                                            width: `${this.state.imWidth}`,\n                                            borderRadius: 15,\n                                            padding: 10,\n                                            marginTop: 10,\n                                            marginLeft: 10,\n                                            marginBottom: 10,\n                                            backgroundImage: `url(${imgUrl})`,\n                                        }}\n                                    >\n                                        <Chip\n                                            label={\n                                                this.openedNow()\n                                                    ? \"Open\"\n                                                    : \"Closed\"\n                                            }\n                                            style={{\n                                                background: this.openedNow()\n                                                    ? \"#00b476\"\n                                                    : \"#ef0052\",\n                                                fontSize: 17,\n                                                fontWeight: \"bold\",\n                                                color: \"white\",\n                                            }}\n                                        ></Chip>\n                                    </Box>\n                                    <Typography\n                                        variant=\"body1\"\n                                        align=\"center\"\n                                        gutterBottom\n                                        style={{\n                                            paddingLeft: 10,\n                                            margin: \"auto\",\n                                        }}\n                                    >\n                                        <FiberManualRecordIcon\n                                            style={{\n                                                color: \"green\",\n                                                fontSize: 13,\n                                                marginRight: 5,\n                                            }}\n                                        />\n                                        {openingTimeIST}\n                                        <FiberManualRecordIcon\n                                            style={{\n                                                color: \"red\",\n                                                fontSize: 13,\n                                                marginLeft: 10,\n                                            }}\n                                        />\n                                        {closingTimeIST}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12} sm={7}>\n                                    <Box className={classes.details}>\n                                        <Typography\n                                            component=\"h4\"\n                                            variant=\"h4\"\n                                            style={{ color: \"indigo\" }}\n                                        >\n                                            <b>{name}</b>\n                                        </Typography>\n                                        {this.openedNow() || (\n                                            <Typography\n                                                variant=\"body1\"\n                                                gutterBottom\n                                            >\n                                                Opens next at {openingTimeIST}\n                                            </Typography>\n                                        )}\n                                        <br />\n                                        <Box\n                                            style={{\n                                                display: \"flex\",\n                                                flexDirection: \"row\",\n                                            }}\n                                        >\n                                            <Chip\n                                                icon={\n                                                    <StarRateOutlinedIcon\n                                                        style={{\n                                                            color: \"#ffffff\",\n                                                        }}\n                                                    />\n                                                }\n                                                label={ratings[0]}\n                                                variant=\"contained\"\n                                                style={{\n                                                    backgroundColor: \"#58AC00\",\n                                                    margin: 2,\n                                                    fontSize: 18,\n                                                    color: \"white\",\n                                                }}\n                                            />\n                                        </Box>\n                                        <br />\n                                        <Typography\n                                            variant=\"body1\"\n                                            gutterBottom\n                                        >\n                                            <Box\n                                                style={{\n                                                    display: \"flex\",\n                                                    flexDirection: \"row\",\n                                                }}\n                                            >\n                                                <LocationOnIcon />\n                                                <Typography\n                                                    variant=\"body1\"\n                                                    style={{\n                                                        paddingBottom: 3,\n                                                        marginLeft: 5,\n                                                        marginRight: 5,\n                                                    }}\n                                                >\n                                                    {`${distance} km`}\n                                                </Typography>\n                                                <DirectionsBikeIcon />\n                                                <Typography\n                                                    variant=\"body1\"\n                                                    style={{\n                                                        paddingBottom: 3,\n                                                        marginLeft: 5,\n                                                    }}\n                                                >\n                                                    {travelDuration <= 3600\n                                                        ? `${Math.round(\n                                                              travelDuration /\n                                                                  60\n                                                          )} Min`\n                                                        : `${\n                                                              travelDuration /\n                                                              3600\n                                                          } Hour`}\n                                                </Typography>\n                                            </Box>\n                                            {true && (\n                                                <Box\n                                                    style={{\n                                                        display: \"flex\",\n                                                        flexDirection: \"row\",\n                                                    }}\n                                                >\n                                                    <PaymentIcon\n                                                        style={{\n                                                            color: \"#00b300\",\n                                                        }}\n                                                    />\n                                                    <Typography\n                                                        variant=\"body1\"\n                                                        style={{\n                                                            paddingBottom: 3,\n                                                            marginLeft: 5,\n                                                        }}\n                                                    >\n                                                        Accepts{\" \"}\n                                                        {payment_modes.join()}\n                                                    </Typography>\n                                                </Box>\n                                            )}\n                                        </Typography>\n                                    </Box>\n                                </Grid>\n                            </Grid>\n                            <br />\n                            <Divider />\n                            <Grid item container xs={12} direction=\"row\">\n                                <Grid\n                                    item\n                                    container\n                                    direction=\"row\"\n                                    xs={7}\n                                    justify=\"center\"\n                                    alignItems=\"center\"\n                                >\n                                    <Box\n                                        style={{\n                                            display: \"flex\",\n                                            flexDirection: \"row\",\n                                        }}\n                                    >\n                                        <LocalOfferIcon\n                                            style={{ color: \"#f445a6\" }}\n                                        />\n                                        <Typography\n                                            variant=\"body1\"\n                                            style={{\n                                                paddingBottom: 3,\n                                                color: \"#f445a6\",\n                                                marginLeft: 5,\n                                            }}\n                                        >\n                                            {discount}% off on all On-Time\n                                            orders\n                                        </Typography>\n                                    </Box>\n                                </Grid>\n                                <Grid\n                                    item\n                                    container\n                                    xs={5}\n                                    direction=\"row\"\n                                    justify=\"flex-end\"\n                                >\n                                    <IconButton\n                                        style={{ color: \"red\", margin: 2 }}\n                                    >\n                                        <FavoriteIcon />\n                                    </IconButton>\n                                    <Button\n                                        variant=\"contained\"\n                                        onClick={this.handleClick}\n                                        style={{\n                                            backgroundColor: \"green\",\n                                            color: \"white\",\n                                            margin: 2,\n                                            fontSize: 17,\n                                        }}\n                                        endIcon={\n                                            <ArrowForwardIosIcon\n                                                style={{ paddingBottom: 1 }}\n                                            />\n                                        }\n                                    >\n                                        <b>Book Slot</b>\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Box>\n            </Grid>\n        );\n    }\n}\n\nexport default withRouter(withStyles(useStyles, { withTheme: true })(Shop));\n","import http from \"./httpServices\";\nimport api from \"../configApi.json\";\n\nexport const getShopList = (r=3) => {\n    const rad = r * 1000;\n    const response = http.post(api.shopList, {\n        userLocation:localStorage.getItem(\"userAddress\"),\n        radius: rad,\n    });\n    return response;\n};\n\nexport const getShopDetails = (id) => {\n    const response = http.get(\n        api.shopData + `/${id}`,\n        {params: {\n            isShop: false,\n            \n        }}\n    );\n    return response;\n};\n\nexport const getReviews = id => {\n    return http.post(api.reviews, {\n        \"shopId\": id\n    });\n}\n\nexport const getMyBookings = () => {\n    return http.protectedPost(api.myBookings, { isShop: false });\n}\n\nexport const getShopBookings = () => {\n    return http.protectedPost(api.myBookings, { isShop: true });\n}","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Box, Grid, Button } from \"@material-ui/core\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DirectionsIcon from \"@material-ui/icons/Directions\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport \"react-google-places-autocomplete/dist/index.min.css\";\nimport http from \"../../../../services/httpServices\";\n\nconst useStyles = (theme) => ({\n    root: {\n        padding: \"2px 4px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        width: \"100%\",\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n});\n\nclass CurrentLocation extends Component {\n    state = {\n        location: \"\",\n        coordinate: {},\n        openDialogue: false,\n    };\n\n    componentDidMount() {\n        //navigator.geolocation.getCurrentPosition(this.showPosition);\n        if (!localStorage.getItem(\"userAddress\"))\n            this.setState({\n                openDialogue: true,\n            });\n        else this.setState({ location: localStorage.getItem(\"userAddress\") });\n    }\n\n    // showPosition = (position) => {\n    //     const location =\n    //         \"Latitude: \" +\n    //         position.coords.latitude +\n    //         \" Longitude: \" +\n    //         position.coords.longitude;\n    //     const coordinate = {};\n    //     coordinate.latitude = position.coords.latitude;\n    //     coordinate.longitude = position.coords.longitude;\n    //     this.setState({ location, coordinate });\n    //     console.log(\"coordinate set\");\n    // };\n\n    handleClick = () => {\n        this.setState({ openDialogue: true });\n        // try {\n        //     const response = await http.get(\n        //         `https://maps.googleapis.com/maps/api/geocode/json?latlng=${this.state.coordinate.latitude},${this.state.coordinate.longitude}&key=AIzaSyBixtvcF5A38Z2dVP9fFkcvLf5P59RmnEA`,\n        //     );\n        //     console.log(response);\n        // } catch (ex) {\n        //     console.log(ex.response);\n        // }\n    };\n\n    updateLocation = (addr) => {\n        console.log(addr.description);\n        this.setState({ location: addr.description, openDialogue: false });\n        localStorage.setItem(\"userAddress\", addr.description);\n        this.props.handleAddress();\n    };\n\n    handleClose = () => {\n        this.setState({ openDialogue: false });\n    };\n\n    render() {\n        const { openDialogue } = this.state;\n        const { handleClose, handleClick } = this;\n        const { classes } = this.props;\n        return (\n            <Box\n                borderRadius={10}\n                style={{\n                    width: \"100%\",\n                    backgroundColor: \"#00583a\",\n                    color: \"white\",\n                }}\n                m={1}\n                p={1}\n                onClick={this.getLocation}\n            >\n                <Grid container direction=\"row\" xs xl lg>\n                    <Grid item xs={8}>\n                        <Typography variant=\"body1\">\n                            <LocationOnIcon />\n                            Near <b>{this.state.location}</b>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={4} container justify=\"flex-end\">\n                        <Button\n                            variant=\"outlined\"\n                            style={{backgroundColor:'white'}}\n                            onClick={handleClick}\n                        >\n                            Change\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Dialog open={openDialogue} onClose={handleClose}>\n                    <DialogContent\n                        style={{\n                            backgroundColor: \"#ffe7ef\",\n                            height: \"300px\",\n                            width: window.innerWidth < 600 ? \"340px\" : \"600px\",\n                        }}\n                    >\n                        <Paper component=\"form\" className={classes.root}>\n                            <IconButton\n                                type=\"submit\"\n                                className={classes.iconButton}\n                                aria-label=\"search\"\n                            >\n                                <SearchIcon />\n                            </IconButton>\n                            <GooglePlacesAutocomplete\n                                onSelect={this.updateLocation}\n                            />\n                            <Divider\n                                className={classes.divider}\n                                orientation=\"vertical\"\n                            />\n                            <IconButton\n                                color=\"primary\"\n                                className={classes.iconButton}\n                                aria-label=\"directions\"\n                            >\n                                <DirectionsIcon />\n                            </IconButton>\n                        </Paper>\n                    </DialogContent>\n                </Dialog>\n            </Box>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(CurrentLocation);\n","import React, { Component } from \"react\";\nimport { Box, Divider, GridListTile } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\n\n\nconst useStyles = (theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        width: \"100%\",\n    },\n    chips: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    chip: {\n        margin: 2,\n    },\n});\n\n\nclass FilterCard extends Component {\n    state = {\n        filter: {\n            openClose: { showAll: true, isOpen: false },\n            distanceRating: {\n                //distance: { selected: true, ascOrder: true },\n                //rating: { selected: false, ascOrder: true },\n            },\n            items: [],\n            slotTypes: { Morning: true, Afternoon: true, Evening: true },\n            customerRatings:{\"4\":false,\"3\":false},\n        },\n    };\n\n    formData = {\n        itemList: [\"gas\", \"gasf\", \"gsaf\", \"gafdsag\", \"sgasdf\"],\n        slotType: [\"Morning\", \"Afternoon\", \"Evening\"],\n        customerRating:[\"4\",\"3\"],\n\n    };\n\n    handleCheck = (event) => {\n        let filter = { ...this.state.filter };\n        filter.openClose[event.target.name] = event.target.checked;\n        this.setState({ filter });\n        console.log(event.target.checked, this.state.filter);\n    };\n\n    handleDR = (name) => {\n        let filter = { ...this.state.filter };\n        if (filter.distanceRating[name])\n            filter.distanceRating[name].ascOrder = !filter.distanceRating[name]\n                .ascOrder;\n        else\n            filter.distanceRating = {\n                [name]: { ascOrder: true },\n            };\n        this.setState({ filter });\n    };\n\n    handleSelect = ({ target: { name, value } }) => {\n        let filter = { ...this.state.filter };\n        filter[name] = value;\n        this.setState({ filter });\n    };\n\n    handleSlot = event => {\n        let filter = { ...this.state.filter };\n        filter.slotTypes[event.target.name] = event.target.checked;\n        this.setState({ filter });\n    }\n    \n    handleRating = event => {\n        let filter = { ...this.state.filter };\n        filter.customerRatings[event.target.name] = event.target.checked;\n        this.setState({ filter });\n    }\n\n    render() {\n        const {\n            openClose,\n            distanceRating: dr,\n            slotTypes,\n            customerRatings,\n        } = this.state.filter;\n        const { handleCheck, handleDR, handleSlot, handleRating } = this;\n        const { items, slotType, customerRating } = this.formData;\n        const { classes, theme } = this.props;\n        return (\n            <Box\n                boxShadow={5}\n                style={{\n                    backgroundColor: \"white\",\n                    width: \"100%\",\n                    marginTop: 5,\n                }}\n                borderRadius={5}\n            >\n                <Grid\n                    item\n                    container\n                    direction=\"column\"\n                    justify=\"flex-start\"\n                    alignItems=\"flex-start\"\n                    spacing={2}\n                    style={{\n                        width: \"100%\",\n                        margin: \"auto\",\n                    }}\n                >\n                    <Grid\n                        item\n                        container\n                        direction=\"row\"\n                        justify=\"flex-start\"\n                        xs={12}\n                    >\n                        <Typography variant=\"h5\">\n                            <b>Filters</b>\n                        </Typography>\n                    </Grid>\n                    <Box p={1} style={{ width: \"100%\", paddingLeft: 15 }}>\n                        <Grid item container xs={12}>\n                            <Grid\n                                item\n                                container\n                                xs={12}\n                                md={12}\n                                direction=\"column\"\n                                justify=\"center\"\n                            >\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={openClose.showAll}\n                                            onChange={handleCheck}\n                                            name=\"showAll\"\n                                        />\n                                    }\n                                    label=\"Show All\"\n                                />\n                                <Typography variant=\"body2\">\n                                    Check this box to show closed shops too\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box p={1} style={{ width: \"90%\", paddingLeft: 15 }}>\n                        <Typography variant=\"h6\">Items Available</Typography>\n                        <MultipleSelect\n                            selectedItems={this.state.filter.items}\n                            handleChange={this.handleSelect}\n                            classes={classes}\n                            name=\"items\"\n                            label=\"Type of Items Available\"\n                            theme={theme}\n                            items={[\n                                \"Meat & Fish\",\n                                \"Grocery\",\n                                \"Condiments(Spices)\",\n                                \"Grains and Bread\",\n                                \"Dairy & Eggs\",\n                                \"Oil & Fat\",\n                                \"Tinned & Dried Produce\",\n                                \"Electronics\",\n                            ]}\n                        />\n                    </Box>\n                    <Box p={1} style={{ width: \"90%\", paddingLeft: 15 }}>\n                        <Typography variant=\"h6\">Slot Type</Typography>\n                        <Grid item container direction=\"column\">\n                            {slotType.map((label) => (\n                                <Grid item>\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox\n                                                checked={slotTypes[label]}\n                                                onChange={handleSlot}\n                                                name={label}\n                                            />\n                                        }\n                                        label={label}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </Box>\n                    <Box p={1} style={{ width: \"90%\", paddingLeft: 15 }}>\n                        <Typography variant=\"h6\">Customer Rating</Typography>\n                        <Grid item container direction=\"column\">\n                            {customerRating.map((label) => (\n                                <Grid item>\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox\n                                                checked={customerRatings[label]}\n                                                onChange={handleRating}\n                                                name={label}\n                                            />\n                                        }\n                                        label={`${label} ★ & above`}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </Box>\n                    {/* <Grid\n                        item\n                        container\n                        direction=\"row\"\n                        justify=\"flex-start\"\n                        xs={12}\n                    >\n                        <Typography variant=\"h5\">\n                            <b>Sort By</b>\n                        </Typography>\n                    </Grid>\n                    <Box m={1} p={1} style={{ width: \"100%\" }}>\n                        <Grid item container xs={12}>\n                            <Grid\n                                item\n                                container\n                                xs={6}\n                                direction=\"row\"\n                                justify=\"center\"\n                                style={{ cursor: \"pointer\" }}\n                                onClick={() => handleDR(\"distance\")}\n                            >\n                                <Typography\n                                    variant=\"button\"\n                                    display=\"block\"\n                                    gutterBottom\n                                    align=\"center\"\n                                >\n                                    Distance\n                                </Typography>\n                                {dr.distance ? (\n                                    dr.distance.ascOrder ? (\n                                        <ArrowDropUpIcon />\n                                    ) : (\n                                        <ArrowDropDownIcon />\n                                    )\n                                ) : null}\n                            </Grid>\n                            <Grid\n                                item\n                                container\n                                direction=\"row\"\n                                xs={6}\n                                justify=\"center\"\n                                style={{ cursor: \"pointer\" }}\n                                onClick={() => handleDR(\"rating\")}\n                            >\n                                <Typography\n                                    variant=\"button\"\n                                    display=\"block\"\n                                    gutterBottom\n                                    align=\"center\"\n                                >\n                                    Rating\n                                </Typography>\n                                {dr.rating ? (\n                                    dr.rating.ascOrder ? (\n                                        <ArrowDropUpIcon />\n                                    ) : (\n                                        <ArrowDropDownIcon />\n                                    )\n                                ) : null}\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box m={1} p={1} style={{ width: \"100%\" }}>\n                        <Grid item container xs={12}></Grid>\n                    </Box> */}\n                </Grid>\n            </Box>\n        );\n    }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(FilterCard);\n\n\nclass MultipleSelect extends Component {\n    state = {\n        items: this.props.items,\n    };\n\n    getStyles = (item, selectedItems, theme) => {\n        return {\n            fontWeight:\n                selectedItems.indexOf(item) === -1\n                    ? theme.typography.fontWeightRegular\n                    : theme.typography.fontWeightMedium,\n        };\n    };\n\n    MenuProps = {\n        PaperProps: {\n            style: {\n                maxHeight: 224,\n                width: 250,\n            },\n        },\n    };\n\n    render() {\n        const {\n            selectedItems,\n            handleChange,\n            classes,\n            theme,\n            name,\n            label,\n        } = this.props;\n\n        return (\n            <FormControl className={classes.formControl} variant=\"filled\">\n                <InputLabel id=\"demo-mutiple-chip-label\">{label}</InputLabel>\n                <Select\n                    labelId=\"demo-mutiple-chip-label\"\n                    id=\"demo-mutiple-chip\"\n                    multiple\n                    name={name}\n                    value={selectedItems}\n                    onChange={handleChange}\n                    input={<Input id=\"select-multiple-chip\" />}\n                    renderValue={(selected) => (\n                        <div className={classes.chips}>\n                            {selected.map((value) => (\n                                <Chip\n                                    key={value}\n                                    label={value}\n                                    color=\"primary\"\n                                    className={classes.chip}\n                                />\n                            ))}\n                        </div>\n                    )}\n                    MenuProps={this.MenuProps}\n                >\n                    {this.props.items.map((item, i) => (\n                        <MenuItem\n                            key={item}\n                            value={item}\n                            style={this.getStyles(item, selectedItems, theme)}\n                        >\n                            {item}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport Shop from \"./components/shop\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { getShopList } from \"../../../services/dataServices\";\nimport GridList from \"@material-ui/core/GridList\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { Box } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { updateRadius } from \"../../../services/userService\";\nimport CurrentLocation from \"./shopPage/getLocation\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport FilterCard from \"./components/filter\";\n\n\n\nconst useStyles = (theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        width: \"100%\",\n    },\n});\n\nclass Shops extends Component {\n    state = {\n        shopData: [],\n        distance: 3,\n        isLoading: false,\n        message: \"An Error Occured\",\n    };\n\n    formData = {\n        distance: [\n            { value: 1, label: \"1 km\" },\n            { value: 2, label: \"2 km\" },\n            { value: 5, label: \"5 km\" },\n            { value: 10, label: \"10 km\" },\n        ],\n    };\n\n    async componentDidMount() {\n        this.updateShopList();\n    }\n\n    updateShopList = async () => {\n        this.setState({ isLoading: true });\n        try {\n            const response = await getShopList(this.state.distance);\n            console.log(response);\n            if (response.data)\n                this.setState({ shopData: response.data, message: \"\" });\n            else this.setState({ message: \"No Shop Found\" });\n        } catch (ex) {\n            if (ex.response)\n                this.setState({\n                    message: ex.response.data ? ex.response.data.message : \"An Error Occured\",\n                });\n            else this.setState({ message: \"An Error Occured\" });\n            console.log(ex.response);\n        }\n        this.setState({ isLoading: false });\n    }\n\n    handleChange = (event, newValue) => {\n        const distance = newValue;\n        this.setState({ distance });\n        this.updateShopList();\n    };\n\n    handleAddress = () => {\n        this.updateShopList();\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { distance } = this.state;\n        console.log(this.state);\n        return (\n            // <Shop/>\n            <div className={classes.root}>\n                <Grid\n                    container\n                    spacing={5}\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"flex-start\"\n                >\n                    <Grid\n                        container\n                        sm={3}\n                        md={3}\n                        lg={3}\n                        spacing={1}\n                        direction=\"column\"\n                        alignItems=\"center\"\n                    >\n                        <Grid item style={{ width: \"100%\" }}>\n                            <Box\n                                boxShadow={5}\n                                style={{\n                                    backgroundColor: \"white\",\n                                    width: \"100%\",\n                                    marginTop: 23,\n                                }}\n                                p={2}\n                                borderRadius={5}\n                            >\n                                <Typography variant=\"body1\">\n                                    Choose Your Radius(in Km)..\n                                </Typography>\n                                <Slider\n                                    value={distance}\n                                    aria-labelledby=\"discrete-slider-always\"\n                                    step={1}\n                                    onChange={this.handleChange}\n                                    min={1}\n                                    max={5}\n                                    marks\n                                    valueLabelDisplay=\"auto\"\n                                />\n                            </Box>\n                        </Grid>\n                        <Grid\n                            item\n                            container\n                            direction=\"column\"\n                            justify=\"flex-start\"\n                            alignItems=\"center\"\n                            style={{ width: \"100%\" }}\n                        >\n                            <FilterCard />\n                        </Grid>\n                    </Grid>\n                    <Grid\n                        item\n                        container\n                        sm={8}\n                        md={8}\n                        lg={8}\n                        direction=\"column\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        style={{ width: \"100%\" }}\n                    >\n                        <Grid container xs={12} direction=\"row\">\n                            <CurrentLocation handleAddress={this.handleAddress}/>\n                        </Grid>\n                        {this.state.isLoading ? (\n                            <Grid\n                                container\n                                spacing={5}\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"flex-start\"\n                                style={{ marginTop: 20 }}\n                            >\n                                <CircularProgress color=\"secondary\" />\n                            </Grid>\n                        ) : this.state.message ? (\n                            <Typography variant=\"body1\" align=\"center\">\n                                {this.state.message}\n                            </Typography>\n                        ) : (\n                            <GridList\n                                cellHeight=\"auto\"\n                                cols={2}\n                                spacing={10}\n                                style={{ width: \"100%\" }}\n                            >\n                                {this.state.shopData.map((data, i) => (\n                                    <GridListTile\n                                        key={i}\n                                        cols={window.innerWidth < 500 ? 2 : 1}\n                                    >\n                                        <Shop\n                                            data={data}\n                                            userAddress={this.state.userAddress}\n                                        />\n                                    </GridListTile>\n                                ))}\n                            </GridList>\n                        )}\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Shops);\n","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { getUserDetails } from '../../../../utils/auth';\n\n\n\nclass AddressForm extends Component {\n  state = { \n    userInfo:getUserDetails(),\n    shopData:this.props.shopInfo,\n  }\n\n  render() { \n    const {userInfo,shopData} = this.state;\n    return (\n      <React.Fragment>\n        <Typography variant=\"h6\" gutterBottom>\n          Your Info\n        </Typography>\n        <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n            <TextField\n              id=\"email\"\n              label=\"Email\"\n              defaultValue={userInfo.email}\n              variant=\"filled\"\n              fullWidth\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n          <TextField\n              id=\"phoneNumber\"\n              label=\"Contact Number\"\n              defaultValue={userInfo.phoneNumber}\n              variant=\"filled\"\n              fullWidth\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Typography variant=\"h6\" gutterBottom>\n          Shop Details\n        </Typography>\n        <Grid container spacing={3}>\n          <Grid item xs={12} >\n          <TextField\n              id=\"name\"\n              defaultValue={shopData.name}\n              variant=\"filled\"\n              fullWidth\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n          </Grid>\n         <Grid item xs={12}>\n         <TextField\n              id=\"address\"\n              defaultValue={shopData.address}\n              variant=\"filled\"\n              fullWidth\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n          </Grid>\n         <Grid item xs={12} sm={6}>\n         <TextField\n              id=\"email\"\n              label=\"Email\"\n              defaultValue={shopData.email}\n              variant=\"filled\"\n              fullWidth\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n          <TextField\n              id=\"phoneNumber\"\n              label=\"Contact Number\"\n              defaultValue={shopData.phoneNumber}\n              variant=\"filled\"\n              fullWidth\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n          </Grid>\n          {/* <Grid item xs={12}>\n            <FormControlLabel\n              control={\n                <Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" onChange={this.props.onCheck}/>\n              }\n              label=\"Use this address for payment details\"\n            />\n          </Grid> */}\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n \nexport default AddressForm;","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Chip from '@material-ui/core/Chip';\nimport Input from '@material-ui/core/Input';\nimport { getItemList } from '../../../../utils/auth';\n\n\n\n\n\nconst useStyles = theme => ({\n formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    width: \"90%\",\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    position: 'relative',\n    overflow: 'auto',\n    maxHeight: 300,\n  },\n  listSection: {\n    backgroundColor: 'inherit',\n  },\n  ul: {\n    backgroundColor: 'inherit',\n    padding: 0,\n  },\n});\n\nconst absSecond = (hour,minute=0) => {\n  let d = new Date();\n  d.setHours(hour);d.setMinutes(minute);\n  return d.getTime();\n};\n\nconst fieldValue = {\n  period:[\n    {label:\"Morning\",slot:{start:8,end:12}},\n    {label:\"Afternoon\",slot:{start:12,end:18}},\n    {label:\"Evening\",slot:{start:18,end:23}},\n  ],\n  duration:[\n    {label:\"15 Minutes\",value:15},\n    {label:\"30 Minutes\",value:30},\n    {label:\"1 Hour\",value:60},\n    {label:\"1 Hour 30 Minutes\",value:90},\n    {label:\"2 Hour\",value:120},\n  ],\n};\n\nclass SelectSlotAndItem extends Component {\n  state = { \n    period:fieldValue.period.filter(c => !c.label.localeCompare(this.props.period))[0],\n    duration:fieldValue.duration.filter(c => c.value==this.props.duration)[0],\n    shopSchedule:{openingTime:{hour:8,minute:0},closingTime:{hour:8,minute:30}},\n  }\n\n  componentDidMount() {\n    this.setState({slotTime:this.getSlotTimes()[0]})\n    //if(!this.props.slotTime) this.props.setSlotTime(this.getSlotTimes()[0]);\n  }\n\n  getSlotTimes = (period, duration) => {\n    let slotTimeArr = [];\n    let stime = new Date();\n    const currentTime = new Date();\n    const gap=15*60*1000;\n    if(!period) period = this.state.period.slot;\n    if(!duration) duration = this.state.duration.value * 60000;\n    else duration *= 60000;\n    stime.setHours(period.start); stime.setMinutes(0); stime.setSeconds(0);\n    if(period.end<currentTime.getHours()) return [];\n    while(stime.getHours()<period.end){\n      const start = new Date(stime);\n      const end = new Date(stime.getTime()+duration);      \n      if(start.getTime()<currentTime.getTime()) {\n        stime.setTime(stime.getTime()+gap);\n        continue;\n      }\n      slotTimeArr.push(start.toLocaleTimeString()+\" - \"+end.toLocaleTimeString());\n      stime.setTime(stime.getTime()+gap);\n    }\n    return slotTimeArr;\n  }\n\n  handlePeriod = e => {\n    this.setState({period:e.target.value});\n    this.props.setPeriod(e.target.value.label);\n    this.props.setSlotTime(this.getSlotTimes(e.target.value.slot)[0] || \"\");\n  }\n\n  handleDuration = e => {\n    this.setState({duration:e.target.value});\n    this.props.setDuration(e.target.value.value);\n    this.props.setSlotTime(this.getSlotTimes(null,e.target.value.value)[0]);\n  }\n\n  handleSlotTime = e => {\n    //this.setState({slotTime:e.target.value});\n    this.props.setSlotTime(e.target.value);\n  }\n\n  \n  render() { \n    const {classes,theme} = this.props;\n    const {period,duration} = this.state;\n    const {handleDuration,handlePeriod,handleSlotTime} = this;\n    const {handleSelectItems,slotTime} = this.props;\n    return (\n      <React.Fragment>\n        <Typography variant=\"h6\" gutterBottom>\n         Select Slot\n        </Typography>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6}>\n            <FormControl variant=\"outlined\" className={classes.formControl} required>\n              <InputLabel id=\"SelectPeriod\" >Time</InputLabel>\n              <Select\n                labelId=\"SelectPeriod\"\n                id=\"SelectPeriod\"\n                value={period}\n                onChange={handlePeriod}\n                label=\"Age\"\n              >\n                {fieldValue.period.map((time,i) => <MenuItem key={i} value={time}>{time.label}</MenuItem> )}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={6}>\n          <FormControl variant=\"outlined\" required className={classes.formControl}>\n              <InputLabel id=\"SelectDuration\">Duration</InputLabel>\n              <Select\n                labelId=\"SelectDuration\"\n                id=\"SelectDuration\"\n                value={duration}\n                onChange={handleDuration}\n                label=\"Duration\"\n              >\n                {fieldValue.duration.map((slot,i) => <MenuItem key={i} value={slot}>{slot.label}</MenuItem>)}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} >\n          <FormControl variant=\"outlined\" required className={classes.formControl}>\n              <InputLabel id=\"SlotTime\">Slot Time</InputLabel>\n              <Select\n                labelId=\"SlotTime\"\n                id=\"SlotTime\"\n                value={slotTime}\n                onChange={handleSlotTime}\n                label=\"Slot Time\"\n              >\n                {this.getSlotTimes().map((item,i) => <MenuItem key={i} value={item}>{item}</MenuItem>)}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12}>\n            <MultipleSelect \n              selectedItems={this.props.selectedItems} \n              handleChange={handleSelectItems} \n              classes={classes}\n              theme={theme}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormControlLabel\n              control={<Checkbox color=\"secondary\" name=\"saveCard\" value=\"yes\" />}\n              label=\"Remember credit card details for next time\"\n            />\n          </Grid>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n \nexport default withStyles(useStyles,{ withTheme: true })(SelectSlotAndItem);\n\n\n\nclass MultipleSelect extends Component {\n  state = { \n    items:[],\n  }\n\n  componentDidMount() {\n    this.setState({items:getItemList()});\n  }\n\n  getStyles = (item, selectedItems, theme) => {\n    return {\n      fontWeight:\n        selectedItems.indexOf(item) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n  }\n\n  MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: 224,\n        width: 250,\n      },\n    },\n  };\n\n\n  render() { \n    const {selectedItems,handleChange,classes,theme} = this.props;\n    \n    return ( \n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-mutiple-chip-label\">Chip</InputLabel>\n        <Select\n          labelId=\"demo-mutiple-chip-label\"\n          id=\"demo-mutiple-chip\"\n          multiple\n          value={selectedItems}\n          onChange={handleChange}\n          input={<Input id=\"select-multiple-chip\" />}\n          renderValue={(selected) => (\n            <div className={classes.chips}>\n              {selected.map((value) => (\n                <Chip key={value} label={value} color=\"primary\" className={classes.chip} />\n              ))}\n            </div>\n          )}\n          MenuProps={this.MenuProps}\n        >\n          {this.state.items.map((items,i) => (\n              //(<ListSubheader>{items.label}</ListSubheader>)\n              items.value.map(item => \n                <MenuItem key={item} value={item} style={this.getStyles(item, selectedItems, theme)}>\n                  {item}\n                </MenuItem>\n              )\n            \n          ))}\n        </Select>\n      </FormControl>\n    );\n\n  }\n}\n ","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { getUserDetails } from \"../../../../utils/auth\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = (theme) => ({\n  listItem: {\n    padding: theme.spacing(1, 0),\n  },\n  total: {\n    fontWeight: 700,\n  },\n  title: {\n    marginTop: theme.spacing(2),\n  },\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    position: \"relative\",\n    overflow: \"auto\",\n    maxHeight: 200,\n  },\n});\n\nclass Review extends Component {\n  state = {\n    products: this.props.items,\n    userDetails: getUserDetails(),\n  };\n  render() {\n    const { products, userDetails: user } = this.state;\n    const { classes, period, shopData, slotTime } = this.props;\n    return (\n      <React.Fragment>\n        <Divider />\n        <br />\n        <Typography variant=\"h6\" gutterBottom>\n          Order summary\n        </Typography>\n        <List disablePadding className={classes.root}>\n          {products.map((product, i) => (\n            <ListItem className={classes.listItem} key={i}>\n              <ListItemText primary={product} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <br />\n        <br />\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              id=\"period\"\n              //label=\"\"\n              defaultValue={period}\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              id=\"slotTime\"\n              label=\"Slot Time\"\n              defaultValue={slotTime}\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n          </Grid>\n        </Grid>\n        <br />\n        <br />\n        <Divider />\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"h6\" gutterBottom className={classes.title}>\n              Your Info\n            </Typography>\n            <Typography gutterBottom>{user.name}</Typography>\n            <Typography gutterBottom>{user.email}</Typography>\n            <Typography gutterBottom>{user.address}</Typography>\n          </Grid>\n          <Grid item container direction=\"column\" xs={12} sm={6}>\n            <Typography variant=\"h6\" gutterBottom className={classes.title}>\n              Shop Details\n            </Typography>\n            <Typography gutterBottom>{shopData.name}</Typography>\n            <Typography gutterBottom>{shopData.email}</Typography>\n            <Typography gutterBottom>{shopData.phoneNumber}</Typography>\n            <Typography gutterBottom>{shopData.address}</Typography>\n          </Grid>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Review);\n","import React, { Component } from 'react';\nimport { withStyles, duration } from \"@material-ui/core/styles\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm.jsx';\nimport SelectSlotAndItem from './PaymentForm.jsx';\nimport Review from './Review.jsx';\nimport {getUserDetails, ShopsList} from '../../../../utils/auth';\n\n\nconst useStyles = (theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    color:\"primary\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n});\n\nconst steps = ['Shop Details', 'Item details', 'Review your order'];\n\n\nclass BookNewSlot extends Component {\n  state = { \n    activeStep:0,\n    shopData:ShopsList(this.props.match.params.uid),\n    checkConfirmation:true,\n    selectedItems:[],\n    slotTime:\"\",\n    duration:15,//in Minutes\n    period:\"Morning\",\n  }\n\n  getStepContent = (step,data,onCheck) => {\n    switch (step) {\n      case 0:\n        return <AddressForm shopInfo={data} onCheck={onCheck}/>;\n      case 1:\n        return <SelectSlotAndItem\n          onCheck={onCheck}\n          handleSelectItems={this.handleSelectItems}\n          setSlotTime={this.setSlotTime}\n          setDuration={this.setDuration}\n          setPeriod={this.setPeriod}\n          selectedItems={this.state.selectedItems}\n          slotTime={this.state.slotTime}\n          duration={this.state.duration}\n          period={this.state.period}\n        />;\n      case 2:\n        return <Review \n          onCheck={onCheck}\n          items={this.state.selectedItems}\n          period={this.state.period}\n          slotTime={this.state.slotTime}\n          shopData={this.state.shopData}\n        />;\n      default:\n        throw new Error('Unknown step');\n    }\n  }\n\n  handleNext = () => {\n    this.setState({activeStep:(this.state.activeStep + 1)});\n    if(this.state.activeStep==2) this.confirmSlotSubmit();\n  }\n\n  handleBack = () => {\n    this.setState({activeStep:(this.state.activeStep - 1)});\n  }\n\n  handleCheck = e => {\n    const checkConfirmation = e.currentTarget._valueTracker.getValue();\n    this.setState({checkConfirmation});\n  }\n\n  confirmSlotSubmit = () => {\n    console.log(\"slot confirm\");\n  }\n\n  //Mehods for component SelectSlotAndItems\n\n  handleSelectItems = e => {\n    this.setState({selectedItems:e.target.value});\n  }\n\n  setSlotTime = time => {\n    this.setState({slotTime:time});\n  }\n\n  setDuration = duration => {\n    this.setState({duration});\n  }\n\n  setPeriod = period => {\n    this.setState({period});\n  }\n\n\n  render() { \n    const {classes} = this.props;\n    const {activeStep,shopData} = this.state;\n    const {handleBack,handleNext} = this;\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <main className={classes.layout}>\n          <Paper className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n              Booking New Slot\n            </Typography>\n            <Stepper activeStep={activeStep} className={classes.stepper}>\n              {steps.map((label) => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n            <React.Fragment>\n              {activeStep === steps.length ? (\n                <React.Fragment>\n                  <Typography variant=\"h5\" align=\"center\" gutterBottom>\n                    <img src=\"https://www.huayeahfabric.com/wp-content/uploads/2019/06/success.gif\" style={{height:150,margin:'auto'}} />\n                    <br/>Thank you for your order.<br/>\n                    <p style={{fontSize:40}}>6:00 PM → 7:00 PM</p>\n                  </Typography>\n                  <Typography variant=\"h6\" align=\"center\">\n                    Order No: <b>kl34j513l5143jlk1</b>\n                  </Typography>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  {this.getStepContent(activeStep,shopData,this.handleCheck)}\n                  <div className={classes.buttons}>\n                    {activeStep !== 0 && (\n                      <Button onClick={handleBack} className={classes.button} color=\"secondary\">\n                        Back\n                      </Button>\n                    )}\n                    <Button\n                      disabled={! this.state.checkConfirmation}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleNext}\n                      className={classes.button}\n                    >\n                      {activeStep === steps.length - 1 ? 'Confirm Slot' : 'Next'}\n                    </Button>\n                  </div>\n                </React.Fragment>\n              )}\n            </React.Fragment>\n          </Paper>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n \nexport default withStyles(useStyles)(BookNewSlot);","import React, { Component } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Box } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { updateBookings } from \"../../../../services/userService\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = (theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        width: \"90%\",\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginTop: 10,\n        //backgroundColor: \"#d96477\",\n    },\n    chips: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    chip: {\n        margin: 2,\n    },\n});\n\nfunction timeString(h, m = 0) {\n    let d = new Date();\n    d.setHours(h);\n    d.setMinutes(m);\n    return d.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n    });\n}\n\nclass EditBookings extends Component {\n    state = {\n        data: {\n            itemList: this.props.bookingDetails.purchaseItems.split(\",\"),\n            period:\n                this.props.bookingDetails.arrivalHour < 12\n                    ? \"Morning\"\n                    : this.props.bookingDetails.arrivalHour < 18\n                    ? \"Afternoon\"\n                    : \"Evening\",\n            slot: {\n                start: this.props.bookingDetails.slotGroupBegins,\n                end: this.props.bookingDetails.slotGroupEnds,\n            },\n        },\n        slotLabel: `${timeString(\n            this.props.bookingDetails.slotGroupBegins\n        )} - ${timeString(this.props.bookingDetails.slotGroupEnds)}`,\n        noticeBody: {},\n        isLoading: false,\n        submitted: false,\n        success: true,\n    };\n\n    formData = {\n        period: [\n            { label: \"Morning\", slot: { start: 0, end: 12 } },\n            { label: \"Afternoon\", slot: { start: 12, end: 18 } },\n            { label: \"Evening\", slot: { start: 18, end: 23 } },\n        ],\n    };\n\n    getSlotTimes = (period) => {\n        let slotTimeArr = [];\n        let stime = new Date();\n        const currentTime = new Date();\n        const gap = 60 * 60 * 1000;\n        if (!period)\n            period = this.formData.period.filter(\n                (c) => !c.label.localeCompare(this.state.data.period)\n            )[0].slot;\n        const duration = 3600 * 1000;\n        stime.setHours(period.start);\n        stime.setMinutes(0);\n        stime.setSeconds(0);\n        const {\n            openingHour,\n            openingMinute,\n            closingHour,\n            closingMinute,\n        } = this.props.data;\n        if (period.end < currentTime.getHours()) return [];\n        while (\n            stime.getHours() < period.end &&\n            stime.getHours() < closingHour\n        ) {\n            const start = new Date(stime);\n            const end = new Date(stime.getTime() + duration);\n            if (\n                start.getTime() < currentTime.getTime() ||\n                start.getHours() < openingHour\n            ) {\n                stime.setTime(stime.getTime() + gap);\n                continue;\n            }\n            let slot = {};\n            slot.interval = { start: start.getHours(), end: end.getHours() };\n            slot.label =\n                start.toLocaleTimeString(\"en-US\", {\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                    hour12: true,\n                }) +\n                \" - \" +\n                end.toLocaleTimeString(\"en-US\", {\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                    hour12: true,\n                });\n\n            slotTimeArr.push(slot);\n            //if (start.getHours() <= this.props.closingHour) break;\n            stime.setTime(stime.getTime() + gap);\n        }\n        //console.log(slotTimeArr);\n        return slotTimeArr;\n    };\n\n    handleBooking = async () => {\n        this.setState({ submitted: true, isLoading: true });\n        try {\n            const { data } = await updateBookings(\n                this.state.data,\n                this.props.bookingDetails.bookingId\n            );\n            this.setState({ noticeBody: data });\n            this.props.setSlotTime(data);\n        } catch (ex) {\n            console.log(\"ex logging\", ex);\n            this.setState({ noticeBody: ex.response.data, success: false });\n            console.log(this.state.noticeBody, ex.response.data);\n            //alert(\"An error occured, Try re signin and booking\");\n        }\n        this.setState({ isLoading: false });\n    };\n\n    handlePeriod = (e) => {\n        const data = { ...this.state.data };\n        data.period = e.target.value.label;\n        //data.slot = this.getSlotTimes(e.target.value.slot)[0] || \"\" ;\n        this.setState({ data, slotLabel: \"\" });\n    };\n\n    handleSlotTime = (e) => {\n        const data = { ...this.state.data };\n        const slot = this.getSlotTimes().find(\n            (time) => !time.label.localeCompare(e.target.value)\n        ).interval;\n        data.slot = slot;\n        this.setState({ data, slotLabel: e.target.value });\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        this.setState({ [input.name]: input.value });\n    };\n\n    handleClose = () => {\n        this.setState({\n            noticeBody: {},\n            isLoading: false,\n            submitted: false,\n            success: true,\n        });\n        this.props.handleClose();\n    }\n\n    render() {\n        const {  open, classes } = this.props;\n        const { data, slotLabel } = this.state;\n        const { period } = this.formData;\n        const {\n            handlePeriod,\n            handleSlotTime,\n            handleBooking,\n            handleClose,\n        } = this;\n\n        return (\n            <Dialog\n                maxWidth=\"xl\"\n                onClose={handleClose}\n                aria-labelledby=\"simple-dialog-title\"\n                open={open}\n                style={{ width: window.innerWidth * 0.6, margin: \"auto\" }}\n            >\n                {!this.state.submitted ? (\n                    <form style={{ width: \"100%\" }}>\n                        <Box\n                            style={{ width: \"100%\", backgroundColor: \"white\" }}\n                            m={2}\n                            p={1}\n                        >\n                            <Grid item container xs={12}>\n                                <Grid item xs={12} md={6}>\n                                    <FormControl\n                                        variant=\"outlined\"\n                                        className={classes.formControl}\n                                        required\n                                    >\n                                        <InputLabel id=\"SelectPeriod\">\n                                            Slot Type\n                                        </InputLabel>\n                                        <Select\n                                            labelId=\"SelectPeriod\"\n                                            id=\"SelectPeriod\"\n                                            value={\n                                                period.filter(\n                                                    (c) =>\n                                                        !c.label.localeCompare(\n                                                            data.period\n                                                        )\n                                                )[0]\n                                            }\n                                            onChange={handlePeriod}\n                                            label=\"Period\"\n                                        >\n                                            {period.map((time, i) => (\n                                                <MenuItem key={i} value={time}>\n                                                    {time.label}\n                                                </MenuItem>\n                                            ))}\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <FormControl\n                                        variant=\"outlined\"\n                                        required\n                                        className={classes.formControl}\n                                    >\n                                        <InputLabel id=\"SlotTime\">\n                                            Slot Time\n                                        </InputLabel>\n                                        <Select\n                                            labelId=\"SlotTime\"\n                                            id=\"SlotTime\"\n                                            value={slotLabel}\n                                            onChange={handleSlotTime}\n                                            label=\"Slot Time\"\n                                        >\n                                            {this.getSlotTimes().map(\n                                                (item, i) => (\n                                                    <MenuItem\n                                                        key={i}\n                                                        value={item.label}\n                                                    >\n                                                        {item.label}\n                                                    </MenuItem>\n                                                )\n                                            )}\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                        </Box>\n                        <Box\n                            borderRadius={5}\n                            style={{ width: \"100%\", backgroundColor: \"white\" }}\n                            m={2}\n                            p={1}\n                        >\n                            <Grid item container xs={12}>\n                                <Grid item xs={12}>\n                                    <Box>\n                                        {data.itemList.map((value, i) => (\n                                            <Chip\n                                                key={i}\n                                                label={value}\n                                                color=\"secondary\"\n                                                className={classes.chip}\n                                            />\n                                        ))}\n                                    </Box>\n                                </Grid>\n                            </Grid>\n                        </Box>\n                        <Box\n                            borderRadius={5}\n                            boxShadow={2}\n                            style={{ width: \"100%\", backgroundColor: \"white\" }}\n                            m={2}\n                            p={1}\n                        >\n                            <Typography>\n                                {data.itemList.length\n                                    ? `${data.itemList.length} items selected.`\n                                    : \"\"}\n                                <br />\n                                You'll be alloted a period within the slot you\n                                choosed.\n                            </Typography>\n                            <br />\n                            <Grid\n                                item\n                                container\n                                direction=\"row\"\n                                justify=\"center\"\n                            >\n                                <Button\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    onClick={handleBooking}\n                                >\n                                    Confirm Booking\n                                </Button>\n                            </Grid>\n                        </Box>\n                    </form>\n                ) : this.state.isLoading ? (\n                    <Box m={3}>\n                        <CircularProgress color=\"primary\" />\n                    </Box>\n                ) : (\n                    <SuccessNoticeBody\n                        data={this.state.noticeBody}\n                        error={!this.state.success}\n                    />\n                )}\n            </Dialog>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(EditBookings);\n\n// arrivalHour: 15;\n// arrivalMinute: 0;\n// arrivalTimeIST: 3;\n// deliveryHour: 15;\n// deliveryMinute: 30;\n// deliveryTimeIST: 3;\n// message: \"Booking updated successfully\";\n\nclass SuccessNoticeBody extends Component {\n    state = {};\n\n    render() {\n        if (this.props.error) {\n            const { message } = this.props.data;\n            return (\n                <Box m={2}>\n                    <Typography\n                        variant=\"h5\"\n                        style={{ margin: 20 }}\n                        color=\"error\"\n                        align=\"center\"\n                    >\n                        <b>{message}</b>\n                    </Typography>\n                </Box>\n            );\n        } else {\n            const {\n                arrivalHour,\n                arrivalMinute,\n                deliveryHour,\n                message,\n                deliveryMinute,\n            } = this.props.data;\n            return (\n                <Box m={2}>\n                    <Typography variant=\"h5\" align=\"center\" gutterBottom>\n                        <img\n                            src=\"https://www.huayeahfabric.com/wp-content/uploads/2019/06/success.gif\"\n                            style={{ height: 150, margin: \"auto\" }}\n                        />\n                        <br />\n                        Thank you for your order.\n                        <br />\n                        <p style={{ fontSize: 20 }}>\n                            You are alloted the slot <br />\n                            <b style={{ fontSize: 26 }}>\n                                {timeString(arrivalHour, arrivalMinute)} →{\" \"}\n                                {timeString(deliveryHour, deliveryMinute)}\n                            </b>\n                        </p>\n                    </Typography>\n                    <Typography variant=\"h6\" align=\"center\">\n                        <b>{message}</b>\n                    </Typography>\n                </Box>\n            );\n        }\n    }\n}\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { Divider } from \"@material-ui/core\";\nimport EditBookings from \"./editBookings\";\nimport { getShopDetails } from \"../../../../services/dataServices\";\n\nvar QRCode = require(\"qrcode.react\");\n\nconst useStyles = (theme) => ({\n    activeRoot: {\n        width: 250,\n        //inWidth: 200,\n        //background: \"#80ffd4\",\n        color: \"black\",\n        \"&:hover\": {\n            background: \"#efefef\",\n        },\n    },\n    expiredRoot: {\n        maxWidth: 250,\n        background: \"#ffff80\",\n        color: \"black\",\n        \"&:hover\": {\n            background: \"#ffe066\",\n        },\n    },\n    media: {\n        height: 150,\n        width: 150,\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        margin: \"auto\",\n    },\n    expand: {\n        transform: \"rotate(0deg)\",\n        marginLeft: \"auto\",\n        transition: theme.transitions.create(\"transform\", {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: \"rotate(180deg)\",\n    },\n    chips: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    chip: {\n        margin: 2,\n    },\n    margin: {\n        margin: theme.spacing(0.5),\n        padding: theme.spacing(1),\n    },\n});\n\nfunction timeString(h, m = 0) {\n    let d = new Date();\n    d.setHours(h);\n    d.setMinutes(m);\n    return d.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n    });\n}\n\nclass SlotCard extends Component {\n    state = {\n        expanded: false,\n        data: this.props.data,\n        shopData: {},\n        open: false,\n        isLoading: false,\n    };\n\n    async componentDidMount() {\n        this.setState({ isLoading: true });\n        try {\n            const { data } = await getShopDetails(this.props.data.shopId);\n            this.setState({ shopData: data[0] });\n        } catch (ex) {\n            alert(\"An error Occured. Check Internet or Re signin\");\n            console.log(ex);\n        }\n        this.setState({ isLoading: false });\n    }\n\n    handleSlotChange = newData => {\n        let data = { ...this.state.data };\n        data.arrivalHour = newData.arrivalHour;\n        data.arrivalMinute = newData.arrivalMinute;\n        data.deliveryHour = newData.deliveryHour;\n        data.deliveryMinute = newData.deliveryMinute;\n        this.setState({ data });\n    }\n\n    handleExpandClick = () => {\n        this.setState({ expanded: !this.state.expanded });\n    };\n\n    isEditable = () => {\n        return (\n            this.props.isExpired ||\n            this.state.isLoading\n        );\n    }\n\n    handleEdit = () => {\n        this.setState({ open: true });\n    }\n    handleClose = () => {\n        this.setState({ open: false });\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { expanded, data, open, isLoading, shopData } = this.state;\n        const { handleClose, handleEdit,handleSlotChange } = this;\n        return (\n            <Card\n                className={classes.activeRoot}\n                onMouseOver={this.handleExpandClick}\n                onMouseOut={this.handleExpandClick}\n            >\n                {isLoading ? (\n                    \"waiting for network..\"\n                ) : (\n                    <CardHeader title={shopData.shopName} />\n                )}\n                <Grid justify=\"center\">\n                    <QRCode\n                        value={data.bookingId+\"@@##$$\"+data.otp}\n                        style={{ margin: \"auto\" }}\n                        className={classes.media}\n                    />\n                    <Typography variant=\"body1\" align=\"center\" style={{margin:10}}><b>OTP: {data.otp}</b></Typography>\n                </Grid>\n\n                <CardContent>\n                    <Typography\n                        variant=\"h6\"\n                        justify=\"center\"\n                        align=\"center\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                    >\n                        <b>\n                            {timeString(data.arrivalHour, data.arrivalMinute)} →{\" \"}\n                            {timeString(data.deliveryHour, data.deliveryMinute)}\n                        </b>\n                        <br />\n                    </Typography>\n                </CardContent>\n                <CardActions disableSpacing>\n                    <Button\n                        disabled={this.isEditable()}\n                        variant=\"outlined\"\n                        className={classes.margin}\n                        color=\"primary\"\n                        startIcon={<EditIcon />}\n                        onClick={handleEdit}\n                    >\n                        Edit\n                    </Button>\n\n                    <Button\n                        variant=\"outlined\"\n                        className={classes.margin}\n                        color=\"secondary\"\n                        startIcon={<DeleteIcon />}\n                        onClick={()=> this.props.handleDelete(data.bookingId)}\n                    >\n                        Delete\n                    </Button>\n                    <EditBookings\n                        data={this.state.shopData}\n                        bookingDetails={data}\n                        open={open}\n                        handleClose={handleClose}\n                        setSlotTime={handleSlotChange}\n                    />\n                    <IconButton\n                        className={clsx(classes.expand, {\n                            [classes.expandOpen]: expanded,\n                        })}\n                        aria-expanded={expanded}\n                        aria-label=\"show more\"\n                    >\n                        <ExpandMoreIcon />\n                    </IconButton>\n                </CardActions>\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent className={classes.chips}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            Order summary\n                        </Typography>\n                        <hr />\n                        <br />\n                        <br />\n                        {data.purchaseItems.split(\",\").map((value) => (\n                            <Chip\n                                key={value}\n                                label={value}\n                                color=\"primary\"\n                                className={classes.chip}\n                            />\n                        ))}\n                    </CardContent>\n                </Collapse>\n                <Divider />\n            </Card>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(SlotCard);\n","import React, { Component } from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\nimport SlotCard from \"./components/slotCard\";\nimport { getBookedSlotCustomer } from \"../../../utils/auth\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { getMyBookings } from \"../../../services/dataServices\";\nimport { deleteSlots } from \"../../../services/userService\";\n\nclass MyBookings extends Component {\n    state = {\n        slotData: [],\n        showPastSlot: false,\n        editDialogue: false,\n        isLoading: false,\n        errorMessage: \"\",\n    };\n\n    async componentDidMount() {\n        this.setState({ isLoading: true });\n        try {\n            const response = await getMyBookings();\n            console.log(response.data);\n            this.setState({ slotData: response.data, errorMessage: \"\" });\n        } catch (ex) {\n            console.log(ex.response);\n            this.setState({\n                errorMessage:\n                    \"Firebase ID token has expired. Get a fresh ID token by RE SIGN IN.\",\n            });\n        }\n        this.setState({ isLoading: false });\n    }\n\n    isExpired = (data) => {\n        const ctime = new Date();\n        let slotStartTme = new Date(data.createdAt);\n        slotStartTme.setHours(data.arrivalHour);\n        slotStartTme.setMinutes(data.arrivalMinute);\n        return ctime.getTime() >= slotStartTme.getTime();\n    };\n\n    handleDelete = async id => {\n        const copy = [...this.state.slotData];\n        this.setState({ slotData: copy.filter(c => c.bookingId !== id) });\n        console.log(\n            \"data updated\",\n            this.state.slotData\n        );\n        try {\n            console.log(copy.length);\n            const { data } = await deleteSlots(id);\n            console.log(data);\n            this.forceUpdate();\n        } catch (ex) {\n            alert(\"An error occured\");\n            console.log(ex.response);\n            this.setState({ slotData: copy });\n        }\n    }\n\n    numberOfActiveBookngs = () => {\n        let count = 0;\n        for (const item of this.state.slotData) {\n            if (!this.isExpired(item)) count++;\n        }\n        return count;\n    };\n\n    showPastSlot = () => {\n        this.setState({ showPastSlot: !this.state.showPastSlot });\n    };\n\n    render() {\n        console.log(\"render the slots\",this.state.slotData);\n        const { slotData: data } = this.state;\n        return (\n            <Grid container spacing={2} justify=\"center\">\n                {this.state.isLoading ? (\n                    <Grid item>\n                        <CircularProgress />\n                    </Grid>\n                ) : this.state.errorMessage ? (\n                    <h2>{this.state.errorMessage}</h2>\n                ) : (\n                    <React.Fragment>\n                        <Grid xs={12} item style={{ margin: 6 }}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"large\"\n                            >{`Active Slots  ${this.numberOfActiveBookngs()}`}</Button>\n                        </Grid>\n                        {data.map(\n                            (cards, i) =>\n                                this.isExpired(cards) || (\n                                    <Grid key={i} item md={4} lg={2}>\n                                        <SlotCard\n                                            data={cards}\n                                            isExpired={this.isExpired(cards)}\n                                            handleDelete={this.handleDelete}\n                                        />\n                                    </Grid>\n                                )\n                        )}\n                        <Grid xs={12} item style={{ margin: 6 }}>\n                            <Button\n                                variant=\"contained\"\n                                onClick={this.showPastSlot}\n                                label=\"See Past Slots\"\n                                color=\"secondary\"\n                            >\n                                See Past Slots\n                            </Button>\n                        </Grid>\n                        {this.state.showPastSlot &&\n                            data.map(\n                                (cards, i) =>\n                                    this.isExpired(cards) && (\n                                        <Grid key={i} item sm={4} md={3}>\n                                            <SlotCard\n                                                data={cards}\n                                                isExpired={this.isExpired(\n                                                    cards\n                                                )}\n                                                handleDelete={this.handleDelete}\n                                            />\n                                        </Grid>\n                                    )\n                            )}\n                    </React.Fragment>\n                )}\n            </Grid>\n        );\n    }\n}\n\nexport default MyBookings;\n","import React, { Component } from \"react\";\nimport { Grid, Button, Box } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { userDetails } from \"../../../services/userService\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n\n\nconst useStyles = (theme) => ({\n    largeAvatar: {\n        width: theme.spacing(35),\n        height: theme.spacing(35),\n        margin: \"auto\",\n    },\n});\nclass MyProfile extends Component {\n    state = {\n        userData: {},\n        isLoading: false,\n        edit: false,\n    };\n\n    async componentDidMount() {\n        this.setState({ isLoading: true });\n        try {\n            const response = await userDetails();\n            this.setState({ userData: response.data.userCredentials });\n            console.log(response);\n        } catch (ex) {\n            console.log(ex.response);\n        }\n        this.setState({ isLoading: false });\n    }\n\n    getTime = (t) => {\n        const d = new Date(t);\n        return d.toDateString();\n    };\n\n    handleClick = () => {\n        this.setState({ edit: true });\n    };\n\n    handleClose = () => {\n        this.setState({ edit: false });\n    };\n\n    // address: \"undefined, Durgapur, West Bengal [WB], India\";\n    // createdAt: \"2020-07-17T06:34:53.036Z\";\n    // email: \"skshahnawaz2909@gmail.com\";\n    // firstName: \"Sk\";\n    // gender: \"Male\";\n    // imageUrl: \"https://picsum.photos/200\";\n    // lastName: \"Shahnawaz\";\n    // phoneNumber: \"6297939928\";\n    // userId: \"iS3rFzmTr6MPbySvMjaiBlR8MDO2\";\n\n    render() {\n        const { classes } = this.props;\n        const { userData } = this.state;\n        return (\n            <Grid container justify=\"center\" spacing={5}>\n                {this.state.isLoading ? (\n                    <Grid item style={{ marginTop: 20 }}>\n                        <CircularProgress color=\"secondary\" />\n                    </Grid>\n                ) : (\n                    <React.Fragment>\n                        {\" \"}\n                        <Grid item xs={12}>\n                            <div style={{ padding: 10 }}>\n                                <Avatar\n                                    src={\n                                        userData.imageUrl ||\n                                        \"https://picsum.photos/500/500\"\n                                    }\n                                    className={classes.largeAvatar}\n                                />\n                                <br />\n                                <Typography\n                                    variant=\"h3\"\n                                    component=\"h3\"\n                                    align=\"center\"\n                                >\n                                    {userData.firstName +\n                                        \" \" +\n                                        userData.lastName}\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid xs={12} item>\n                            <Typography variant=\"h6\" align=\"center\">\n                                {userData.address}\n                            </Typography>\n                        </Grid>\n                        <Grid\n                            item\n                            container\n                            justify=\"center\"\n                            xs={8}\n                            direction=\"row\"\n                        >\n                            <Grid\n                                item\n                                sm={4}\n                                md={4}\n                                lg={4}\n                                xl={4}\n                                container\n                                alignItems=\"center\"\n                                direction=\"column\"\n                            >\n                                <Grid item>\n                                    <EmailIcon />\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant=\"h6\" align=\"center\">\n                                        {userData.email}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid\n                                item\n                                sm={4}\n                                md={4}\n                                lg={4}\n                                xl={4}\n                                container\n                                alignItems=\"center\"\n                                direction=\"column\"\n                            >\n                                <Grid item>\n                                    <PhoneIcon />\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant=\"h6\" align=\"center\">\n                                        {userData.phoneNumber}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid\n                            item\n                            xs={6}\n                            container\n                            spacing={3}\n                            alignItems=\"center\"\n                            direction=\"column\"\n                        >\n                            <Grid item>\n                                <Button\n                                    onClick={this.handleClick}\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Edit\n                                </Button>\n                            </Grid>\n                            <Grid item>\n                                <Typography\n                                    variant=\"caption\"\n                                    color=\"textSecondary\"\n                                >\n                                    Member since{\" \"}\n                                    {this.getTime(userData.createdAt)}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <EditForm\n                            open={this.state.edit}\n                                handleClose={this.handleClose}\n                                data={userData}\n                        />\n                    </React.Fragment>\n                )}\n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(MyProfile);\n\nclass EditForm extends Component {\n    state = {\n        data: {\n            firstName: this.props.data.firstName,\n            lastName: this.props.data.lastName,\n            phoneNumber: this.props.data.phoneNumber,\n            address: this.props.data.address,\n        },\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        let data = { ...this.state.data };\n        data[input.name] = input.value;\n        this.setState({ data });\n    };\n\n    handleSelect = ({ target: { name, value } }) => {\n        let data = { ...this.state.data };\n        data[name] = value;\n        this.setState({ data });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(\"Registered\", this.state);\n        this.props.handleClose();\n    };\n\n    updateLocation = (addr) => {\n        let data = { ...this.state.data };\n        data[\"address\"] = addr.description;\n        this.setState({ data });\n        localStorage.setItem(\"userAddress\", addr.description);\n    };\n\n    render() {\n        const { handleClose, open } = this.props;\n        const { data } = this.state;\n        return (\n            <Dialog\n                onClose={handleClose}\n                aria-labelledby=\"simple-dialog-title\"\n                open={open}\n            >\n                <Box m={2}>\n                    <form\n                        style={{ width: \"100%\", marginTop: 5 }}\n                        noValidate\n                        onSubmit={this.handleSubmit}\n                    >\n                        <Grid container spacing={2}>\n                            <Box\n                                borderColor=\"primary.main\"\n                                border={1}\n                                borderRadius=\"borderRadius\"\n                                m={1}\n                                p={2}\n                                style={{ width: \"100%\" }}\n                            >\n                                <Typography variant=\"caption\" display=\"block\">\n                                    Name and Contact Details\n                                </Typography>\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            name=\"firstName\"\n                                            value={data.firstName}\n                                            variant=\"filled\"\n                                            required\n                                            fullWidth\n                                            id=\"firstName\"\n                                            label=\"First Name\"\n                                            autoFocus\n                                            onChange={this.handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            variant=\"filled\"\n                                            required\n                                            fullWidth\n                                            id=\"lastName\"\n                                            label=\"Last Name\"\n                                            name=\"lastName\"\n                                            value={data.lastName}\n                                            onChange={this.handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={12}>\n                                        <TextField\n                                            variant=\"filled\"\n                                            required\n                                            fullWidth\n                                            value={data.phoneNumber}\n                                            id=\"phoneNumber\"\n                                            label=\"Contact Number\"\n                                            name=\"phoneNumber\"\n                                            onChange={this.handleChange}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Box>\n                            <Box\n                                borderColor=\"primary.main\"\n                                border={1}\n                                borderRadius=\"borderRadius\"\n                                m={1}\n                                p={2}\n                                style={{ width: \"100%\" }}\n                            >\n                                <Typography variant=\"caption\" display=\"block\">\n                                    Address\n                                </Typography>\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12}>\n                                        <Paper\n                                            component=\"form\"\n                                            style={{\n                                                padding: \"2px 4px\",\n                                                display: \"flex\",\n                                                alignItems: \"center\",\n                                                width: \"100%\",\n                                            }}\n                                        >\n                                            <IconButton\n                                                type=\"submit\"\n                                                style={{ padding: 5 }}\n                                                aria-label=\"search\"\n                                            >\n                                                <SearchIcon />\n                                            </IconButton>\n                                            <GooglePlacesAutocomplete\n                                                onSelect={this.updateLocation}\n                                            />\n                                        </Paper>\n                                    </Grid>\n                                </Grid>\n                            </Box>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={{ marginTop: 15 }}\n                        >\n                            Submit\n                        </Button>\n                    </form>\n                </Box>\n            </Dialog>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport http from \"../../../services/httpServices\";\nimport { withRouter } from \"react-router-dom\";\nimport { logout } from \"../../../services/userService\";\n\nclass Logout extends Component {\n  state = {};\n  async componentDidMount() {\n    try {\n      const response = await logout();\n      console.log(response);\n    } catch (ex) {\n      console.log(ex);\n    }\n    localStorage.clear();\n    window.location = \"/\";\n  }\n  render() {\n    return null;\n  }\n}\n\nexport default withRouter(Logout);\n","import React, { Component } from 'react';\nimport { Typography, Box } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\n\n\nclass Address extends Component {\n    state = {  }\n    render() { \n        const { address, phoneNumber, ownerName } = this.props.data;\n        return (\n            <Grid item>\n                <Box\n                    borderRadius={5}\n                    boxShadow={3}\n                    padding={2}\n                    style={{ backgroundColor: \"white\" }}\n                >\n                    <Typography\n                        variant=\"body1\"\n                        style={{ fontSize: 18, borderRadius: 5 }}\n                    >\n                        <b>{ownerName}</b>\n                        <br />\n                        {address}\n                        <br />\n                        Contact: {phoneNumber}\n                    </Typography>\n                </Box>\n            </Grid>\n        );\n    }\n}\n \nexport default Address;","import React, { Component } from 'react';\n\nclass Overview extends Component {\n    state = {  }\n    render() { \n        return ( \n            <p>Overview</p>\n         );\n    }\n}\n \nexport default Overview;","import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Box } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { bookNewSlot } from \"../../../../services/userService\";\nimport CurrentLocation from \"./getLocation\";\n\nconst useStyles = (theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        width: \"90%\",\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginTop: 10,\n        //backgroundColor: \"#d96477\",\n    },\n    chips: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    chip: {\n        margin: 2,\n    },\n});\n\nclass Order extends Component {\n    state = {\n        data: {\n            itemList: [],\n            period: \"Morning\",\n            slot: {},\n        },\n        slotLabel: \"\",\n        item: \"\",\n        openModal: false,\n        dialogueData: {},\n        errors:{},\n    };\n\n    // componentDidMount() {\n    //     let data = { ...this.state.data };\n    //     data.period = this.periodData()[0].label;\n    //     this.setState({ data });\n    // }\n\n    formData = {\n        period: [\n            { label: \"Morning\", slot: { start: 0, end: 12 } },\n            { label: \"Afternoon\", slot: { start: 12, end: 18 } },\n            { label: \"Evening\", slot: { start: 18, end: 23 } },\n        ],\n    };\n\n    periodData = () => {\n        const {\n            openingHour,\n            openingMinute,\n            closingHour,\n            closingMinute,\n        } = this.props.data;\n        let period = [\n            { label: \"Morning\", slot: { start: {h:0,m:0}, end: {h:12,m:0} } },\n            { label: \"Afternoon\", slot: { start: {h:12,m:0}, end: {h:18,m:0} } },\n            { label: \"Evening\", slot: { start: {h:18,m:0}, end: {h:24,m:0} } },\n        ];\n        if (openingHour < 12 && openingHour > 0) {\n            period[0].slot.start = { h: openingHour, m: openingMinute };\n        } else if (openingMinute >= 12 && openingHour < 18) {\n            period.splice(0, 1);\n            period[0].slot.start = { h: openingHour, m: openingMinute };\n        }else if (openingMinute >= 18 && openingHour < 24) {\n            period.splice(0, 2);\n            period[0].slot.start = { h: openingHour, m: openingMinute };\n        }\n\n        if (closingHour > 0 && closingHour <= 12) {\n            period[period.length-1].slot.end = { h: closingHour, m: closingMinute };\n            period.splice(1, 2);\n        } else if (closingHour > 12 && closingHour <= 18) {\n            period[period.length - 1].slot.end = {\n                h: closingHour,\n                m: closingMinute,\n            };\n            period.splice(2, 1);\n        }else if (closingHour > 18 && closingHour <= 24) {\n            period[period.length - 1].slot.end = {\n                h: closingHour,\n                m: closingMinute,\n            };\n        }\n        \n        return period;  \n    };\n\n    getSlotTimes = (period) => {\n        let slotTimeArr = [];\n        let stime = new Date();\n        const currentTime = new Date();\n        const gap = 60*60 * 1000;\n        if (!period)\n            period = this.formData.period.filter(\n                (c) => !c.label.localeCompare(this.state.data.period)\n            )[0].slot;\n        const duration = 3600 * 1000;\n        stime.setHours(period.start);\n        stime.setMinutes(0);\n        stime.setSeconds(0);\n        const { openingHour, openingMinute, closingHour, closingMinute } = this.props.data;\n        if (period.end < currentTime.getHours()) return [];\n        while (stime.getHours() < period.end && stime.getHours()<closingHour) {\n            const start = new Date(stime);\n            const end = new Date(stime.getTime() + duration);\n            if (start.getTime() < currentTime.getTime() || start.getHours()<openingHour ) {\n                stime.setTime(stime.getTime() + gap);\n                continue;\n            }\n            let slot = {};\n            slot.interval = { start: start.getHours(), end: end.getHours() };\n            slot.label =\n                start.toLocaleTimeString(\"en-US\", {\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                    hour12: true,\n                }) +\n                \" - \" +\n                end.toLocaleTimeString(\"en-US\", {\n                    hour: \"numeric\",\n                    minute: \"numeric\",\n                    hour12: true,\n                });\n            \n            slotTimeArr.push(slot);\n            //if (start.getHours() <= this.props.closingHour) break;\n            stime.setTime(stime.getTime() + gap);\n        }\n        //console.log(slotTimeArr);\n        return slotTimeArr;\n    };\n\n    handlePeriod = (e) => {\n        const data = { ...this.state.data };\n        data.period = e.target.value.label;\n        //data.slot = this.getSlotTimes(e.target.value.slot)[0] || \"\" ;\n        this.setState({ data });\n    };\n\n    handleAddItem = () => {\n        const data = { ...this.state.data };\n        if (this.state.item) data.itemList.push(this.state.item);\n        this.setState({ data, item: \"\",errors:{} });\n    };\n\n    handleSlotTime = (e) => {\n        const data = { ...this.state.data };\n        const slot = this.getSlotTimes().find(\n            (time) => !time.label.localeCompare(e.target.value)\n        ).interval;\n        data.slot = slot;\n        this.setState({ data, slotLabel: e.target.value });\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        this.setState({ [input.name]: input.value });\n    };\n\n    handleDelete = (item) => {\n        const data = { ...this.state.data };\n        const index = data.itemList.indexOf(item);\n        data.itemList.splice(index, 1);\n        this.setState({ data });\n    };\n\n    handleBooking = async () => {\n        try {\n            const { data } = await bookNewSlot(\n                this.state.data,\n                this.props.data.shopId\n            );\n            this.setState({ dialogueData: data });\n            this.setState({ openModal: true });\n        } catch (ex) {\n            console.log(ex);\n            this.setState({ errors: ex.response.data });\n            //alert(\"An error occured, Try re signin and booking\");\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ openModal: false });\n    };\n\n    render() {\n        //console.log(\"order:\", this.periodData());\n        const { data, item, openModal, slotLabel } = this.state;\n        const  {period}  = this.formData;\n        const { classes } = this.props;\n        const {\n            handlePeriod,\n            handleSlotTime,\n            handleAddItem,\n            handleDelete,\n            handleBooking,\n            handleClose,\n        } = this;\n        return (\n            <Grid container spacing={2} style={{ paddingTop: 15 }}>\n                <form style={{ width: \"100%\" }}>\n                    {/* <CurrentLocation /> */}\n                    <br />\n                    <Box\n                        borderRadius={5}\n                        boxShadow={5}\n                        style={{ width: \"100%\", backgroundColor: \"white\" }}\n                        m={1}\n                        p={1}\n                    >\n                        <Grid item container xs={12}>\n                            <Grid item xs={12} md={6}>\n                                <FormControl\n                                    variant=\"outlined\"\n                                    className={classes.formControl}\n                                    required\n                                >\n                                    <InputLabel id=\"SelectPeriod\">\n                                        Slot Type\n                                    </InputLabel>\n                                    <Select\n                                        labelId=\"SelectPeriod\"\n                                        id=\"SelectPeriod\"\n                                        value={\n                                            period.filter(\n                                                (c) =>\n                                                    !c.label.localeCompare(\n                                                        data.period\n                                                    )\n                                            )[0]\n                                        }\n                                        onChange={handlePeriod}\n                                        label=\"Period\"\n                                    >\n                                        {period.map((time, i) => (\n                                            <MenuItem key={i} value={time}>\n                                                {time.label}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <FormControl\n                                    variant=\"outlined\"\n                                    required\n                                    className={classes.formControl}\n                                >\n                                    <InputLabel id=\"SlotTime\">\n                                        Slot Time\n                                    </InputLabel>\n                                    <Select\n                                        labelId=\"SlotTime\"\n                                        id=\"SlotTime\"\n                                        value={slotLabel}\n                                        onChange={handleSlotTime}\n                                        label=\"Slot Time\"\n                                    >\n                                        {this.getSlotTimes().map((item, i) => (\n                                            <MenuItem\n                                                key={i}\n                                                value={item.label}\n                                            >\n                                                {item.label}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderRadius={5}\n                        boxShadow={5}\n                        style={{ width: \"100%\", backgroundColor: \"white\" }}\n                        m={1}\n                        p={1}\n                    >\n                        <Grid item container xs={12}>\n                            <Grid item xs={12} md={8}>\n                                <TextField\n                                    id=\"standard-basic\"\n                                    name=\"item\"\n                                    value={item}\n                                    onChange={this.handleChange}\n                                    label=\"Item\"\n                                    className={classes.formControl}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={4}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    size=\"large\"\n                                    onClick={handleAddItem}\n                                    className={classes.button}\n                                    startIcon={<AddIcon />}\n                                >\n                                    add\n                                </Button>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Box>\n                                    {data.itemList.map((value, i) => (\n                                        <Chip\n                                            key={i}\n                                            label={value}\n                                            color=\"secondary\"\n                                            onDelete={() => handleDelete(value)}\n                                            className={classes.chip}\n                                        />\n                                    ))}\n                                </Box>\n                            </Grid>\n                            {this.state.errors &&\n                            this.state.errors.purchaseItems ? (\n                                <Grid item xs={12}>\n                                    <Typography variant=\"body2\" color=\"error\">\n                                        {this.state.errors.purchaseItems}\n                                    </Typography>\n                                </Grid>\n                            ) : null}\n                        </Grid>\n                    </Box>\n                    <Box\n                        borderRadius={5}\n                        boxShadow={2}\n                        style={{ width: \"100%\", backgroundColor: \"white\" }}\n                        m={1}\n                        p={3}\n                    >\n                        <Typography>\n                            {data.itemList.length\n                                ? `${data.itemList.length} items selected.`\n                                : \"\"}\n                            <br />\n                            You'll be alloted a period within the slot you\n                            choosed.\n                        </Typography>\n                        <br />\n                        <Grid item container direction=\"row\" justify=\"center\">\n                            <Button\n                                disabled={Object.keys(this.state.data.slot).length===0}\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={handleBooking}\n                            >\n                                Confirm Booking\n                            </Button>\n                        </Grid>\n                        <Dialog\n                            open={openModal}\n                            onClose={handleClose}\n                            aria-labelledby=\"simple-modal-title\"\n                            aria-describedby=\"simple-modal-description\"\n                        >\n                            <DialogContent>\n                                <ModalNoticeBody\n                                    data={this.state.dialogueData}\n                                />\n                            </DialogContent>\n                        </Dialog>\n                    </Box>\n                </form>\n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(Order);\n\nfunction timeString(h, m) {\n    let d = new Date();\n    d.setHours(h);\n    d.setMinutes(m);\n    return d.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n    });\n}\n\nclass ModalNoticeBody extends Component {\n    state = {};\n\n    render() {\n        const {\n            arrivalHour,\n            arrivalMinute,\n            deliveryHour,\n            bookingId,\n            customerId,\n            duration,\n            deliveryMinute,\n        } = this.props.data;\n        return (\n            <Box>\n                <Typography variant=\"h5\" align=\"center\" gutterBottom>\n                    <img\n                        src=\"https://www.huayeahfabric.com/wp-content/uploads/2019/06/success.gif\"\n                        style={{ height: 150, margin: \"auto\" }}\n                    />\n                    <br />\n                    Thank you for your order.\n                    <br />\n                    <p style={{ fontSize: 20 }}>\n                        You are alloted the slot <br />\n                        <b style={{ fontSize: 26 }}>\n                            {timeString(arrivalHour, arrivalMinute)} →{\" \"}\n                            {timeString(deliveryHour, deliveryMinute)}\n                        </b>\n                    </p>\n                </Typography>\n                <Typography variant=\"h6\" align=\"center\">\n                    Your Booking Id: <b>{bookingId}</b>\n                </Typography>\n            </Box>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\n\n\nconst useStyles = (theme) => ({\n    root: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        width:'100%',\n        justifyContent: \"space-around\",\n        overflow: \"hidden\",\n        marginTop:20,\n        backgroundColor: theme.palette.background.paper,\n    },\n    // gridList: {\n    //     width: 500,\n    //     height: 450,\n    // },\n});\n\nclass Image extends Component {\n    state = {};\n    tileData = [\n        {\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 2,\n        },{\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 1,\n        },{\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 1,\n        },{\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 1,\n        },{\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 1,\n        },{\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 1,\n        },{\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 2,\n        },{\n            img: \"https://picsum.photos/\" + Math.round(Math.random(0, 1) * 400 + 200),\n            title: \"Image\",\n            author: \"author\",\n            cols: 3,\n        },\n    ];\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <GridList\n                    cellHeight={250}\n                    //className={classes.gridList}\n                    cols={3}\n                >\n                    {this.tileData.map((tile) => (\n                        <GridListTile\n                            key={tile.img}\n                            cols={tile.cols || 1}\n                        >\n                            <img src={tile.img} alt={tile.title} />\n                        </GridListTile>\n                    ))}\n                </GridList>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Image);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Box } from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport Button from \"@material-ui/core/Button\";\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport SentimentDissatisfiedIcon from \"@material-ui/icons/SentimentDissatisfied\";\nimport SentimentSatisfiedIcon from \"@material-ui/icons/SentimentSatisfied\";\nimport SentimentSatisfiedAltIcon from \"@material-ui/icons/SentimentSatisfiedAltOutlined\";\nimport SentimentVerySatisfiedIcon from \"@material-ui/icons/SentimentVerySatisfied\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { getReviews } from '../../../../services/dataServices';\n\n\nclass Review extends Component {\n    state = {\n        data: [],\n        sortType: \"Newest First\",\n        isLoading:false,\n    };\n\n    async componentDidMount() {\n        this.setState({ isLoading: true });\n        try {\n            const { data } = await getReviews(this.props.id);\n            this.setState({ data });\n        } catch (ex) {\n            console.log(ex.response);\n        }\n        this.setState({ isLoading: false });\n    }\n\n    sorting = [\n        \"Newest First\",\n        \"Oldest First\",\n        \"Highest Rated\",\n        \"Lowest Rated\"\n    ];\n\n    handleChange = event => {\n        this.setState({ sortType: event.target.value });\n    }\n\n    render() {\n        return (\n            <Grid container direction=\"row\" spacing={5} lg sm md xs>\n                {this.state.isLoading ? (\n                    <Grid item container direction=\"row\" justify=\"center\" style={{marginTop:10}}>\n                        <CircularProgress />\n                    </Grid>\n                ) : (\n                    <React.Fragment>\n                        <FormControl\n                            variant=\"standard\"\n                            style={{ marginLeft: 30, marginTop: 20 }}\n                            //className={classes.formControl}\n                        >\n                            <InputLabel id=\"demo-simple-select-filled-label\">\n                                Sort By\n                            </InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-filled-label\"\n                                id=\"demo-simple-select-filled\"\n                                value={this.state.sortType}\n                                onChange={this.handleChange}\n                            >\n                                {this.sorting.map((value, i) => (\n                                    <MenuItem key={i} value={value}>\n                                        {value}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                        {this.state.data.map((val) => (\n                            <React.Fragment>\n                                <ReviewCard key={val.ratingId} data={val} />\n                                <Divider />\n                            </React.Fragment>\n                        ))}\n                    </React.Fragment>\n                )}\n            </Grid>\n        );\n    }\n}\n\nexport default Review;\n\n\n\nconst customIcons = {\n    1: {\n        icon: <SentimentVeryDissatisfiedIcon />,\n        label: \"Very Dissatisfied\",\n    },\n    2: {\n        icon: <SentimentDissatisfiedIcon />,\n        label: \"Dissatisfied\",\n    },\n    3: {\n        icon: <SentimentSatisfiedIcon />,\n        label: \"Neutral\",\n    },\n    4: {\n        icon: <SentimentSatisfiedAltIcon />,\n        label: \"Satisfied\",\n    },\n    5: {\n        icon: <SentimentVerySatisfiedIcon />,\n        label: \"Very Satisfied\",\n    },\n};\nfunction IconContainer(props) {\n    const { value, ...other } = props;\n    return <span {...other}>{customIcons[value].icon}</span>;\n}\n\nIconContainer.propTypes = {\n    value: PropTypes.number.isRequired,\n};\n\n\nclass ReviewCard extends Component {\n    state = {\n        data: {},\n        liked: false,\n    };\n\n    handleLike = () => {\n        this.setState({ liked: !this.state.liked });\n    };\n\n    date = str => {\n        const options = {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\",\n        };\n        let d = new Date(str);\n        return d.toLocaleDateString(\"en-US\", options);\n    }\n\n    // createdAt: \"2020-07-20T13:15:35.544Z\";\n    // customerId: \"iS3rFzmTr6MPbySvMjaiBlR8MDO2\";\n    // customerName: \"Sk Shahnawaz\";\n    // imageUrl: \"https://picsum.photos/200\";\n    // rating: 5;\n    // ratingId: \"zKb44YHvLhhfBlnYnwER\";\n    // review: \"okay delivery\";\n\n    render() {\n        const {\n            customerName:name,\n            review,\n            rating,\n            imageUrl,\n            createdAt,\n            customerId,\n            ratingId,\n        } = this.props.data;\n        return (\n\n            <Grid\n                container\n                item\n                direction=\"column\"\n                lg={12}\n                sm={12}\n                md={12}\n                xl={12}\n            >\n                <Box borderRadius={5} style={{ padding: 8, width: \"100%\" }}>\n                    <Grid\n                        container\n                        item\n                        direction=\"row\"\n                        lg={12}\n                        sm={12}\n                        md={12}\n                        xl={12}\n                        spacing={5}\n                    >\n                        <Grid\n                            item\n                            container\n                            direction=\"row\"\n                            justify=\"flex-start\"\n                            lg={8}\n                            xl={8}\n                            spacing={2}\n                            sm={8}\n                        >\n                            <Grid item xs={2}>\n                                <Avatar\n                                    src={imageUrl}\n                                    style={{ margin: 5 }}\n                                />\n                            </Grid>\n                            <Grid\n                                item\n                                container\n                                direction=\"column\"\n                                xs={12}\n                                lg={8}\n                                xl={8}\n                            >\n                                <Typography component=\"h2\" variant=\"h5\">\n                                    {name}\n                                </Typography>\n                                <Typography\n                                    variant=\"subtitle1\"\n                                    color=\"textSecondary\"\n                                >\n                                    {this.date(createdAt)}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid\n                            item\n                            container\n                            lg={4}\n                            xl={4}\n                            sm={4}\n                            justify=\"flex-end\"\n                            alignItems=\"center\"\n                            spacing={1}\n                        >\n                            <Grid item>\n                                <Rating\n                                    name=\"ratings\"\n                                    defaultValue={rating}\n                                    readOnly\n                                    style={{ paddingTop: 4, color: \"#ff065c\" }}\n                                    getLabelText={(value) =>\n                                        customIcons[value].label\n                                    }\n                                    IconContainerComponent={IconContainer}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <Typography variant=\"h6\">\n                                    <b>{rating}</b>\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid>\n                        <Typography\n                            variant=\"subtitle1\"\n                            paragraph\n                            style={{ marginTop: 20 }}\n                        >\n                            {review}\n                        </Typography>\n                        <Grid\n                            container\n                            spacing={2}\n                            style={{ marginBottom: 10 }}\n                        >\n                            <Grid item>\n                                <Box\n                                    borderRadius={15}\n                                    style={{\n                                        backgroundImage: `url(${\"https://picsum.photos/200/150\"})`,\n                                        width: \"200px\",\n                                        height: \"150px\",\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <Box\n                                    borderRadius={15}\n                                    style={{\n                                        backgroundImage: `url(${\"https://picsum.photos/201/150\"})`,\n                                        width: \"200px\",\n                                        height: \"150px\",\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid>\n                        <Button\n                            color=\"secondary\"\n                            onClick={this.handleLike}\n                            startIcon={\n                                this.state.liked ? (\n                                    <ThumbUpAltIcon />\n                                ) : (\n                                    <ThumbUpAltOutlinedIcon />\n                                )\n                            }\n                        >\n                            like\n                        </Button>\n                        <Typography variant=\"caption\">\n                            {Math.round(Math.random(0, 1) * 500)} Likes\n                        </Typography>\n                    </Grid>\n                </Box>\n                <Divider style={{ width: \"90%\", margin: \"auto\" }} />\n            </Grid>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { Typography, Box, Button } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { giveReview } from '../../../../services/userService';\n\n\nclass GiveReview extends Component {\n    state = { write: false, reviewText: \"\", ratings: 0 };\n\n    handleClick = () => {\n        if (!localStorage.getItem(\"userLogged\")) {\n            alert(\"Please Sign in to review\");\n            window.location = \"/signin\";\n        } else {\n            if (!this.state.write) this.setState({ write: !this.state.write });\n            else this.handleSubmit();\n        }\n    };\n\n    handleSubmit = async () => {\n        this.setState({ write: !this.state.write });\n        try {\n            const response = await giveReview(this.state.ratings, this.props.id, this.state.reviewText);\n            console.log(response.data);\n            alert(\"Submitted\");\n        } catch (ex) {\n            alert(ex.response.data);\n            console.log(ex.response);\n        }\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        this.setState({ [input.name]: input.value });\n    };\n\n    handleRating = (event, value) => {\n        this.setState({ ratings: value });\n    }\n\n    render() {\n        return (\n            <Grid item>\n                <Box\n                    borderRadius={5}\n                    boxShadow={3}\n                    padding={2}\n                    style={{ backgroundColor: \"white\", width: \"100%\" }}\n                >\n                    <Typography style={{ fontSize: 25, color: \"#ff689c\" }}>\n                        <b>Rate your experience</b>\n                    </Typography>\n                    <Rating\n                        name=\"ratings\"\n                        style={{ fontSize: 25, color: \"#f10053\" }}\n                        onChange={this.handleRating}\n                        value={this.state.ratings}\n                    />\n                    <br />\n                    {this.state.write && (\n                        <TextField\n                            id=\"outlined-multiline-static\"\n                            label=\"Write your review here\"\n                            multiline\n                            value={this.state.reviewText}\n                            name=\"reviewText\"\n                            rows={6}\n                            fullWidth\n                            onChange={this.handleChange}\n                            defaultValue=\"\"\n                            variant=\"outlined\"\n                            style={{ marginBottom: 5, marginTop: 15 }}\n                        />\n                    )}\n                    <Button\n                        size=\"small\"\n                        color=\"secondary\"\n                        variant=\"outlined\"\n                        onClick={this.handleClick}\n                        style={{ marginTop: 5 }}\n                    >\n                        {this.state.write ? \"submit\" : \"Add a review\"}\n                    </Button>\n                </Box>\n            </Grid>\n        );\n    }\n}\n\nexport default GiveReview;\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { Box } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport BallotOutlinedIcon from \"@material-ui/icons/BallotOutlined\";\nimport PhotoLibraryOutlinedIcon from \"@material-ui/icons/PhotoLibraryOutlined\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport DashboardOutlinedIcon from \"@material-ui/icons/DashboardOutlined\";\nimport AddBoxOutlinedIcon from \"@material-ui/icons/AddBoxOutlined\";\nimport DirectionsIcon from \"@material-ui/icons/Directions\";\nimport ShareIcon from \"@material-ui/icons/Share\";\n\nimport Address from \"./Adress\";\nimport Overview from \"./Overview\";\nimport Order from \"./Order\";\nimport Image from \"./Image\";\nimport Review from \"./Reviews\";\nimport GiveReview from \"./giveReview\";\nimport { getShopDetails } from \"../../../../services/dataServices\";\n\nconst useStyles = (theme) => ({\n    chip: {\n        margin: 2,\n    },\n    toolbarSecondary: {\n        justifyContent: \"space-between\",\n        overflowX: \"auto\",\n    },\n    toolbarLink: {\n        padding: theme.spacing(1),\n        margin: 5,\n        flexShrink: 0,\n        fontSize: 12,\n        cursor: \"pointer\",\n    },\n});\n\nconst tabs = [\n    { title: \"Book Slot\", value: 0, icon: <AddBoxOutlinedIcon /> },\n    { title: \"Reviews\", value: 1, icon: <BallotOutlinedIcon /> },\n    { title: \"Photos\", value: 2, icon: <PhotoLibraryOutlinedIcon /> },\n];\n\nclass ShopPage extends Component {\n    state = {\n        data: {},\n        tabPageNumber: 0,\n        isLoading: true,\n        address: \"\",\n    };\n\n    async componentDidMount() {\n        const id = this.props.match.params.shopId;\n        this.setState({ isLoading: true });\n        try {\n            const { data } = await getShopDetails(id);\n            this.setState({ data: data[0], isLoading: false });\n        } catch (ex) {\n            console.log(ex);\n        }\n    }\n\n    getTabPage = (id, data) => {\n        const tabPage = [\n            <Order data={data} />,\n            <Review id={data.shopId} />,\n            <Image />,\n        ];\n        return tabPage[id];\n    };\n\n    handleTabs = (event, tabPageNumber) => {\n        this.setState({ tabPageNumber });\n    };\n\n    handleDirection = () => {\n        const userAddress = localStorage\n            .getItem(\"userAddress\")\n            .split(\" \")\n            .join(\"%20\");\n        const destination = this.state.data.address.split(\" \").join(\"%20\");\n\n        window.open(\n            `https://www.google.com/maps/dir/?api=1&origin=${userAddress}&destination=${destination}`,\n            \"_blank\"\n        );\n    };\n\n    render() {\n        console.log(this.state, this.props.userAddress);\n        const { classes } = this.props;\n        const {\n            imgUrl,\n            tags,\n            payment_modes,\n            shopRating: rating,\n            address,\n            phoneNumber,\n            ownerName,\n            shopId,\n            shopName,\n            discount,\n            openingTimeIST,\n            closingTimeIST,\n            openingHour,\n            openingMinute,\n            closingHour,\n            closingMinute,\n        } = this.state.data;\n        const imageUrl =\n            imgUrl ||\n            \"https://picsum.photos/600/\" +\n                Math.round(Math.random(0, 1) * 200 + 500);\n\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                <Container maxWidth=\"xl\">\n                    <main>\n                        <Box boxShadow={0} p={2} style={{ width: \"100%\" }}>\n                            {this.state.isLoading ? (\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    xs\n                                    xl\n                                    lg\n                                    justify=\"center\"\n                                    style={{ marginTop: 20 }}\n                                >\n                                    <CircularProgress color=\"secondary\" />\n                                </Grid>\n                            ) : (\n                                <Grid container direction=\"row\" spacing={0}>\n                                    <Grid\n                                        item\n                                        container\n                                        sm={4}\n                                        md={4}\n                                        lg={4}\n                                        spacing={5}\n                                        direction=\"column\"\n                                        alignItems=\"center\"\n                                    >\n                                        <Grid item style={{ width: \"100%\" }}>\n                                            <Box\n                                                borderRadius={16}\n                                                boxShadow={3}\n                                                style={{\n                                                    backgroundImage: `url(${imageUrl})`,\n                                                    height: 450,\n                                                    backgroundSize: \"cover\",\n                                                    width: \"100%\",\n                                                }}\n                                            ></Box>\n                                        </Grid>\n                                        <Grid container item direction=\"row\">\n                                            <Grid\n                                                item\n                                                container\n                                                direction=\"column\"\n                                                sm={8}\n                                                lg={8}\n                                                md={8}\n                                                xl={8}\n                                                justify=\"flex-start\"\n                                                alignItems=\"flex-start\"\n                                            >\n                                                <Grid item>\n                                                    <Typography\n                                                        variant=\"h4\"\n                                                        style={{\n                                                            marginBottom: 10,\n                                                        }}\n                                                    >\n                                                        <b>{shopName}</b>\n                                                    </Typography>\n                                                    <Typography variant=\"body1\">\n                                                        <FiberManualRecordIcon\n                                                            style={{\n                                                                color: \"green\",\n                                                                fontSize: 13,\n                                                                marginRight: 5,\n                                                            }}\n                                                        />\n                                                        {openingTimeIST}\n                                                        <FiberManualRecordIcon\n                                                            style={{\n                                                                color: \"red\",\n                                                                fontSize: 13,\n                                                            }}\n                                                        />\n                                                        {closingTimeIST}\n                                                    </Typography>\n                                                </Grid>\n                                                <Grid\n                                                    item\n                                                    style={{\n                                                        marginTop: 20,\n                                                        marginBottom: 10,\n                                                    }}\n                                                >\n                                                    {tags.map((value) => (\n                                                        <Chip\n                                                            key={value}\n                                                            label={value}\n                                                            color=\"primary\"\n                                                            variant=\"outlined\"\n                                                            className={\n                                                                classes.chip\n                                                            }\n                                                        />\n                                                    ))}\n                                                </Grid>\n                                            </Grid>\n                                            <Grid\n                                                item\n                                                container\n                                                sm={4}\n                                                lg={4}\n                                                xl={4}\n                                                justify=\"flex-Start\"\n                                                alignItems=\"flex-end\"\n                                                direction=\"column\"\n                                            >\n                                                <Grid\n                                                    item\n                                                    container\n                                                    direction=\"row\"\n                                                    justify=\"flex-end\"\n                                                    style={{ marginBottom: 10 }}\n                                                >\n                                                    <Rating\n                                                        name=\"ratings\"\n                                                        defaultValue={rating[0]}\n                                                        precision={0.1}\n                                                        readOnly\n                                                        style={{\n                                                            fontSize: 40,\n                                                            color: \"red\",\n                                                        }}\n                                                    />\n                                                    <Typography\n                                                        variant=\"h5\"\n                                                        style={{\n                                                            marginTop: 5,\n                                                            marginLeft: 5,\n                                                        }}\n                                                    >\n                                                        <b>{rating[0]}</b>\n                                                    </Typography>\n                                                </Grid>\n                                                {/* <Grid\n                                                    item\n                                                    container\n                                                    direction=\"row\"\n                                                    justify=\"flex-end\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                    }}\n                                                >\n                                                    <Typography variant=\"body1\">\n                                                        {rating[1] + \" \"}\n                                                        reviews\n                                                    </Typography>\n                                                </Grid> */}\n                                                <br />\n                                                <Grid\n                                                    item\n                                                    container\n                                                    direction=\"row\"\n                                                    justify=\"flex-end\"\n                                                    spacing={5}\n                                                    style={{\n                                                        width: \"100%\",\n                                                    }}\n                                                >\n                                                    <Button\n                                                        variant=\"outlined\"\n                                                        style={{ margin: 5 }}\n                                                        color=\"secondary\"\n                                                        onClick={\n                                                            this.handleDirection\n                                                        }\n                                                        startIcon={\n                                                            <DirectionsIcon />\n                                                        }\n                                                    >\n                                                        direction\n                                                    </Button>\n                                                    <Button\n                                                        variant=\"outlined\"\n                                                        style={{ margin: 5 }}\n                                                        color=\"secondary\"\n                                                        startIcon={\n                                                            <ShareIcon />\n                                                        }\n                                                    >\n                                                        share\n                                                    </Button>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            container\n                                            spacing={2}\n                                            alignItems=\"center\"\n                                            justify=\"flex-start\"\n                                            direction=\"column\"\n                                        >\n                                            <Grid\n                                                item\n                                                style={{ width: \"100%\" }}\n                                            >\n                                                <Address\n                                                    data={{\n                                                        address,\n                                                        phoneNumber,\n                                                        ownerName,\n                                                    }}\n                                                />\n                                            </Grid>\n                                            <Grid\n                                                item\n                                                style={{ width: \"100%\" }}\n                                            >\n                                                    <GiveReview id={this.state.data.shopId}/>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item sm={1} md={1} lg={1}></Grid>\n                                    <Grid\n                                        item\n                                        container\n                                        sm={6}\n                                        md={6}\n                                        lg={6}\n                                        style={{ width: \"100%\" }}\n                                        spacing={5}\n                                        direction=\"column\"\n                                        alignItems=\"center\"\n                                    >\n                                        <Grid\n                                            item\n                                            container\n                                            direction=\"row\"\n                                            justify=\"center\"\n                                            style={{ width: \"100%\" }}\n                                        >\n                                            <Tabs\n                                                value={this.state.tabPageNumber}\n                                                onChange={this.handleTabs}\n                                                variant=\"scrollable\"\n                                                scrollButtons=\"auto\"\n                                                indicatorColor=\"secondary\"\n                                                textColor=\"secondary\"\n                                                aria-label=\"icon label tabs example\"\n                                            >\n                                                {tabs.map((tab) => (\n                                                    <Tab\n                                                        color=\"inherit\"\n                                                        noWrap\n                                                        icon={tab.icon}\n                                                        label={tab.title}\n                                                        key={tab.title}\n                                                        variant=\"body2\"\n                                                        className={\n                                                            classes.toolbarLink\n                                                        }\n                                                    />\n                                                ))}\n                                            </Tabs>\n                                        </Grid>\n                                        <Grid style={{ width: \"100%\" }}>\n                                            {this.getTabPage(\n                                                this.state.tabPageNumber,\n                                                this.state.data\n                                            )}\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            )}\n                        </Box>\n                    </main>\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(ShopPage);\n","import React, { Component } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport BookmarksRoundedIcon from \"@material-ui/icons/BookmarksRounded\";\nimport PowerSettingsNewRoundedIcon from \"@material-ui/icons/PowerSettingsNewRounded\";\n\nimport Shops from \"./shops\";\nimport { Route, Switch } from \"react-router-dom\";\nimport BookNewSlot from \"./bookSlot/BookSlot\";\nimport MyBookings from \"./myBookings\";\nimport MyProfile from \"./profile\";\nimport Logout from \"./Logout\";\nimport ShopPage from \"./shopPage/shopPage\";\nimport { userDetails } from \"../../../services/userService\";\n\nconst drawerWidth = 240;\n\nconst useStyles = (theme) => ({\n    root: {\n        display: \"flex\",\n        width: \"100%\",\n    },\n    drawer: {\n        [theme.breakpoints.up(\"sm\")]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        // [theme.breakpoints.up('sm')]: {\n        //   width: `calc(100% - ${drawerWidth}px)`,\n        //   marginLeft: drawerWidth,\n        // },\n        background: \"#f98b88\",\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        width: \"100%\",\n        padding: theme.spacing(3),\n    },\n    largeAvatar: {\n        width: theme.spacing(15),\n        height: theme.spacing(15),\n        margin: \"auto\",\n    },\n});\n\nclass MainPage extends Component {\n    state = {\n        data: [\n            {\n                path: \"/customer/profile\",\n                label: \"Profile\",\n                icon: <AccountBoxIcon />,\n            },\n            {\n                path: \"/customer/dashboard\",\n                label: \"Dashboard\",\n                icon: <DashboardIcon />,\n            },\n            {\n                path: \"/customer/booking\",\n                label: \"Bookings\",\n                icon: <BookmarksRoundedIcon />,\n            },\n            {\n                path: \"/customer/logout\",\n                label: \"Logout\",\n                icon: <PowerSettingsNewRoundedIcon />,\n            },\n        ],\n    };\n\n    async componentDidMount() {\n        try {\n            const response = await userDetails();\n            const { firstName, lastName } = response.data.userCredentials;\n            localStorage.setItem(\"userName\", firstName + \" \" + lastName);\n            console.log(response);\n        } catch (ex) {\n            console.log(ex.response)\n        }\n    }\n\n    handleClick = (path) => {\n        this.props.history.push(path);\n    };\n\n    render() {\n        const { window, classes, theme } = this.props;\n        const container =\n            window !== undefined ? () => window().document.body : undefined;\n\n        return (\n            <div className={classes.root}>\n                <CssBaseline />\n\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <Switch>\n                        <Route\n                            path=\"/customer/profile\"\n                            component={() => <MyProfile />}\n                        />\n                        <Route\n                            path=\"/customer/dashboard\"\n                            component={() => <Shops />}\n                        />\n                        <Route\n                            path=\"/customer/booknewslot/:uid\"\n                            component={BookNewSlot}\n                        />\n                        <Route\n                            path=\"/customer/booking/\"\n                            component={MyBookings}\n                        />\n                        <Route path=\"/customer/logout/\" component={Logout} />\n                        <Route\n                            path=\"/customer/shop/:shopId?\"\n                            component={ShopPage}\n                        />\n                        <Route path=\"/\" component={() => <Shops />} />\n                        {/* <Route path=\"/\" component={MyProfile} /> */}\n                    </Switch>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(withStyles(useStyles, { withTheme: true })(MainPage));\n","//Only for App.js, Includes Appbar and Options,\n\nimport React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport { withRouter } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Slide from \"@material-ui/core/Slide\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\n\n\n\n\nclass CustomAppBarClass extends Component {\n  state = {};\n\n  handlePath = (path) => {\n    this.props.history.push(path);\n  };\n\n  handleSignIn = () => {\n    this.props.history.push(\"/signin\");\n  }\n  \n  handleSignUp = () => {\n    this.props.history.push(\"/signup\");\n  }\n\n  HideOnScroll = (props) => {\n  const { children, window } = props;\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\n  render() {\n    const { menuOption, auth } = this.props;\n    const { HideOnScroll } = this;\n    return (\n      <HideOnScroll {...this.props}>\n        {/* <AppBar color=\"transparent\"  style={{ flexGrow: 1,  }} > */}\n        <AppBar style={{ flexGrow: 1, background: \"#00ff80\" }}>\n          <Toolbar>\n            <Typography variant=\"h4\" noWrap style={{ flexGrow: 1 }}>\n              <b>ShopSafeJU</b>\n            </Typography>\n            {auth ? (\n              <ProfileMenu\n                menuOption={menuOption || []}\n                handlePath={this.handlePath}\n              />\n            ) : (\n              <React.Fragment>\n                <Button\n                  variant=\"outlined\"\n                  onClick={this.handleSignIn}\n                  color=\"primary\"\n                  style={{ margin: 3 }}\n                >\n                  Sign In\n                </Button>\n                <Button\n                  variant=\"outlined\"\n                  onClick={this.handleSignUp}\n                  color=\"primary\"\n                  style={{ margin: 3 }}\n                >\n                  Sign Up\n                </Button>\n              </React.Fragment>\n            )}\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n    );\n  }\n}\n\n//export default withRouter(CustomAppBar);\n\nclass CustomFooter extends Component {\n\tstate = {  }\n\trender() { \n\t\treturn (\n            <footer\n                style={{\n                    backgroundColor: \"grey\",\n                    position: \"fixed\",\n                    left: 0,\n                    bottom: 0,\n                    marginTop:'auto',\n                    width: \"100%\",\n                }}\n            >\n                This is footer\n            </footer>\n        );\n\t}\n}\n\n\n\nclass ProfileMenu extends Component {\n  state = {\n    anchorEl: null,\n    menuOption: this.props.menuOption,\n  };\n\n  handleMenu = (event) => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  handlePath = (path) => {\n    this.props.handlePath(path);\n    this.handleClose();\n  };\n\n  render() {\n    const { anchorEl, menuOption } = this.state;\n    const { handleClose, handleMenu } = this;\n    return (\n      <div>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"menu-appbar\"\n          aria-haspopup=\"true\"\n          onClick={handleMenu}\n          color=\"inherit\"\n        >\n          <AccountCircle style={{ fontSize: 45 }} />\n        </IconButton>\n        <Menu\n          id=\"menu-appbar\"\n          anchorEl={anchorEl}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"right\",\n          }}\n          keepMounted\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"right\",\n          }}\n          open={anchorEl ? true : false}\n          onClose={handleClose}\n        >\n          {menuOption.map((option, i) => (\n            <MenuItem key={i} onClick={() => this.handlePath(option.path)}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </Menu>\n      </div>\n    );\n  }\n}\n\n\nexport const CustomAppBar = withRouter(CustomAppBarClass);\nexport const Footer = withRouter(CustomFooter);","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport http from \"../services/httpServices\";\nimport { getShopList } from '../services/dataServices';\nimport { Box, Grid } from \"@material-ui/core\";\n\nconst sha = require(\"sha256\");\n\nclass Home extends Component {\n  state = {};\n  \n  render() {\n    \n    return (\n        <div>\n            hello\n        </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { logout } from '../../../services/userService';\n\n\nclass Logout extends Component {\n    state = {}\n    async componentDidMount() {\n        try {\n            const response = await logout();\n            console.log(response);\n        } catch (ex) {\n            console.log(ex);\n        } finally {\n            localStorage.clear();\n            window.location = \"/\";\n        }\n    }\n    render() { \n        return ( null );\n    }\n}\n \nexport default withRouter(Logout);","import React, { Component } from \"react\";\nimport ApexCharts from \"react-apexcharts\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Box, Typography } from \"@material-ui/core\";\n\n\nconst useStyles = (theme) => ({\n    root: { margin: 5, height: \"50%\", width: \"95%\" },\n});\n\nclass ApexLineChart extends Component {\n    state = {\n        series: [\n            {\n                name: \"Customer Booked\",\n                data: [\n                    84,\n                    92,\n                    85,\n                    79,\n                    96,\n                    109,\n                    100,\n                    102,\n                    86,\n                    79,\n                    93,\n                    86,\n                    70,\n                    121,\n                    89,\n                    95,\n                    84,\n                ],\n            },\n            {\n                name: \"Turn Ups\",\n                data: [\n                    78,\n                    88,\n                    85,\n                    72,\n                    90,\n                    92,\n                    95,\n                    100,\n                    81,\n                    77,\n                    82,\n                    86,\n                    70,\n                    115,\n                    82,\n                    88,\n                    83,\n                ],\n            },\n        ],\n        options: {\n            chart: {\n                height: 350,\n                type: \"area\",\n            },\n            dataLabels: {\n                enabled: false,\n            },\n            stroke: {\n                curve: \"smooth\",\n            },\n            xaxis: {\n                type: \"datetime\",\n                categories: [\n                    \"2018-09-14T\",\n                    \"2018-09-15T\",\n                    \"2018-09-16T\",\n                    \"2018-09-17T\",\n                    \"2018-09-18T\",\n                    \"2018-09-19T\",\n                    \"2018-09-20T\",\n                    \"2018-09-21T\",\n                    \"2018-09-22T\",\n                    \"2018-09-23T\",\n                    \"2018-09-24T\",\n                    \"2018-09-25T\",\n                    \"2018-09-26T\",\n                    \"2018-09-27T\",\n                    \"2018-09-28T\",\n                    \"2018-09-29T\",\n                    \"2018-09-30T\",\n                ],\n            },\n            tooltip: {\n                x: {\n                    format: \"dd/MM/yy HH:mm\",\n                },\n            },\n        },\n    };\n    render() {\n        const { classes } = this.props;\n        return (\n            <Box\n                m={3}\n                p={1}\n                borderRadius={5}\n                boxShadow={5}\n                style={{ width: \"96%\" }}\n            >\n                <Typography variant=\"h4\" style={{ marginLeft: 5 }}>\n                    {this.props.shopData.shopName}\n                </Typography>\n                <ApexCharts\n                    className={classes.root}\n                    options={this.state.options}\n                    series={this.state.series}\n                    type=\"area\"\n                    height={370}\n                />\n            </Box>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(ApexLineChart);\n","import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport ApexCharts from \"react-apexcharts\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport { getShopDetailsAuthorized } from '../../../../services/userService';\n\n\n\nfunction timeString(h, m = 0) {\n    let d = new Date();\n    d.setHours(h);\n    d.setMinutes(m);\n    return d.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n    });\n}\n\nclass SimpleStatCard extends Component {\n    state = {\n        shopData: this.props.shopData,\n        CustomerServedToday: this.props.data.filter(c => c.status == 2).length,\n        UpcomingCustomer:this.props.data.filter(c => c.status == 1).length,\n    };\n\n\n    render() {\n        const { shopData } = this.state;\n        return (\n            <Box m={3} borderRadius={5} p={2} boxShadow={5}>\n                <Grid item container direction=\"row\" spacing={2}>\n                    <Grid item container direction=\"row\" xs={12} spacing={5}>\n                        <Grid item xs={8}>\n                            <Typography variant=\"h5\" color=\"textSecondary\">\n                                Customer Served Today\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"h5\">\n                                {this.state.CustomerServedToday}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid item container direction=\"row\" xs={12} spacing={5}>\n                        <Grid item xs={8}>\n                            <Typography variant=\"h5\" color=\"textSecondary\">\n                                Upcoming customer\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"h5\">\n                                {this.state.UpcomingCustomer}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid item container direction=\"row\" xs={12}>\n                        {/* <Grid item xs={12}>\n                            <Typography\n                                variant=\"h6\"\n                                color=\"textSecondary\"\n                                align=\"center\"\n                            >\n                                Working Hour\n                            </Typography>\n                        </Grid> */}\n                        <Grid item xs={6}>\n                            <Typography\n                                variant=\"h5\"\n                                align=\"center\"\n                                gutterBottom\n                                style={{\n                                    paddingLeft: 10,\n                                    margin: \"auto\",\n                                }}\n                            >\n                                <FiberManualRecordIcon\n                                    style={{\n                                        color: \"green\",\n                                        fontSize: 24,\n                                        marginRight: 5,\n                                    }}\n                                />\n                                {timeString(\n                                    shopData.openingHour,\n                                    shopData.openingMinute\n                                )}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography\n                                variant=\"h5\"\n                                align=\"center\"\n                                gutterBottom\n                                style={{\n                                    paddingLeft: 10,\n                                    margin: \"auto\",\n                                }}\n                            >\n                                <FiberManualRecordIcon\n                                    style={{\n                                        color: \"red\",\n                                        fontSize: 24,\n                                        marginLeft: 10,\n                                    }}\n                                />\n                                {timeString(\n                                    shopData.closingHour,\n                                    shopData.closingMinute\n                                )}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Box>\n        );\n    }\n}\n\nexport default (SimpleStatCard);\n\nexport class TodayChart extends Component {\n           state = {\n               series: [\n                   {\n                       name: \"Morning\",\n                       data: [\n                           this.props.data.filter((c) => c.arrivalHour < 12)\n                               .length,\n                       ],\n                   },\n                   {\n                       name: \"Afternoon\",\n                       data: [\n                           this.props.data.filter((c) => c.arrivalHour >= 12 && c.arrivalHour <18)\n                               .length,\n                       ],\n                   },\n                   {\n                       name: \"Evening\",\n                       data: [\n                           this.props.data.filter((c) => c.arrivalHour >= 18)\n                               .length,\n                       ],\n                   },\n               ],\n               options: {\n                   chart: {\n                       type: \"bar\",\n                       height: 180,\n                   },\n                   plotOptions: {\n                       bar: {\n                           horizontal: false,\n                           columnWidth: \"55%\",\n                           //endingShape: \"rounded\",\n                       },\n                   },\n                   dataLabels: {\n                       enabled: false,\n                   },\n                   stroke: {\n                       show: true,\n                       width: 2,\n                       colors: [\"transparent\"],\n                   },\n                   xaxis: {\n                       categories: [\"Today\"],\n                   },\n                   yaxis: {\n                       title: {\n                           text: \"Number of Customer\",\n                       },\n                   },\n                   fill: {\n                       opacity: 1,\n                   },\n               },\n           };\n           render() {\n               return (\n                   <Box m={3} borderRadius={5} p={5} boxShadow={5}>\n                       <Grid container direction=\"row\" spacing={2}>\n                           <Grid item xs={12}>\n                               <Typography variant=\"h5\" color=\"textSecondary\">\n                                   Current Statistics\n                               </Typography>\n                           </Grid>\n                           <Grid\n                               item\n                               container\n                               direction=\"row\"\n                               xs={12}\n                               spacing={3}\n                               justify=\"center\"\n                           >\n                               <Grid item xs={4}>\n                                   <Typography variant=\"subtitle1\">\n                                       Morning{\" \"}\n                                       {\n                                           this.props.data.filter(\n                                               (c) => c.arrivalHour < 12\n                                           ).length\n                                       }\n                                   </Typography>\n                               </Grid>\n                               <Grid item xs={4}>\n                                   <Typography variant=\"subtitle1\">\n                                       Afternoon{\" \"}\n                                       {\n                                           this.props.data.filter(\n                                               (c) =>\n                                                   c.arrivalHour >= 12 &&\n                                                   c.arrivalHour < 18\n                                           ).length\n                                       }\n                                   </Typography>\n                               </Grid>\n                               <Grid item xs={4}>\n                                   <Typography variant=\"subtitle1\">\n                                       Evening{\" \"}\n                                       {\n                                           this.props.data.filter(\n                                               (c) => c.arrivalHour >= 18\n                                           ).length\n                                       }\n                                   </Typography>\n                               </Grid>\n                           </Grid>\n                           <Grid item xs={12}>\n                               <ApexCharts\n                                   options={this.state.options}\n                                   series={this.state.series}\n                                   type=\"bar\"\n                                   height={200}\n                               />\n                           </Grid>\n                       </Grid>\n                   </Box>\n               );\n           }\n       }\n","import React, { Component } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Box,Grid, Typography } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { getShopBookings } from \"../../../../services/dataServices\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\n\n\n\nfunction timeString(h, m = 0) {\n    let d = new Date();\n    d.setHours(h);\n    d.setMinutes(m);\n    return d.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n    });\n}\n\nclass UpcomingBookingsTable extends Component {\n    state = {\n        isLoading: false,\n        errorMessage: \"\",\n        bookingsData: this.props.data,\n    };\n\n    \n\n    filteredList = () => {\n        const d = new Date();\n        return this.state.bookingsData.filter(c => {\n            let ct = new Date(c.createdAt);\n            ct.setHours(c.arrivalHour); ct.setMinutes(c.arrivalMinute);\n            return (d.getTime() < ct.getTime() && c.status==1);\n        });\n    };\n\n    render() {\n        // const { data } = this.state;\n        const data = this.filteredList();\n        return (\n            <Box m={3} borderRadius={5} boxShadow={5}>\n                {/*  */}\n                <Grid container direction=\"row\">\n                    <Typography\n                        variant=\"h5\"\n                        color=\"textSecondary\"\n                        style={{ margin: 10 }}\n                    >\n                        Upcoming Bookings\n                    </Typography>\n                    <TableContainer component={Paper}>\n                        <Table\n                            style={{\n                                width: \"100%\",\n                                margin: \"auto\",\n                            }}\n                            aria-label=\"simple table\"\n                        >\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell></TableCell>\n                                    <TableCell\n                                        align=\"center\"\n                                        style={{ fontSize: 20 }}\n                                    >\n                                        Name\n                                    </TableCell>\n                                    <TableCell\n                                        align=\"center\"\n                                        style={{ fontSize: 20 }}\n                                    >\n                                        Items\n                                    </TableCell>\n                                    <TableCell\n                                        align=\"center\"\n                                        style={{ fontSize: 20 }}\n                                    >\n                                        Slot\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {data.map((row, i) => (\n                                    <TableRow key={i}>\n                                        <TableCell\n                                            component=\"th\"\n                                            scope=\"row\"\n                                            align=\"center\"\n                                        >\n                                            {i + 1}\n                                            {/* <Avatar src={row.imgUrl} /> */}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 17 }}\n                                        >\n                                            {row.customerName}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 17 }}\n                                        >\n                                            {row.purchaseItems}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 17 }}\n                                        >{`${timeString(\n                                            row.arrivalHour,\n                                            row.arrivalMinute\n                                        )} - ${timeString(\n                                            row.deliveryHour,\n                                            row.deliveryMinute\n                                        )}`}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Grid>\n            </Box>\n        );\n    }\n}\n\nexport default UpcomingBookingsTable;\n","import React, { Component } from \"react\";\nimport ApexLineChart from \"./components/graph\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SimpleStatCard, { TodayChart } from \"./components/simpleStat\";\nimport UpcomingBookingsTable from \"./components/UpcomingBookingsTable\";\nimport { getShopBookings } from \"../../../services/dataServices\";\nimport { getShopDetailsAuthorized } from \"../../../services/userService\";\n\nclass ShopDashboard extends Component {\n    state = {\n        isLoading: false,\n        errorMessage: \"\",\n        bookingsData: [],\n        shopData: {},\n    };\n\n    async componentDidMount() {\n        this.setState({ isLoading: true });\n        try {\n            const response1 = await getShopBookings();\n            console.log(response1.data);\n            this.setState({ bookingsData: response1.data, errorMessage: \"\" });\n            const response2 = await getShopDetailsAuthorized();\n            this.setState({ shopData: response2.data.userCredentials });\n        } catch (ex) {\n            console.log(ex.response);\n            this.setState({\n                errorMessage:\n                    \"Firebase ID token has expired. Get a fresh ID token by RE SIGN IN.\",\n            });\n        }\n        this.setState({ isLoading: false });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Grid container xl spacing={0} style={{ marginTop: 80 }}>\n                    {this.state.isLoading ? (\n                        <CircularProgress\n                            style={{ marginLeft: window.innerWidth * 0.48 }}\n                        />\n                    ) : this.state.errorMessage ? (\n                        <h2 style={{ paddingTop: 60 }}>\n                            {this.state.errorMessage}\n                        </h2>\n                    ) : (\n                        <React.Fragment>\n                            <Grid item sm={4} md={4} lg={4} xl={4}>\n                                <TodayChart data={this.state.bookingsData} />\n                            </Grid>\n                            <Grid item sm={8} md={8} lg={8} xl={8}>\n                                <ApexLineChart shopData={this.state.shopData} />\n                            </Grid>\n                            <Grid item sm={4} md={4} lg={4} xl={4}>\n                                <SimpleStatCard\n                                    data={this.state.bookingsData}\n                                    shopData={this.state.shopData}\n                                />\n                            </Grid>\n                            <Grid item sm={8} md={8} lg={8} xl={8}>\n                                <UpcomingBookingsTable\n                                    data={this.state.bookingsData}\n                                />\n                            </Grid>\n                        </React.Fragment>\n                    )}\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ShopDashboard;\n","import React, { Component } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Box, Typography, Grid, TextField, Button } from \"@material-ui/core\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { getShopBookings } from \"../../../services/dataServices\";\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { validateSlotByOtp } from \"../../../services/userService\";\n\nfunction timeString(h, m = 0) {\n    let d = new Date();\n    d.setHours(h);\n    d.setMinutes(m);\n    return d.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n    });\n}\n\nclass ViewBookings extends Component {\n    state = {\n        isLoading: false,\n        errorMessage: \"\",\n        bookingsData: [],\n        filter: { status: \"All\", period: [\"Morning\", \"Afternoon\", \"Evening\"] },\n    };\n\n    async componentDidMount() {\n        this.setState({ isLoading: true });\n        try {\n            const response = await getShopBookings();\n            console.log(response.data);\n            this.setState({ bookingsData: response.data, errorMessage: \"\" });\n        } catch (ex) {\n            console.log(ex.response);\n            this.setState({\n                errorMessage:\n                    \"Firebase ID token has expired. Get a fresh ID token by RE SIGN IN.\",\n            });\n        }\n        this.setState({ isLoading: false });\n    }\n\n    updateFilter = (filter) => {\n        this.setState({ filter });\n        this.forceUpdate();\n    };\n\n    updateStatus = (data) => {\n        //data.status = 2;\n        let bookingsData = [...this.state.bookingsData];\n        const index = bookingsData.indexOf(data);\n        console.log(data, bookingsData, index);\n        bookingsData[index].status = 2;\n        this.setState({ bookingsData });\n    };\n\n    filterData = () => {\n        const { status, period } = this.state.filter;\n        let data = [...this.state.bookingsData];\n        console.log(period);\n        //filter by period\n        if (period.indexOf(\"Morning\") == -1) {\n            data = data.filter((c) => c.arrivalHour >= 12);\n        }\n        if (period.indexOf(\"Afternoon\") == -1) {\n            data = data.filter(\n                (c) => c.arrivalHour >= 18 || c.arrivalHour < 12\n            );\n        }\n        if (period.indexOf(\"Evening\") == -1) {\n            data = data.filter((c) => c.arrivalHour < 18);\n        }\n\n        //filter according to status\n        if (status.localeCompare(\"All\") == 0) return data;\n        else if (status.localeCompare(\"Pending\") == 0)\n            return data.filter((c) => c.status == 1);\n        else if (status.localeCompare(\"Complete\") == 0)\n            return data.filter((c) => c.status == 2);\n        else if (status.localeCompare(\"Expired\") == 0)\n            return data.filter((c) => c.status == 0);\n    };\n\n    // arrivalHour: 3;\n    // arrivalMinute: 0;\n    // arrivalTimeIST: \"3 AM\";\n    // bookingId: \"kvalOpAcU4mj8ENy3Ovc\";\n    // createdAt: \"2020-07-28T18:47:04.441Z\";\n    // customerId: \"iS3rFzmTr6MPbySvMjaiBlR8MDO2\";\n    // deliveryHour: 3;\n    // deliveryMinute: 30;\n    // deliveryTimeIST: \"3:30 AM\";\n    // duration: 30;\n    // purchaseItems: \"tiktok,katbery,fsafas,Dettol\";\n    // shopId: \"25QLTdo85CRarWC0b3Rc4YG5Ozu2\";\n    // slotGroupBegins: 3;\n    // slotGroupEnds: 4;\n\n    render() {\n        const data = this.filterData();\n        return (\n            <Container maxWidth=\"lg\" style={{ marginTop: 90 }}>\n                {this.state.isLoading ? (\n                    <CircularProgress\n                        style={{ marginLeft: window.innerWidth * 0.48 }}\n                    />\n                ) : this.state.errorMessage ? (\n                    <h2 style={{ paddingTop: 60 }}>\n                        {this.state.errorMessage}\n                    </h2>\n                ) : (\n                    <React.Fragment>\n                        <Grid container direction=\"row\">\n                            <Grid\n                                item\n                                container\n                                direction=\"row\"\n                                spacing={2}\n                                xs={6}\n                            >\n                                <Grid item>\n                                    <Typography\n                                        variant=\"h5\"\n                                        color=\"textSecondary\"\n                                    >\n                                        All Bookings\n                                    </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Chip\n                                        color=\"primary\"\n                                        label={\n                                            \"Total: \" +\n                                            this.state.bookingsData.length\n                                        }\n                                        style={{\n                                            fontSize: 20,\n                                        }}\n                                    ></Chip>\n                                </Grid>\n                                <Grid item>\n                                    <Chip\n                                        color=\"secondary\"\n                                        label={\n                                            \"Pending: \" +\n                                            this.state.bookingsData.filter(\n                                                (c) => c.status == 1\n                                            ).length\n                                        }\n                                        style={{\n                                            color: \"black\",\n                                            backgroundColor: \"#ffbf00\",\n                                            fontSize: 20,\n                                        }}\n                                    ></Chip>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Filter setFilter={this.updateFilter} />\n                            </Grid>\n                        </Grid>\n                        <br />\n                        <br />\n                        <TableContainer component={Paper}>\n                            <Table\n                                style={{ width: \"100%\", margin: \"auto\" }}\n                                aria-label=\"simple table\"\n                            >\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell\n                                            size=\"small\"\n                                            align=\"right\"\n                                        ></TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 20 }}\n                                        >\n                                            <b>Name</b>\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 20 }}\n                                        >\n                                            <b>Items</b>\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 20 }}\n                                        >\n                                            <b>Slot</b>\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 20 }}\n                                        >\n                                            <b>Duration</b>\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            style={{ fontSize: 20 }}\n                                        >\n                                            <b>Status</b>\n                                        </TableCell>\n                                        <TableCell />\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {data.map((row, i) => (\n                                        <RowBody\n                                            key={i}\n                                            data={row}\n                                            index={i}\n                                            updateStatus={this.updateStatus}\n                                        />\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </React.Fragment>\n                )}\n            </Container>\n        );\n    }\n}\n\nexport default ViewBookings;\n\nclass RowBody extends Component {\n    state = {\n        data: this.props.data,\n    };\n\n    getChip = (status) => {\n        if (status == 1)\n            return (\n                <Chip\n                    style={{\n                        backgroundColor: \"#ffbf00\",\n                    }}\n                    icon={<ErrorOutlineIcon />}\n                    label=\"Pending\"\n                />\n            );\n        else if (status == 0)\n            return <Chip icon={<CancelOutlinedIcon />} label=\"Expired\" />;\n        else if (status == 2)\n            return (\n                <Chip\n                    style={{\n                        backgroundColor: \"#00f600\",\n                    }}\n                    icon={<CheckCircleOutlineOutlinedIcon />}\n                    label=\"Complete\"\n                />\n            );\n    };\n\n    handleOtp = async (otp) => {\n        try {\n            const response = await validateSlotByOtp(\n                this.props.data.bookingId,\n                otp\n            );\n            if (response.status == 200) {\n                this.props.updateStatus(this.props.data);\n            }\n            console.log(response);\n        } catch (ex) {\n            console.log(ex);\n            alert(\"Something went wrong\");\n        }\n        console.log(otp);\n    };\n\n    render() {\n        const { data: row,index } = this.props;\n        return (\n            <TableRow>\n                <TableCell align=\"right\" size=\"small\">\n                    {index+ 1}\n                </TableCell>\n                <TableCell align=\"center\" style={{ fontSize: 17 }}>\n                    {row.customerName || \"DemoName Zunaid\"}\n                </TableCell>\n                <TableCell align=\"center\" style={{ fontSize: 17 }}>\n                    {row.purchaseItems}\n                </TableCell>\n                <TableCell\n                    align=\"center\"\n                    style={{ fontSize: 17 }}\n                >{`${row.arrivalTimeIST} ⟶ ${row.deliveryTimeIST}`}</TableCell>\n                <TableCell align=\"center\" style={{ fontSize: 17 }}>\n                    {row.duration}\n                </TableCell>\n                <TableCell align=\"center\" style={{ fontSize: 17 }}>\n                    {this.getChip(row.status)}\n                </TableCell>\n                <TableCell align=\"center\" style={{ fontSize: 17 }}>\n                    {row.status == 1 ? (\n                        <OTP submitOtp={this.handleOtp} />\n                    ) : null}\n                </TableCell>\n            </TableRow>\n        );\n    }\n}\n\nclass Filter extends Component {\n    state = {\n        period: [\"Morning\", \"Afternoon\", \"Evening\"],\n        status: \"All\",\n    };\n\n    handleChange = (event) => {\n        let data = { ...this.state };\n        this.setState({ [event.target.name]: event.target.value });\n        data[event.target.name] = event.target.value;\n        this.props.setFilter(data);\n    };\n\n    render() {\n        const { period, status } = this.state;\n        const MenuProps = {\n            PaperProps: {\n                style: {\n                    maxHeight: 224,\n                    width: 160,\n                },\n            },\n        };\n\n        return (\n            <Paper elevation={0}>\n                <Grid container direction=\"row\" spacing={2} justify=\"flex-end\">\n                    <Grid item>\n                        <FormControl style={{ minWidth: 150, maxWidth: 300 }}>\n                            <InputLabel id=\"demo-mutiple-checkbox-label\">\n                                Period\n                            </InputLabel>\n                            <Select\n                                labelId=\"demo-mutiple-checkbox-label\"\n                                id=\"demo-mutiple-checkbox\"\n                                multiple\n                                name=\"period\"\n                                value={period}\n                                onChange={this.handleChange}\n                                input={<Input />}\n                                renderValue={(selected) => selected.join(\", \")}\n                                MenuProps={MenuProps}\n                            >\n                                {[\"Morning\", \"Afternoon\", \"Evening\"].map(\n                                    (name) => (\n                                        <MenuItem key={name} value={name}>\n                                            <Checkbox\n                                                checked={\n                                                    period.indexOf(name) > -1\n                                                }\n                                            />\n                                            <ListItemText primary={name} />\n                                        </MenuItem>\n                                    )\n                                )}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item>\n                        <FormControl style={{ minWidth: 150, maxWidth: 300 }}>\n                            <InputLabel id=\"demo-simple-select-label\">\n                                Status\n                            </InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={status}\n                                name=\"status\"\n                                onChange={this.handleChange}\n                            >\n                                {[\"All\", \"Complete\", \"Pending\", \"Expired\"].map(\n                                    (name) => (\n                                        <MenuItem key={name} value={name}>\n                                            {name}\n                                        </MenuItem>\n                                    )\n                                )}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n            </Paper>\n        );\n    }\n}\n\nclass OTP extends Component {\n    state = {\n        showInputField: false,\n        otp: \"\",\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        this.setState({ [input.name]: input.value });\n    };\n\n    handleClick = () => {\n        if (this.state.showInputField) {\n            if (this.state.otp) this.props.submitOtp(parseInt(this.state.otp));\n        } else {\n            this.setState({ showInputField: true });\n        }\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.state.showInputField ? (\n                    <TextField\n                        name=\"otp\"\n                        size=\"small\"\n                        variant=\"outlined\"\n                        onChange={this.handleChange}\n                        label=\"OTP\"\n                        style={{ margin: 5 }}\n                    />\n                ) : null}\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={this.handleClick}\n                >\n                    {this.state.otp ? \"Submit\" : \"approve\"}\n                </Button>\n            </React.Fragment>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nclass ShopProfile extends Component {\n    state = {  }\n    render() { \n        return ( \n            <h1 style={{margin:90}}>Hello</h1>\n         );\n    }\n}\n \nexport default ShopProfile;","import React, { Component } from \"react\";\nimport ShopDashboard from \"./dashBoard\";\nimport Logout from \"./shopLogout\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { getShopBookings } from \"../../../services/dataServices\";\nimport ViewBookings from './viewBookings';\nimport ShopProfile from './ShopProfile';\n\nclass ShopMainPage extends Component {\n    state = {};\n\n    \n    render() {\n        return (\n            <main style={{ display: \"flex\", width: \"100%\" }}>\n                {this.state.isLoading ? (\n                    <CircularProgress />\n                ) : this.state.errorMessage ? (\n                    <h2 style={{ paddingTop: 60 }}>\n                        {this.state.errorMessage}\n                    </h2>\n                ) : (\n                    <Switch>\n                        {/* <Route\n                        path=\"/shopowner/profile\"\n                        component={() => (\n                            <MyProfile />\n                        )}\n                    /> */}\n                        <Route\n                            path=\"/shopowner/dashboard\"\n                            component={() => <ShopDashboard />}\n                        />\n                        <Route\n                            path=\"/shopowner/bookings/\"\n                            component={ViewBookings}\n                        />\n                        <Route\n                            path=\"/shopowner/shopprofile/\"\n                            component={ShopProfile}\n                        />\n                        <Route path=\"/shopowner/logout/\" component={Logout} />\n                        <Route\n                            path=\"/shopowner\"\n                            component={() => <ShopDashboard />}\n                        />\n                    </Switch>\n                )}\n            </main>\n        );\n    }\n}\n\nexport default ShopMainPage;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport SignIn from \"./components/pages/signin\";\nimport SignUp from \"./components/pages/registration\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport MainPage from \"./components/pages/customer/mainPage\";\nimport {CustomAppBar,Footer} from \"./components/AppComponent\";\nimport Home from \"./components/home\";\nimport Logout from \"./components/pages/shopowner/shopLogout\";\nimport { withRouter } from \"react-router-dom\";\nimport ShopMainPage from './components/pages/shopowner/shopMainPage';\n\nclass App extends Component {\n    state = {\n        auth: {\n            customerLogged: false,\n            //localStorage.getItem(\"userLogged\") && !localStorage.getItem(\"isShop\"),\n            shopOwnerLogged: false,\n            //localStorage.getItem(\"userLogged\") && localStorage.getItem(\"isShop\"),\n        },\n        customerMenu: [\n            {\n                path: \"/customer/profile\",\n                label: \"Profile\",\n                //icon: <AccountBoxIcon />,\n            },\n            {\n                path: \"/customer/dashboard\",\n                label: \"Dashboard\",\n                //icon: <DashboardIcon />,\n            },\n            {\n                path: \"/customer/booking\",\n                label: \"Bookings\",\n                //icon: <BookmarksRoundedIcon />,\n            },\n            {\n                path: \"/customer/logout\",\n                label: \"Logout\",\n                //icon: <PowerSettingsNewRoundedIcon />,\n            },\n        ],\n        shopOwnerMenu: [\n            {\n                path: \"/shopowner/shopprofile\",\n                label: \"Shop Profile\",\n            },\n            {\n                path: \"/shopowner/dashboard\",\n                label: \"Dashboard\",\n            },\n            {\n                path: \"/shopowner/bookings\",\n                label: \"View Bookings\",\n            },\n            {\n                path: \"/logout\",\n                label: \"Logout\",\n            },\n        ],\n    };\n\n    componentDidMount() {\n        try {\n            if (localStorage.getItem(\"userLogged\")) {\n                const check = localStorage.getItem(\"isShop\");\n                console.log(\"cdm\", check);\n                if (check) {\n                    console.log(\"cdm shopOwnerLogged\", check);\n                    this.setState({ auth: { shopOwnerLogged: true } });\n                    this.props.history.push(\"/shopowner\");\n                } else {\n                    console.log(\"cdm customerLogged\", check);\n                    this.setState({ auth: { customerLogged: true } });\n                    this.props.history.push(\"/customer\");\n                }\n            }\n        } catch (ex) {}\n    }\n\n    handleAuth = (authname) => {\n        this.setState({ auth: { [authname]: true } });\n    };\n\n    darkTheme = createMuiTheme({\n        palette: {\n            type: \"light\",\n            //   primary: {\n            //     main: orange[500],\n            //   },\n            //   secondary: {\n            //     main: deepOrange[900],\n            //   },\n        },\n    });\n\n    render() {\n        const {\n            customerMenu,\n            shopOwnerMenu,\n            auth: { customerLogged, shopOwnerLogged },\n            userLoggedIn,\n        } = this.state;\n        // return (\n        //     <ThemeProvider theme={this.darkTheme}>\n        //         <div style={{flexGrow:1,marginTop:40}}>\n        //             <Grid\n        //                 container\n        //                 direction=\"row\"\n        //                 justify=\"center\"\n        //                 alignItems=\"baseline\"\n        //             >\n        //                 <Switch>\n        //                     <Route path=\"/signup\" component={SignUp}/>\n        //                     <Route path=\"/signin\" component={SignIn}/>\n        //                     <Route path=\"/\" component={() => <Sidebar userData={this.state.data}/>}/>\n        //                 </Switch>\n        //             </Grid>\n        //         </div>\n        //     </ThemeProvider>\n        //  );\n\n        const menuOption =\n            (shopOwnerLogged || customerLogged) &&\n            (customerLogged ? customerMenu : shopOwnerMenu);\n        return (\n            <div style={{ flexGrow: 1, backgroundColor:'#ffffff' }}>\n                <CustomAppBar\n                    menuOption={menuOption}\n                    auth={shopOwnerLogged || customerLogged}\n                />\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    style={{ marginTop: 20, width: \"100%\", margin: \"auto\", }}\n                >\n                    <Switch>\n                        <Route\n                            path=\"/signin\"\n                            component={() => (\n                                <SignIn handleAuth={this.handleAuth} />\n                            )}\n                        />\n                        <Route path=\"/logout\" component={() => <Logout />} />\n                        <Route\n                            path=\"/signup\"\n                            component={() => (\n                                <SignUp handleAuth={this.handleAuth} />\n                            )}\n                        />\n                        {shopOwnerLogged && (\n                            <Route\n                                path=\"/shopowner\"\n                                component={() => <ShopMainPage />}\n                            />\n                        )}\n                        {customerLogged && (\n                            <Route\n                                path=\"/customer\"\n                                component={() => (\n                                    <MainPage />\n                                )}\n                            />\n                        )}\n                        <Route path=\"/\" exact component={Home} />\n                    </Switch>\n                </Grid>\n                <Footer\n                    \n                />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}